Timestamp: 2024-12-27T02:27:27.949214
Title: 6850亿参数混合专家(MoE)架构开源大模型！Deepseek V3全方位客观评测文档处理、逻辑推理、算法编程等多维度的真实能力水平！是卓越还是拉胯？真能超越Claude还是言过其实？#claude BnoMTeKxwBQ
URL: https://youtube.com/watch?v=BnoMTeKxwBQ&si=IeLpH1X9KKgxal3y
Status: success

Description:
**核心要点:**

1. **新型大模型发布:** DepsyC发布了K-1型V3模型，混合专家架构，参数量巨大，但具体参数未知，知识截止日期为2024年7月。
2. **模型能力测试:**
    *   **基础能力:** 班名号、知识库截止日期验证通过。
    *   **文档处理:** 能总结PDF文件内容，但处理超大文件时有读取限制。
    *   **推理能力:**  能解决简单的逻辑推理题，但复杂问题（如组合推理）会陷入死循环。
    *   **编程能力:** 能生成代码，但算法效率不高，解决复杂编程问题（如贪吃蛇游戏）时表现欠佳，无法一次给出正确代码。
3.  **模型对比:**  与Cloud等模型对比，DepSyC在复杂问题和编程能力方面存在明显差距。

**总结:** DepsyC V3模型在基础能力和简单问题上表现尚可，但在复杂推理、算法和编程等高阶能力上，与一些成熟模型相比存在不足，仍需改进。


Content:
欢迎来到AI超原域DepsyC发布了最新的K-1那么型DepsyC和V3现在可以直接在Hungary Face上还下在这款模型的全中文件了而且我们可以直接在DepsyC和官方来使用V3去款K-1模型由于官方还没有发布详细的参数介绍我们目前只能速速地关于这款模型的有限信息这款模型采用了混合专家价格总参数为685B包括256个专家模型而且就款模型的绝职日期是2024年7月本期视频我们将从逻辑锤底还有编程能力等多方面来测试DepsyC和V3这款大模型的综合能力我们先测试一下这款模型的班明号我们直接提稳它的班明号然后发送这里它回答它的班明号是DepsyCV3由深入厨所公司开发的只能住手下面我们再问一下它的知识库的截止日期然后我们直接发送这里它给出的回答是知识库的截止日期是2024年7月为了验证一下它说的它的知识库是2024年7月我们直接问它Python最新版本的班明号是多少我们这里输入的是在你的知识库中你所知道的Python最新版的班明号是多少然后我们直接发送它这里给出了Python的班明号是3.12也就是在它的知识库的截止日期中Python的班明号是3.12这个是没有问题的接受面他给出的截止日期并不是瞎说下面我们测试一下这款模型对PDF文件的处理能力我们直接选择一个PDF文件让它做下综接我这里上传了一个PDF文件是最近接了一个AAS人和相关的项目这是一个项目需求我们直接输入总结这个文件的内容然后我们直接发送看一下它能否正确的总结这个PDF文件这里它很快对于这个PDF文件进行了总结它说这个文件描述了一个基于人工只能的医疗问诊辅助系统的项目概述包括功能需求非功能需求实施重点风险以及成功标准然后下面就是它的这个文件做出的详细的总结这里我们就不再具体去看了它对于这个文件总结的还是比较不错的下面我们再找一个非常大的PDF文件然后这个PDF文件是关于机器学习方面的然后这个PDF文件非常大它总共有650亿然后我们直接随机选取这个PDF文件的D2302亿的中的这一段内容然后让它来总结现在我们再上传这个PDF文件这里要稍等一下下面我们直接输入T10次让它用中文介绍这个PDF文件中这个主题的内容然后我们直接发送看一下它能否对于这个文件中的这个内容做出总结可以看到它这里正在对于这个文件进行详细的介绍这个是没有问题的它这里还给出了一个T10也就是它只能堵取这个PDF文件中的前17%下面我们再测试一下Dbc个倍3它的T10次尊学能力然后这里我们的T10次是一个基于4VL的T10次然后这个T10次要解决的问题就是这个单次中有几个R也就是在这个单次中我额外增加了几个R看一下它能否给你这个T10次正确计算出这个单次中有几个R我们直接复制然后沾天然后发送现在它正在尊询这个T10次这里它很快可以出了这个结果我们可以看一下它这个退离步骤然后它这个退离步骤就完全尊询了这个T10次的要求我们这里看一下它可以出的最终的按是否正确然后它给出的最终的按是在这个单次中有9个R然后我们看一下是否正确然后这一部分是8个R然后再加上这里的一个R这里是9个R这里上面它通过4VL的这个T10次然后最终给出了这个结果是完全正确的这里上面它对T10次的最终能力还是非常强的下面我们用极到演艺退离体来测试一下这款模型的逻辑退离能力怎么样我们先测试第一体然后第一体是弱风打就放飞风转弱气温高就不放飞风转弱天空不前嘛就不放飞风转假设以上说法正确如果放飞风转则下列哪些说法是正确的这个演艺退离体它的正确的按是B然后我们直接复制这个问题然后发送给DBSec我们看一下它能否给出正确的答案这里它给出了正确的答案正确的按是玄B下面我们再用第二道演艺退离体来测试一下为了接受事件然后这道题我就不再去读了然后我们直接复制这个题目然后这道题目的正确的按是D然后我们直接发给DBSec我们看一下它能否给出正确的回答这里它给出了这个答案然后这个回答它给出了两个选项一个是B一个是D实际上应该是D然后这个回答只能说它回答对了一半下面我们再用这个实际组合的这个问题来测试一下它能否将这个复制达到问题进行分不周退离并且给出正确的回答我们直接复制这个问题然后针贴然后发送看一下它能否给出正确的回答现在它正在进行退离这里我们要稍等一下好可以看到它这里进行了持续的退离还没有退离完成然后我们再点继续可以看到这个问题它已经退离了非常多的步骤还是没有正确的按我们再点继续然后这个问题它始终在退离并没有给出最终的回答然后到目前位置这个退离的过程已经消耗了大概四分钟了它还是在持续的退离还没有给出一个正确的回答仿佛陷入了死循环FV正确的回答仿佛陷入了死循环FV好目前这个问题它的退离步骤已经消耗了十分钟了它这里还是没有给出我们正确的回答为了进程时间这里我们就不再让它继续退离了这顺便这个问题确实将DBCV3给难住了但是这个问题在OpenAI还有CLO的中是可以给出正确的回答的下面我们测试一下它的算法能力我们让它们用Python写个程序找出这个是不是第几个字数并且不要引入外部库然后我们直接发送看一下它能否给出这个代码可以看到它这里很快可以出了这个代码但是这个代码并没有进过算法优化我们直接负质这个代码看一下需要多久它才能运行出这个结果If you moments later在等待了大概二十分钟左右这里还是没有给出这个运行结果最身份它给出的这个算法并没有进过优化它只是用最常规的方式叛乱这个数字是第几个字数下面我们再选一些其他的一些的算法体来测试一下接款某些编程和算法能力我们直接负质第一导算法体然后发送给DipSync这是它给出的这个代码然后我们直接负质然后回到这里然后我们直接沾贴然后我们直接点一季检查看一下这个代码能否正确也行可以看到它给出的这个代码成功通过测试下面我们再选择最导算法体然后我们直接负质然后发送这里它给出了这个代码然后我们直接负质然后沾贴然后点击检查可以看到它给了这个代码并没有通过测试然后我们再用这导算法体进行测试我们直接沾贴然后发送可以看到这里给出了代码然后我们直接负质然后我们直接沾贴然后我检查它给了这个代码通过测试下面我们再负质这导算法体然后沾贴然后发送这里它给出了代码我们负质然后沾贴然后检查可以看到最导算法体通过了测试下面我们再用最导算法体测试然后沾贴然后发送下面我们负质它给出了代码然后沾贴然后点击检查它给出了这个代码并没有通过测试下面我们再测试一下DBSec结局复杂变成问题的时候能否直接给出正确的代码然后这里我让它实现一个塞波朋克风格的贪池和游戏游戏开始后见面上会出现多个1515颜色不一样飞机是红春黄绿当时要吃到红色的食物时会增大两倍当时吃到绿色的食物时会死掉然后游戏见面的背景色为蓝色见变我们直接负质这个提示词然后沾贴然后发送看一下DBSecV3它能否一次给出可以直接远线的代码并且达到我们的要求它这里给出了完整的代码然后我们直接负质这里我们打开VSCO的然后将代码钻贴然后我们直接运行这个代码看一下能否中央运行可以看到运行肉这里会出现一个白色的贪池色然后这里有非常多的食物我们可以测试一下现在它吃几个红色可以看到它这里吃不到这个红色我们再测试一下经过绿色所以它经过这些食物但是没有吃到食物这身边这个代码还是有问题的我们先关闭这个游戏然后让它继续修改我们在提示词这里输入说经过食物的时候无法吃到食物这个发送看一下它能否给出修复后的代码这里它给出了修复后的代码然后我们直接负质然后我沾贴然后我们再运行看一下这次能否正常运行我们现在让它吃几个红色食物可以看到它还是没有完全吃到这个食物我们再让它吃其他颜色的食物可以看到现在它经过这些食物的时候并没有吃到这些食物它完全从食物上穿过了并没有真正吃到食物下面我们再让DBC可今天修改我们再输入化输入70词适合经过食物的时候还是无法吃到食物然后发送因为这个简单的游戏对DBC可应该来说并没有什么难度这里可以出了修复的代码然后我们直接负质然后回到VESCO了是按钮之前沾贴然后我们再运行运行中我们测试一下可以看到它还是无法吃到这些食物我们让它经过这个绿色看一下这个游戏会不会接受这里还是没有吃到这个食物就说明它实现了这个贪汁水游戏的界面还有我们能操控贪汁水游戏的界面但是它无法吃到这个食物我们再回到DBC让它继续修改我们输入70词继续修改还是无法吃到食物看一下这一次它能否可以出正确的代码这里它给出了修复后的代码然后我们直接负质然后沾贴然后再运行然后再运行可以看到它经过食物还是完全吃不到这个食物还是存在很多问题我们这里关闭这个游戏这顺便DBC在解决稍微复杂的编程问题的时候它还是有所欠缺然后为了更直观的对比我们直接将这个问题发送给Cloud看一下Cloud能否一次给出我们可以直接运行的代码现在Cloud正在我们生成代码这里我们要稍等一下这是Cloud可以出的代码然后我们直接负质然后回到Vasco的然后沾贴然后我们运行Cloud的给出了代码可以看到Cloud给出了代码这个时尔确实化之后是一个很小的一个方块刚才我们运行的时候那个时尔已经有长度了然后我们测试一下可以看到它吃到这个食物的时候就会增大这个介面也是蓝色介面非常好看然后最绅名用Cloud的它一次就将这个问题给我们解决了这个效果也是非常不错的因为我们要求了蓝色介面的背景它这里也是现了要求出现多个食物也出现了而且它给出了我们这个纪分系统这里我们就不再去测试了好可以看到进过我们多个问题的测试包括推理器包括编程方面的问题发现Dipsick最狂谋型并没有想象中的强大然后它的表现只能说稍微好一些在复杂的编程问题方面然后它就无法一次性给出正确的代码而且经过多次让它修复它也没有修复刚才我们遇到的探视时方面有一些问题本期视频为大家测试了Dipsick在逻辑推理还有编程方面的表现通过我们的测试发现Dipsick在复杂问题方面的表现还是有所欠缺希望Dipsick在后续的版本能够提升解决复杂问题的能力本期视频就做到这里欢迎大家点赞关注和转发谢谢大家观看
