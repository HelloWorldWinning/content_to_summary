Timestamp: 2025-01-14T03:08:51.686964
Title: Zuckerberg DROPS AI BOMBSHELL: The End Of Software Engineers
URL: https://youtube.com/watch?v=vol1qJB2waE&si=oLhcHjLwfIoZub4y
Status: success
Duration: 19:41

Description:
**Summary:**

**I. Initial Predictions & Concerns:**

*   **A. AI Coding Takeover:**
    *   Mark Zuckerberg (Meta) predicts AI will function as mid-level engineers by 2025, writing code.
    *   Amazon's Cloud Chief suggested in 2024 that most developers could stop coding due to AI.
    *   These statements initially sparked concerns about software developer roles becoming obsolete.
*   **B. AI Benchmarks:**
    *   SWE-bench (Software Engineering benchmark) performance has drastically improved.
    *   Increased from around 7% at the start of 2024 to 62% by the end of 2024.
    *   Recent models (e.g., 03) are achieving top 1% coding performance, indicating rapid progress.
*  **C. Cost & Efficiency:**
   *  AI coding models currently have high costs, but are expected to decrease over time.
   *  The cost vs. performance trade-off of models are also improving.

**II. The Counter-Argument & The Jevons Paradox:**

*   **A. Ongoing Demand for Software Developers:**
    *   Despite AI advancements, the World Economic Forum predicts software and application developers will be one of the top fastest-growing job sectors by 2030.
    *   This contradicts the idea that software developers will become obsolete, with roles changing to manage AI instead.
*   **B. The Jevons Paradox Explained:**
    *   States that when a resource becomes more efficient, demand increases, leading to more resource use.
    *   In the context of coding, efficient AI tools will lower the barrier to entry, leading to more software development.
*   **C. Increased Software Use Cases:**
    *   Cheaper and faster software development will result in more businesses launching more products.
    *   More demand for diverse software solutions will lead to the need for software engineers to supervise, debug, and refine AI-generated code.
    *    Engineers will also need to create and refine AI models themselves.

**III. The Evolution of Software Development Roles:**

*   **A. From Coding to Orchestration:**
    *   Software engineers will transition from writing code to orchestrating AI agent systems.
    *   Engineers will manage AI swarms, leveraging AI to accomplish tasks more efficiently than human coders alone.
*   **B. The Need for AI Agent Specialists:**
    *   Companies, like Apple, are hiring developers with experience in AI agent-based frameworks like Crew AI and Langchain.
    *   This indicates a shift in job requirements, increasing the value of software engineers with AI expertise.
*  **C. Increased Leverage:**
    *   Knowing how to code is now more valuable due to the leverage provided by AI tools and agents.
    *   Developers can now orchestrate agents, creating powerful solutions efficiently.

**Core Point:**  While AI will automate much of the coding process, software developers will remain crucial by orchestrating AI agents, debugging, and handling complex cases, making their role more about managing digital employees rather than writing code themselves.

**Fundamental Point:** The increased efficiency of AI coding tools will lead to more software creation and greater demand for skilled software engineers, thus changing the nature of their work.

**Overarching Framework:** The evolution of software development from direct coding to AI orchestration, driven by AI efficiency and the Jevons paradox.

<Mermaid_Diagram>
graph LR
    A[Initial AI Predictions] --> B(AI as Mid-Level Engineers);
    B --> C{Concerns about Job Loss};
    A --> D(AI Coding Benchmarks);
     D --> E(Rapid Performance Increase);
     A --> F(Cost & Efficiency);
      F --> G(Cost Reduction Over Time);

    C --> H[Counter-Argument];
    H --> I{Software Devs Will Still Be in Demand};
    H --> J(The Jevons Paradox);
    J --> K(Increased Software Development);
     K --> L(More Software Use Cases);
    L -->M(Need for Software Engineers);
    M --> N(Supervise, Debug, Refine);

    I --> O[Evolution of Roles];
     O --> P(From Coding to Orchestration);
     P --> Q(Managing AI Agents);
     O --> R(Need AI Agent Specialists);
     R --> S(AI Expertise Valuable);
     O --> T(Increased Leverage for Programmers);
    T --> U(Manage Digital Employees);
     
  style A fill:#f9f,stroke:#333,stroke-width:2px
  style H fill:#f9f,stroke:#333,stroke-width:2px
    style O fill:#f9f,stroke:#333,stroke-width:2px
    
    
</Mermaid_Diagram>


Content:
probably in 2025 we at meta as well as the other companies that are basically working on this are going to have an AI that can effectively be a sort of midlevel engineer that you have at your company that can write code and once you have that then in the beginning it'll be really expensive to run and you can get it to be more efficient and then over time we'll get to the point where a lot of the code in our apps and and including the AI that we generate is actually going to be built by AI Engineers instead of people Engineers so that clip has been doing the rounds in the AI community and in this video I'm actually going to take a different perspective than the current ones that you're seeing because I don't think most people are understanding the true dynamics of exactly what's being said here even for those just interpreting the clip at a face value so it's really important to understand the nuances of exactly what is being said here and that's what this video is going to dive into so this is of course Mark Zuckerberg the CEO of meta and he's talking about the fact that in 2025 AI is on ramp to essentially change in terms of how they get their code done now I agree with him to an extent but when we actually take a look at things things might not be as they seem so in the first part of this video I'm actually going to go with the majority here and say that you know it is a potential scenario where the majority of code being written is done by people Engineers now this is not the only person at a top billion dollar company that has said this but later on in the video I'll get into why most people are missing the most critical part about this statement and why things might not be as they seem but as I was saying okay this is not the only person at a billion dollar company in the higher ups that has said this Amazon earlier well not earlier this year because it's 2025 but last year Amazon said in 2024 in a leagued conversation meaning that we weren't even supposed to know this but they said the Amazon Cloud Chief actually told employees that most developers could stop coding as soon as AI takes over and they shared their thoughts during an internal fireside chat in June and we we actually got this knowledge because Business Insider obtained a recording of the meeting now this was something that was pretty crazy I covered this in a video and it was largely one of the most viewed videos on my channel in terms of the post AGI economic Series where I talk about how technology is developing in a way that will change the economy and of course the current roles that we currently do have and the reason I want to bring this back into the context of this video is because this is a statement that we've seen time and time again now on the surface of course it does sound Bleak and there were more statements that were you know a little bit in more detail so this is a screenshot from that previous video but you can see right here he says if you go forward 24 months from now which is 2 years and that would be June 2026 or some amount of time he said I can't predict where it is it's possible that most developers aren't coding and that of course you know is the guy who became Amazon CEO in June and he said that you know coding is simply the language that we talk to computers in it's not necessarily skill you know of itself the skill is how do I innovate how do I build something that's interesting for my end users to use now I personally do agree with this to some extent because what I've actually done is I've actually looked at the numbers and the very specific details but another thing to note here is that he does state that you know most developers are not coding it doesn't say that they're not working just simply that the role of developers may change now like I said before let's you know ignore the actual you know facts of what was said but look at the numbers in where these systems are in terms of their benchmarks because that is largely going to give us a quantitative view of where these systems are regardless of what this CEO said or that CEO said about the you know specific thing so four to 5 months ago in that same video we can see that these benchmarks that we were looking at here and this is the swe bench a software engineering bench and you can see that you know in 2024 at the start of 2024 it was around 7% and during that time it went up to around 40 to 38% and I'm doing this so I can show you where we are today so that was 5 months ago the highest score that we got was around 38. 8% I do think that the co sign Genie one I'm not sure but it's not on the leaderboard anymore so maybe that record was taken down due to an error or something like that but let's say that four to five months ago the highest record that we got on the swe bench which is of course in this video had to talking about people are not going to be coding because AI will fulfill that role so we can look at that time 5 months ago and see where the improvements are now and we can see that now where we are we're actually at a 62% on the swe bench verified so it's almost a double in terms of the actual performance on these models right here you can see that very recently towards the end of 2024 code story midwit agent plus swe search managed to get 62% of the swe bench and this bench is a pretty pretty hard bench to crack because you know it's not in the training data it's not something they've seen this was actually a pretty decent Benchmark and this is something that you can see slowly but surely every single month it's around I would say 2% or so that we increase or maybe like 5% or so so it's quite likely that in 2 years this Benchmark might be cracked now what's crazy about all of this is that we if we actually take a look at the most recent model we can see something that is crazy because remember how I said it was almost almost a jump we can see that right here on the 03 Benchmark and I do apologize for the quality of this but we can see that the you know on the swe bench the the verified Benchmark as we spoke about we can see that that 03 gets 71. 7% and I know you can barely see that but it is 71. 7% so in just a year the benchmarks have essentially doubled which means that if we look forward 18 months by now is it quite likely that we are going to have systems that could potentially get close to 100% or that level now I do think that that is possible but in that time are we going to have models that are cost effective enough for them to be that useful that is going to be have to be something that we're going to have to disc discuss because of course cost is something that is really expensive and we do know that right now 03 is ridiculous in terms of the price now of course as you do know as time goes on these models will continue to get cheaper and cheaper but take a look at what they've said about the O3 model in terms of its coding performance we can see that 02 in terms of you know well it's 03 but like this is the second iteration of their model we can see that on competition code forces this is a model that is scoring higher and higher we can see that 03 is in like the top 1% of coders which is something that's absolutely crazy and it's only their second iteration of the model whereas the first iteration o1 preview we can see it wasn't that great and like I said before it's quite likely that 04 which will actually be the third iteration of searching models is going to be released sometime in 2025 so it's quite likely that this level is going to get even better so take a look at the short video cuz I think it's rather fascinating to you know see what they talk about but I'm actually going to circle go back on this because it's pretty crazy what open AI are talking about when they talk about software engineers and they actually talk about that in a moment but take a look at what they say about O3 so on the left hand side we show the coding eval so it's like code forces Yow which measures how good a programmer is uh and the higher is the better so as we can see on the plot with more thinking time all three mini is able to have like increasing Yow all all performing all One Mini and with like median thinking time is able to measure even better than all one yeah so it's like for an order and magnitude more speed and cost we can deliver the same code performance on this even better experience right so although it's like the ultra Med high is still like a couple hundred points away from Mark it's not far that's better than me probably um but just an incredible sort of cost to Performance gain over what we've been able to offer with 01 and we think people will really love this yeah I hope so so on the right hand plot we show the estimated cost versus cold forces yellow tradeoff uh so it's pretty clear that all three minia defines like a new uh cost efficient reasoning Frontier on coding uh so it's achieve like better performance compared better performance than all1 is a fractional cost amazing um with that being said um now like I said before we're actually going to take a look at what you know they've been saying about software engineers at opening ey so this guy that you're seeing right here this is noan brown so this guy right here this is the guy that actually work worked on reasoning at open AI so you know the you know the the 01 series that is you know his bread and butter he was you know essentially the main person around that reasoning idea and how you know searching for new possibilities could actually lead to Improvement and in this short clip in this interview he actually talks about how 01 actually acts already like a software engineer which could be a glimpse at the future of the roles of AI agents and AI systems Within These large companies and remember I've said that you know this is something is quite expensive but when we look at the average salary for a software engineer provided that it is you know somewhat cheaper than you know the $250, 000 that you're paying these people per year it's quite likely that that as long as it can become cheaper than that it's quite likely that they will find Value in these AI systems oh one it does feel at least to me I think other people on our team like a better coding partner um than the other models um I think it's already authored a couple of PRS in our on our repo um and so in some ways it is acting uh like a software engineer um um because I think software engineering is another one of the stem domains that that benefits from longer reasoning U I don't know I think that uh the kinds of uh roll outs that we're seeing from the model are thinking for a few minutes at the time I think the kinds of software engineering uh job that I do when I when I go and write code I think for more than a few minutes at a time um and so maybe as we start to scale these things further as we start to follow this trend line uh and let 01 think for longer and longer it'll be able to do more and more of those tasks and we'll see you'll be able to tell that we've achieved AGI internally when we take down all the job listings and now this is the part of the video that I'm actually going to flip back on what I've been saying for the entire start of the video because I think whilst yes people like Mark Zuckerberg and the internals at Amazon saying that look of course we are probably going to have a situation where we don't have any human coders that is quite the statement I think that even if we get into a scenario where they're not hiring as many software Engineers I still think that if you are currently a software engineer you're probably going to be valuable more now than ever than you probably ever were and that is not not just me stating that to make you feel good I've actually been doing some deep Dives on this and the research is actually quite surprising like it even surprised me as I was researching for this video so take a look at this cuz this is where you want to pay attention if we actually take a look at what the wef are saying the world economic Forum they actually spoke about the future of jobs report on 2025 now I'm not going to dive into the entire report because this is going to be something that is you know a 20- minute 30- minute video because there's just so much to talk about but take a look at this right here and number four in the top fastest growing job section we have software and application developers okay so software developers software and application developers that is one of the top fastest growing jobs by 2030 now remember the world economics forum's job is essentially to predict and prepare the world for exactly the future that we're heading into and so I don't think there's another organization that is going to be better suited to predicting the roles of the future so the fact that they saying that you know the fourth fastest growing job role in this AI Society in this post AGI economy is going to be software and application developers I think that tells us something about the role of software developers in the future world and I don't think it is one that where software developers are completely useless I actually think it's the opposite and that's because of a few reasons so the main reason of this and you might be thinking well if you know these AI systems are going to be you know software developers what the hell a software developers is going to be doing so let me introduce you to a paradox that has been spoken about and I know no one else talking about this but let's get into it so the jevin Paradox is an economic principle that basically states that when a resource becomes more efficient to use demand increases leading to more resource use okay think about that for a moment okay when a resource becomes more efficient to use the demand increases leading to more resource use so if a resource becomes more efficient it becomes cheaper to use which makes it more attractive to Consumers and industries and the increased affordability leads to higher consumption so let me explain to you guys exactly what this means for software developers and why the industry is probably going to expand in my genuine opinion stage one is the low barrier to entry if we now have a scenario where it is a very low barrier to entry for anyone to be able to code that essentially means that it's quicker to develop application and this lowers the cost to creating software and as a result more companies and individuals can afford to develop software for their specific needs even for Niche or experiment Al products that were too expensive to justify which means that if more people now have access to you know software because it's cheaper that now means that we have number two increased software use cases with AI enabling faster and cheaper development businesses can launch more startups they can launch more apps more platforms more products and this leads to a broader demand for software and as software becomes you know more embedded in more Industries what this means now now is that it means that we actually need more software Engineers because we're going to need software Engineers to supervise we're going to need them to debug the code we're going to need them to ensure that the AI generated code is correct we're going to need them to design the architecture the purpose of the software we're going to need them to handle very specific edge cases right complex logic that AI might struggle with we're going to need them to create and refine AI models themselves which is of course a growing demand so all of this is to say that whilst yes it might seem like on the surface the software Vel opers are completely done and I guess you could say that you know AI could supervise AI could debug and AI could design the architecture whilst yes that is still possible it doesn't discount the fact that now we have a low barrier to entry which means right now we have so many people developing apps that if you want to actually fix your app or take it to that next level you're going to actually need a software developer who knows the complete backend who knows how to code who knows how to connect this up and that's something that I've seen firsthand with individuals who are in this space there's actually you know an increase increased demand like I've been building you know certain things certain automations and certain pieces of software for things within my businesses and I've often times had to you know drop on a Consulting call with a software developer for an extreme rare use or Edge case that an AI system simply cannot fathom so it's something that I personally do believe that whilst yes you might get to the fully autonomous s SWS because of course companies are going to be rapidly trying to drive down that cost I still think the entire ecosystem as a whole is probably going to be putting those individuals at a significant demand now remember what I spoke about like I said before the fact that this isn't something that I'm just saying if we look at Apple's recent job posting for a software engineer Apple actually recently spoke about you know how they need experience with AI agent based Frameworks like crew Ai and Lang chain so like I said before because there's all these things like crew AI there's like Lang chain companies are actually hiring people to become specialist in these roles and the crazy thing is is that if you are a software developer or if you have any experience related to that a lot of that stuff is very similar to using agentic workflows so you're actually more valuable now than you were back then so that's genuinely my honest opinion because of Apple you know is now hiring and you know on the resume they're looking for people who actually have experience with AI agent based Frameworks and that's of course something that is on these software developer jobs it's an indication that the industry is of course expanding now we also can take a look at what was said during this conversation on the YC YouTube channel and they actually speak about how software developers could potentially actually have more leverage now now it is actually more leverage it is far more leverage to know how to code than ever before and it's actually even more important and it will make you way more powerful like you don't have to be all the way in the Weeds on everything you actually are going to be able to um like orchestrate this giant army of agents and uh I think of Mickey Mouse and Fantasia just like you know like learning this new magical sort of ability and like love that you know suddenly all the brooms are like you know walking and talking and dancing and it's this incredible menagerie of being able to build whatever the heck you want whenever you want just like like literally from any computer from any web browser yeah I I try to come up with uh like a mors law type type thing where it's like the return on on learning a code is like doubling every six months or something like that so learning code a little bit in uh you know 2020 um you was not that useful because you would still you you get blocked you wouldn't how to deploy something you wouldn't know how to configure something let's go to 2023 with chat GPT learn to code just a little bit will get you fairly far because chat GPT can help you and then 2024 learn to code a little bit is a massive leverage because we have agents like this and others and there's a lot of really cool tools out there like cursor and others that will get you super far by just like having a little bit of quoting and and just extend that forward like six months later you're going to have even more power so programmers are just on this massive trajectory of increased power so this video was kind of like a 50-50 on one side you have the CEO saying that look there are going to be no more programmers that are writing our code maybe maybe those programmers are not writing the code but I can guarantee you that where we're headed is to an area where it's quite likely the software Engineers are probably not going to be engineering the software anymore it's quite likely that you software Engineers are going to be orchestrating multiple AI agent systems it's quite likely that you're going to be you know orchestrating these AI agent swarms putting them in scenarios where they're going to be able to get 10 times the work done than a traditional software engineer and that is where I think things are going and we can see this by the fact that number one we have the Apple's job posting showing that for software developers they now require experience with AI agent based Frameworks like crew AI or Lang chain and the world economic forum is actually predicting that the fastest growing job sector number four is software applications and developers so in theory this is why I said it's a nuanced point that most people did miss most people like oh software developers y y y trust me guys as long as you can learn AI agent workflows and that kind of thing you're going to be having the most leverage possible because you're going to be essentially able to manage digital employees they're going to get more done than before so that is my honest opinion soft developers might not be writing code they will be of course orchestrating these AI agents which is where we're going to be going to next and of course hopefully this video shed some light on the scenario cuz I saw so many videos that simply have the wrong opinion and clearly missed this entire Nuance point of view because they didn't see these certain points that currently were out there so with that being said if you guys enjoyed this video hopefully this provided some value to you and I'll see you in the next one
