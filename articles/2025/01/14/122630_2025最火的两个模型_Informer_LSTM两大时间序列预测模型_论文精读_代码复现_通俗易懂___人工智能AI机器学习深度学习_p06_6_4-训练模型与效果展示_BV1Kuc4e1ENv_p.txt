Timestamp: 2025-01-14T12:26:30.074475
Title: 2025最火的两个模型：Informer+LSTM两大时间序列预测模型，论文精读+代码复现，通俗易懂！——人工智能AI机器学习深度学习 p06 6.4-训练模型与效果展示 BV1Kuc4e1ENv_p6
URL: https://b23.tv/EQFf31y
Status: success
Duration: 11:15

Description:
好的，这是对您提供的内容的总结：

**I. 核心思想概要**

*   **数据准备:** 从原始时间序列数据中提取训练和测试所需的数据，使用滑动窗口方法创建序列数据。
*   **模型构建与训练:**  使用定义好的模型结构，并使用准备好的数据进行训练。
*   **模型评估与展示:** 使用测试数据评估模型性能，并可视化预测结果。

**II. 详细总结**

1.  **数据加载与预处理：**
    *   加载预处理后的数据，假设数据已进行标准化处理。
    *   定义序列长度（例如，50），表示每个训练样本的长度。
    *   创建空的列表 `X` 和 `Y`，用于存储输入序列和目标值。
2.  **滑动窗口数据生成：**
    *   使用循环和滑动窗口方法从原始数据中提取序列数据。
    *   `Nested_window` 函数用于生成滑动窗口数据。
    *   对于每个窗口，将前49个值作为输入序列（`X`），最后一个值作为目标值（`Y`）。
3.  **数据结构：**
    *   `X` 是一个包含所有输入序列的列表，每个序列长度为49。
    *  `Y` 是一个包含对应目标值的列表，每个目标值对应一个输入序列。
    *   例如，如果总共有3950个序列，则 `X` 的形状为 `(3950, 49, 1)`，`Y` 的形状为 `(3950, 1)`。
4.  **模型训练:**
    *   模型训练过程主要分为以下步骤：
        *  指定训练参数，包括学习率和训练的epoch数。
        *   使用了`EarlyStopping`回调函数，用于在模型性能停止提升时提前结束训练，防止过拟合。
        *   使用了`ModelCheckpoint` 回调函数, 用于保存训练过程中最好的模型。
    *  使用训练集数据，根据预定的训练参数，对模型进行训练。
5.  **模型测试与预测:**
    *  使用测试集数据对训练好的模型进行测试。
    *  对测试结果进行可视化，展示模型预测的结果与真实值的对比。

**III.  结论**

*   **核心要点:**  该内容展示了如何使用滑动窗口方法准备时间序列数据，并使用神经网络模型进行训练和预测。
*   **根本要点:**  理解数据处理流程、模型训练过程和评估方法是构建时间序列预测模型的关键。

**IV.  总体框架**

1.  **数据预处理：** 加载并清洗数据，标准化。
2.  **数据准备：** 滑动窗口生成训练数据。
3.  **模型构建：**  定义模型架构。
4.  **模型训练：**  使用训练数据训练模型。
5.  **模型评估：**  在测试集上评估模型性能。
6.  **结果展示：**  可视化预测结果。

<Mermaid_Diagram>
graph LR
    A[原始时间序列数据] --> B(数据预处理);
    B --> C{定义序列长度};
    C --> D[滑动窗口生成训练集];
    D --> E[定义模型结构];
    E --> F[模型训练];
    F --> G{使用EarlyStopping和ModelCheckpoint};
    G --> H[模型测试];
    H --> I[结果可视化];
    I --> J[评估预测结果]
    style A fill:#f9f,stroke:#333,stroke-width:2px
    style C fill:#ccf,stroke:#333,stroke-width:2px
    style F fill:#cfc,stroke:#333,stroke-width:2px
    style J fill:#cff,stroke:#333,stroke-width:2px
</Mermaid_Diagram>


Content:
然后就进来,咱们要去加载我的一个讯战数据了玩了玩学数已经有了那是不是说,我底按照咱们之前的一个要求按照我们模型的一个结构去够见一下咱们这个数数据长什么样子,我以做长一些事吧那下面我就立马这个X,还有这个Y,实际的做出来吧在这里重新的,我做一个韩朔Data来看Data哪之前咱是不是有一个预处理韩朔在这里是不是我们定义了一个类啊这个类当中有这样一个韩朔,我直接跳进去吧就是一个盖子春Data来看一下首先传家解参数后面这张是不像咱们就说咱们先说简单的就是我们现在这里传进来一个50这个50表现什么我的一个序列的一个长度吧来看吧首先X我的一个Y我们现在都有空软是不是先定一个Li-se的结合然后在这里我们要怎么去做咱不来想我们现在一共没有多少个序列出来啊咱们现在说一下每一个序列的长度文化笔呢在这里每一个序列长度它是不是一个50是吧这是第1个50然后下面呢就是另一个50另一个50是不是那这里我们一共没有多少个50我们应该用总长度4000简去序列长度50吧为啥呀你想就是说最后一个序列它不能超它不能越接吧所以说最后一次的时候它没法再往后移了所以我们只有4000简50这么多个序列在这里写了佛兄环佛艾也认真我的一个4000简去一个50是这个意思行了X和Y我要取数据了吧咱咱咋去啊这东西你说我说第一个是从0到50下一个01到51是不是一个2到52那它是不是一个滑洞窗口的一个感觉我们是不是得做一个窗口来去不断取数据啊在这里我们定义的一个韩术叫做一个Nesda window我们直接来看一下在哪儿呢这个韩术是吧我们这家FV跳进去就可以了直接FV跳进去Nesda window当中首先告诉我长度它是等于50一开始它的一个位置是0是不是行了那就是从0到50这个位置呗有了一个次大的所以有了一个按的所以是不是我的一个次大的就是开始次大的加这个按的就是一个结束吧通过我的所以先把第一个窗口取出来这是我第一个窗口当中所得数据吧你看此时做的窗口数据我是不是都拿到手了在这里做窗口数据我全部已经拿到手了有了这个窗口数据之后接下来我们做一下什么事接下来我们要去把这个东西现在我们现在不用去做这个规划这个操作直接把数据拿过来就可以了因为这个数据本身它就是一个领导一之间的在这里先把这个数据拿过来拿过来之后我们直接把这个因为这个是IOS window相当于这一步操作没做直接把 window拿过来了这是我当前的这个数据直接拿过来了那你说X什么X来这里你看一个窗口是50那我说X是不是前49个当做我的一个输入最后我的一个v它是第50个我写的这么的写个零到49这个v它是第50个可以这么定义吧前49个是我tempstab值最后一个v是没有预测的一个结果这么定义可以吧那你看我最后一个结果那就是最后一个值半X是这样的一个须利v呢说了最后它的一个值吧那现在是不是我定义完了第一个窗口当中哪个死49个和一个v一个值我都定好了吧对特地回去就可以了这第一步第一步X一个须利买一个值是把它对应起来一对应的关系所以说datax第二个判的xdata y是不是要我判的y在这里我第一个须利就是第一组输入就做好了49个输入不长一个预测的值做好了下面第二个第二个是不是i从1开始了1到多少之前你这个长度现在它边1了是不是1到一个你先去看一下吧在这里这是一个1这多少i1加50都51是不是像我该说的一开始零到50然后下一个1到51二到52我们需要把每一个时间须利的数据都做好吧在这里不用一个去看了吧打个断点直接执行一下当我执行到这一步的时候相当于我已经把所有的须利都做好了一共咱的输入须利是有多少个3950个这是我的输入须利有3950个相当于我输入须利就是390这个意思行了雷特人回去了我现在是不是已经把X还有这个Buy都做好了已经把XBuy都做好之后打一下是不是值这是是不是这样大家在自己训练的时候你可以不去打一这个东西但是你在底霸官当中我是建议大家每一步你都尽可能打一出来看一看我也大家说可能大家觉得比较容易以后大家在自己做一些实际任务的时候你可能会参考一些统治的或者参考一些吉他人去写的当我们拿到一份墨车带不太熟悉的东西的时候怎样能最好有理解通过数据违度不断计算完之后不断出源之后看一下违度变成什么东西了基本上就是现在我养成个习惯你一看这个违度我一看这个东西3950491一说实在的一打眼儿你是不是就知道这不就是个R的输入首先第一个违度多少你的一个数据就像那于是我们先不说这个半个Science这个东西当然我们要切半个Science嘛第二违度我们输入了一个Temps待尾一个不长吧我写个S嘛第三个违度每一个不长它像亮了一个大小吧一一这说就天一好了所以说我建议大家每一步都打印它的一个这位纸看一看都是什么东西一打眼儿就明白了外有多少个3950个那每一个回归任务是不是就一个纸啊那不就是一个嘛如果分类任务呢那这一块十分类那不就是这个十嘛然后底扣定是吧这样我现在就已经有了一个输入的数据那接下来我要做的是不是说把我的数据把我的模型接在一起了我训电也不就完了嘛Model我点春一下是不是把需要传进来东西传进去一口吃在这里一会儿它会设二分之三是三十二DiR你自己指定这是我们春么块吧春么块我们可以指定时间东西啊然后第一步你去啊你可以这样你可以把保存路径自己写好这有不说了这里啊这个Elysse都表示这个意思就是当我们在训电网络过程当中如果说是不是大家经常遇到严势就是网络去年训论基本上就保合了没什么太大的一个变化了比如说咱说这个Loss吧Loss的训电训电过程当中就贫了基本上没什么变化了可能就是这是个一万次然后你指定了十万次一万次个十万次的结果都没差差距那你是不是可以提前进行停止啊在这里啊我们可以定义一个监视的功能就是Elysse都表示你把它指定出来Elysse都表示我们看下来的倒进来的在这里Cowbass当中你可以把Elysse都表示还有Cup Hunt都倒进来这个Elysse都表示应该说的他会进行一个提前停止首先他你会需要指定的东西监视哪个指标如果说你的Volodyish Loss值LiN需两次他都没有进行下降那是不是就可以停了这里啊这个值反而到大家自己来指定吧建议大家就是如果说任务比较难的情况下指定稍微大点的一个值看看他呀就是随着叠在过程当中LiN2012次他连都提升都没提升那就暂时把它停下来就是让他结束掉就可以了这一个就相当于就是观察哪个指标你要监测的一个料下面呢这个Cup Hunt这个意思就是他会每一个Epoch都进行一个模型的一个保存然后呢在这里当你指定一个Cowbass on的他只会保存最好的那一次的然后这个还是啊他对比的一个指标我们都是啊用这个外地审Loss来去当做一个衡量的这个反正就是但是大家自己写一个策略吧如果说你觉得你宣传网络比较浪比较花费时间比较多或者说当你有些脚本去做的时候你有脚本去做经常要且大量的实验吧就是可能已经人走了然后服劲呢然后还有一些跑东西那脚本就先好了然后让他尝试各种样的都会去做这个时候我给你找个品就不要有用了能让你更快的去得到更多的一些实验的结果然后的这个拆判也是一样的这个道理接下来就是用我的帽斗去fit一下这就完事了fit当中你看X4Y1 泡吃Buy the Sides然后呢把我们刚才这个Cowbass再指引回确这就完事了这样咱就完成什么这下咱就完成了所有的操作了这一块我就没办法对大家底巴个老只能去给他看的掉了因为此时就进行讯电了底巴我们一下要进行讯电是非常非常慢的一个工作所以说咱们不在这里底巴里边给大家看的讯电了直接要通过整体给大家来软一下这一步直行完之后是不是相当于让我们讯电完就是得到了一个讯电结果了咱向给大家从刀尾的去直向一下然后这个帽斗觉得大家说到这儿行让这里我们来看直行完这个帽斗券之后它会直行一个太色操作然后太色操作完之后它还有一个去预测展示了一个结果这样一会儿咱说这个测质还有预测展示这个东西我先从整理上跟大家来看一下它运行时输的一个效果在这里首先它已经开始运行了你看这因为这个书比较简单所以说速度还挺快的捞子下架还挺快的基本上很快就能打到一个非常低的一个捞子因为这个正常还说学起来还是比较容易的只得到一个比较好的结果你看这个捞子间已经是非常非常效了希望大概两一步步是很快就结束了结束完之后它会直行一个什么操作哎 顺便给大家看一下吧特别直行一个测质操作在这里我们给大家看一下了它测试完它的一个结果然后再拿去抵吧看一下它是怎么进用测试的还没出来这个测试比较慢因为测试里边它跨图操作是比较多的这一个是它测试了一个结果因为就是它不同啊不同的一个颜色线你看 这里有不同颜色线吧不同的颜色线就相当于它的一个歧视位置是不同的然后呢 这个蓝色的可能这里线条太多了这个用颜色太多 可看不看了这么的吧大家就看它的一个整体稳和的一个趋势吧从它整体稳和的一个趋势来看是不是大致还是一样的所以说咱的时间须列基本上在这个正线问题上预测起来是不是非常轻松就能把这个东西做出来啊然后这么的再给大家看一下呃 我把这个东西一会打成了段点再来看一下我们的一个预测还要当转它都是怎么去做的这个我就先看掉了
