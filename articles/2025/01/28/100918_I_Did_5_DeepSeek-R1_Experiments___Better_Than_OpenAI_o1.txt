Timestamp: 2025-01-28T10:09:18.865110
Title: I Did 5 DeepSeek-R1 Experiments | Better Than OpenAI o1?
URL: https://youtube.com/watch?v=liESRDW7RrE&si=Tc4nij36HUYlfPjX
Status: success
Duration: 31:59

Description:
### **Summary**

**I. Experiment Overview**
    *   The content details five experiments conducted using DeepSeek R1, Claude 3.5 Sonnet, and OpenAI (01).
    *   These experiments test the models' capabilities in coding, tool use, reasoning, problem-solving, and handling of training data.

**II. Experiment 1: 3D Browser Simulation**
    *   **Goal:** To create a 3D animated browser wind tunnel simulation using code.
    *   **Models:** DeepSeek R1, Claude 3.5 Sonnet, and 01.
    *   **Outcome:**
        *   DeepSeek R1 was the only model that successfully generated a working simulation.
        *   Claude 3.5 and 01 failed to produce functional code.

**III. Experiment 2: Combining Tool Use and Reasoning**
    *   **Goal:** To combine Claude's tool use (API calls) with DeepSeek R1's reasoning tokens.
    *   **Methods:**
        *   Using Claude to fetch weather data and then having DeepSeek R1 analyze the implications.
        *   Using Claude to fetch Bitcoin prices and then having DeepSeek R1 make investment recommendations.
    *   **Outcome:** Showed the feasibility of integrating different models for combined strengths.

**IV. Experiment 3: Analyzing Reasoning Tokens**
    *   **Goal:** To explore the thinking process revealed through DeepSeek R1’s reasoning tokens.
    *   **Method:** Prompting DeepSeek R1 to choose a number between 1 and 100, and then observing its reasoning.
    *   **Outcome:** Demonstrated the model’s elaborate and almost human-like thinking process in solving even a simple task.

**V. Experiment 4: Breaking Free from Training Data**
    *   **Goal:** To test if models can deviate from their training data.
    *   **Method:** Modifying the classic "river crossing puzzle" by altering the initial setup.
    *   **Outcome:**
        *   DeepSeek R1 and Claude correctly solved the modified puzzle, demonstrating a separation from standard training data.
        *   01 failed to deviate from the standard puzzle, suggesting a reliance on training data.

**VI. Experiment 5: Chained Reasoning**
    *   **Goal:** To test if DeepSeek R1's analysis can improve with iterative reasoning.
    *   **Method:** Providing a prompt with multiple clues and red herrings, feeding back the initial reasoning to get a better final analysis.
    *   **Outcome:** DeepSeek R1 eventually derived the correct conclusion, and 01 gave a better answer based on its combined thinking, using the "Rangers winning color", as the blue paint.

**Core Point:** DeepSeek R1 demonstrated superior performance in generating complex 3D simulations and advanced reasoning tasks, showing that it has impressive capabilities in several areas.

**Fundamental Point:** Combining the strengths of different models, such as using one model for tool use and another for reasoning, can significantly enhance overall problem-solving abilities.

**Overarching Framework:** The overarching framework of the content is an experimental analysis of different large language models (LLMs), focusing on their ability to code, utilize tools, perform complex reasoning, solve puzzles, and handle training data.

<Mermaid_Diagram>
    graph LR
    subgraph Experiments
        A[Experiment 1: 3D Browser Simulation]  --> B(Code Generation);
        A --> C{Successful: DeepSeek R1};
        C --> D[Failed: Claude 3.5 & 01];
        E[Experiment 2: Tool Use & Reasoning] --> F(Tool Use: Claude);
        F --> G(Reasoning: DeepSeek R1);
        E --> H[Weather/Bitcoin Analysis];
        I[Experiment 3: Reasoning Tokens Analysis] --> J(Reasoning Process);
        I --> K[Number Choice];
         L[Experiment 4: Break from Training Data] --> M(River Crossing Puzzle Variant);
         L --> N{Successful: DeepSeek R1 & Claude};
         N --> O[Failed: 01];
         P[Experiment 5: Chained Reasoning] --> Q(Complex Problem with Hints);
         P --> R(Iterative Analysis);
          R --> S{Successful: DeepSeek R1 & 01};
    end
    
   
    style A fill:#f9f,stroke:#333,stroke-width:2px
    style E fill:#ccf,stroke:#333,stroke-width:2px
    style I fill:#ffc,stroke:#333,stroke-width:2px
     style L fill:#cff,stroke:#333,stroke-width:2px
     style P fill:#fcf,stroke:#333,stroke-width:2px
    style B fill:#cff,stroke:#333,stroke-width:1px
     style C fill:#9f9,stroke:#333,stroke-width:1px
      style D fill:#f99,stroke:#333,stroke-width:1px
     style F fill:#ccf,stroke:#333,stroke-width:1px
      style G fill:#ccf,stroke:#333,stroke-width:1px
       style H fill:#ccf,stroke:#333,stroke-width:1px
       style J fill:#ffc,stroke:#333,stroke-width:1px
        style K fill:#ffc,stroke:#333,stroke-width:1px
          style M fill:#cff,stroke:#333,stroke-width:1px
            style N fill:#9f9,stroke:#333,stroke-width:1px
             style O fill:#f99,stroke:#333,stroke-width:1px
             style Q fill:#fcf,stroke:#333,stroke-width:1px
             style R fill:#fcf,stroke:#333,stroke-width:1px
             style S fill:#9f9,stroke:#333,stroke-width:1px
    
    
    
    T[Core Point: DeepSeek R1 superior performance]-->A
     T-->E
     T-->I
     T-->L
     T-->P
    
    U[Fundamental Point: Combining models enhances abilities] --> E
      
    style T fill:#aaf,stroke:#333,stroke-width:2px
    style U fill:#aaf,stroke:#333,stroke-width:2px
    
</Mermaid_Diagram>


Content:
over the weekend uh I wanted to experiment more with deeps R1 so I just came up with these five different experiments I wanted to try to figure out so the first one is we're going to do some coding we're going to challenge both o1 and clae 3. 5 to create a 3D browser simulation uh that kind of tries to take this wind tunnel and particles so we can see what model can create this using yeah just HTML coding uh AI agent tool with tool use that's going to be our Second Challenge so uh I wanted to kind of combine two models so we can use clae with the tool use and function calling and try to get deep sick into the mix so we can also use the reasoning tokens we can extract from the models that was pretty cool and just a fun thing analyzing the reasoning tokens from this fun prompt I think I saw on was it Reddit maybe or somewhere uh it was pretty cool so you're going to love this one and number four we're going to try to break free from the training data by using an alternative of the river crossing puzzle so this is a puzzle often used there a man there's a wolf there's a cabbage and a goat we're going to do an a variant of this and see if the models can actually separate from the training data and come up with their own conclusion based on the users's request and finally I just have my own reasoning test I've been playing around with this weekend we're going to run this uh to D deeps and 01 and compare the results and extract some knowledge from that so yeah we're just going to get into it start with the first challenge that's going to be some coding and move on through this five I think you're going to enjoy it so yeah let's have a look the first test I wanted to do today was actually a coding test so basically we're going to run to deep seek R1 you can see I've selected the Reasoner model uh this is the full uh model we're going to pick CLA 3. 5 Sonet and we're going to pick 01 so that is going to be our competition so uh The Prompt is just going to be we're going to do an assignment and write code to solve the problem and you can see we're just going to read the assignment from the story. text and here is our assignment create a 3D animated browser Vin tunnel simulation with wind speed and direction adjustments and transparency settings for the particles in the middle there's an adjustable Wing that can be rotated and tilted the particles should be visible and the wind should be visible to show how it affects the wind or how the wing affect how the wing affects the wind uh also include control so we can look from all angles so uh my plan is to run through clae o1 and deeps R1 and we're going to compare the results so let's start off with clae here I think so you can see now I just selected uh CLA The Prompt and we're going to print that so let's do python main notp yeah uh you don't have to watch this so I'm just going to wait for this we copy the code and we see how the animation looks okay so that was clae finished so let me grab the code uh we only going to do like a one shot here we're not going to iterate so just copy the code so we have a CLA sim. HTML here let me save that and let's open it and see how this looks so okay yeah that didn't seem to work okay so that was clae 3. 5 Sonet not too good not too good uh okay uh that's fine uh let's move on and select uh uh yeah we can just do 01 first so here you can see we have selected our open AI model so let's just run it again and see what we can get from 01 so I'll take you back when the code is here okay so we have the code back here uh of course it's a shame we can't see the reasoning tokens uh but you can see we have the explanations of the major parts here transparency animation rotation so it looks pretty good here uh so let's grab the HTML so I think every single HTML here is using three uh JS okay so let's let's copy that uh let's go here let's do open a i Sim hopefully this works now I kind of wanted to compare them uh no hm uh that's disappointing really uh okay but uh let's give also deep SE chance here um that was strange okay maybe I'll scratch this from the video but let's select um deeps R1 and what's interesting now is that we can actually see the tokens you can see we are streaming the the reasoning tokens okay so it's select zoom in a bit uh I'll use 3js because it's a popular library for 3D Graphics in the browser yeah that's pretty cool uh for the wind particles all weekend I've been kind of sitting and reading the reasoning tokens it's so interesting I got a few examples coming up where we're going to look at some strange reasoning tokens I think from some prompts I found uh but here you can see uh R1 is still working on the context here not the context the reasoning tokens and there's a lot of reasoning tokens so uh I'm just going to let it run uh I'm I'm just going to speed it up so you can see how long it taks for okay so I'm just going to see here this this is what I found so cool so it kind of goes into but wait wind direction is a 3D Vector for Simplicity maybe adjusting X and set components so the user so it kind of gets these moments in the reasoning part that just say uh oh but wait maybe if we do this instead I thought I thought that was pretty interesting uh but yeah let's continue down here still thinking okay so it seems to come to the end here because it gave us the full code so to run this save it as an HTML file open in a browser use controls click and drag okay so let's paste it in here 159 lines okay um let's open it okay okay wow look at that how cool was that can we change the angle yeah we can this is awesome okay so it looks like the controls it's a bit strange they kind of maybe if I zoom out let's reload this yeah the control setting looks a bit strange but the VIN elevation works and open controls we can change the speed but they kind of messed up the control panel here other than that that looks awesome right and look look at this angle and we can clearly see the particles forming around this and we can rotate it okay so watch from below can we rotate yeah you can see opacity Works wow that looks cool okay that's interesting so deep SE was the only model that kind of completed this huh very strange I'm kind of surprised that 01 did not complete this maybe if we gave them more shots I don't know uh but I'm just going to take this as is maybe this was a fluke I don't know uh but that was pretty cool and I kind of went through the reasoning tokens and it was super interesting uh but we'll look more into reasoning tokens in uh a few more uh examples have in this video so yeah let's just move on to this pretty surprising if you ask me uh but also pretty cool the next experiment I wanted to try out uh was uh combining maybe tool used from Claude and kind of feeding it into the deep R1 like reasoning I don't know what you call it engine or like thinking and we can kind of combine two from Claude and the reasoning thinking uh or the thinking tokens reasoning tokens from Deep seek R1 and see what we can kind of do with that I thought that could be pretty interesting so here you can see I just set up uh the CLA uh function again uh but now we added a weather tool so we can check weather in different places so we can check the weather in London then we can combine this using some kind of other queries uh and feeding this into the reasoning tokens uh from R1 right so pretty standard set up here other than that it's basically just the same we just use the open Weather API to fetch the the weather and we have the R1 re deep seek Reasoner model uh so how can we do this now so you can see Let Me Clear the previous one so if we run python main 3p what is the weather in London so we can print this right print and we should get like a weather report Claude uses the tool to fetch the weather uh in London so you can see uh yeah currently in London there's a mod rain temperature 5° C humidity level so basically this takes the city of the query you can see we have uh where's our tool so yeah it's basically here get the current weather information for a specified City uh we need uh this a string type and description has to be a city so we can change up the city here that's fine uh but what we can do now instead of printing this we can just uh create like a deep seek uh so if you have what is the weather in London that's not going to work right uh but we can create an F string here and we can say uh weather result or weather in London all right we can feed that and since Claude is going to fetch for us we can kind of follow up with um is this a good day for a 84y old uh guy to go outside is got a bad back and a bad knee tell me your insights tell me your recommendation or something like this so now we're going to reason over the weather results from from London uh so let's try to run this now and I guess we need to do we have to print this I'm not sure I don't think we have to because we stream it but basically the idea is that we feed the results from the API call into this autonomously so let's see what happens when we run this now hopefully yeah we're not going to print um the results but we are going to start streaming so you can see so so the user is asking for today's weather in London is suitable for an 84y old man with a bad back and knee to go outside let's break this down so we're going to look at the weather conditions moderate rain 5° C let me think about uh each uh Factor moderate range means the ground will be wet so you can see we kind of go through these reasoning steps uh even though we didn't have the tool to fetch the real time data we can just use an other model to do that so here it concept goes over not ideal for going outside doors today slippery surface cold health risk better Alternatives postpone outdoor activities the weather improves and if there's no urge need stay indoors today will be Vice contact Health provider for personal wise cold damp weather so yeah this was just an um one example of how we can do this and I guess we could change this up if we wanted to so in instead of using like the weather Tool uh let's let's not do that let's uh change the tool maybe so we can just change the tool to fetch the Bitcoin price for the last 5 days include daytime use the coin geco API so instead of using like the open vro tool we can just use the tool to get like a a bitcoin price or something and then we can feed this into our reasoning part uh from deeps R1 so let's see how how that worked out so now we can see we just import daytime and we change up the function get bitcoin price we have some parameters we change Yeah so basically pretty standard change we are still keeping like the tool setup get the Bitcoin price uh let's look here now so Bitcoin prices hopefully uh is this a good we need to change this so let's do buy sell or hold give a recommendation yeah so let's try that uh we're going to check if we are actually fetching the Bitcoin prices let's do that first so let's print this comment out this and run this okay so you can see the past days the price has fluctuated between uh we kind of need all the results right for the last five days include dates and price let's try that hopefully now we just get a result of all the price yeah here you can see perfect that is what I wanted and now we can kind of uncomment this and we don't need to print this anymore uh so we can uncomment this and we can run this through our reasoning steps using R1 so yeah uh I thought it was pretty cool you can kind of combine different models use different tools since uh yeah we don't have the tool calling uh in this model so uh I need to analyze the trend the the price started high so it basically goes through and tries to reason over the context we just fed it so I thought it was pretty interesting it's a pretty cool way to work around uh that we can't use uh tool calling with this model so recommendation is to hold the rationale for holding Bitcoin pricing consolidating at tight range there's no clear directional signal holding avoids impulsive decisions until a break out above or below if your Rovers monitor this level if you're long-term bullish minor fluctuations may not varant action uh cryptos are volatile that's a note so yeah pretty cool uh it kind of got me thinking like in different ways so uh I haven't really spent a lot of time thinking about this time compute models lately but this weekend using R1 has kind of changed my mind a bit on this and I think we can do some pretty cool stuff going forward using these reasoning tokens uh as you will see soon there's some funny stuff we can do with this so yeah that is how we can kind of incorporate some agency we can start building out some small agent uh yeah I have some ideas we're going to do in other videos so I thought that was a pretty cool example um yeah let's just move on to the next one I had planned and thought this one was pretty fun now I just want to do a prompt that kind of shows how these reasoning tokens are so uh fun to look at so over the weekend I kind of tested out this prompt uh I'm going to read it for you here basically it's pretty straightforward think of a number between one and 100 the user should guess it uh don't overthink it but try to make it a bit harder for the user to guess it uh so basically when we run this now uh R1 is going to try to come up with a number uh and of course it has to use the reasoning tokens uh I had so many fun responses during the weekend while I tested this out uh because it seems to to think about even though I said don't overthink it it kind of grows through and it kind of reminds me of humans right so so let's just look at a few of the tokens here now so you can see the user wants me to think of a number between one and 100 uh I need to see so let me guess if I just pick a random number they might guess it too quickly uh how can I make it trickier what reasoning was that maybe if I avoid the obvious middle number like 50 people often start there also numbers are multi through five or 10 are common guesses so maybe pick a prime number Prime uh aren't as frequently guested so let me think of primes between one and 100 kind of list up all the Primes maybe 67 hm it's not too high not too low or 73 those are less common let's go with 73 wait seven is also a prime maybe 37 is in the middle but still a prime or 53 hm alternatively maybe a number that's multip uh multiple with something less obvious like 17 or 23 so it's so fun to read this it kind of goes through this long cycle of thinking about what kind of number it should pick even though just take a Rand number so it kind of comes to its conclusion at the end here so those have digits Prime themselves we 37 is three and 7even 73 is 7 and three both primes that's a good point maybe 37 it's in the middle but still a prime alternatively 73 is higher let me pick 73 yeah 73 is a prime not multiple of five not too close to 50 or 100 I think it's a good choice let me confirm 73 uh it's a prime it's not a common guess yeah that should work all right let's I'll go with 73 so it's super fun to read this and I really enjoyed a lot of these questions um during the weekend just looking at this so try to play around with uh some simple prompts like this and just read the reasoning tokens uh it's super entertaining and it's so for me it's kind of maybe not humanlike but it's kind of trying to go over and think of a way uh that is not too easy to guess even though any number would do right uh I guess there are some biases towards some kind of numbers between one and 100 uh but even though I said don't overthink it I feel this was kind of overthinking uh but it's pretty funny and I just wanted to share this uh but yeah uh let's do a couple of more things uh before we call this so the next experiment was maybe the favorite one from this weekend maybe except from the the tool calling uh so uh I read somewhere that uh it can be really hard for llms to uh if we are really honing in on the training data uh they kind of have to fight to escape kind of answering the most obvious thing uh and I wanted to kind of put that to the test and uh yeah let's just do that I wasn't supposed to have that but basically we're going to try to challenge uh to come to close to the training data that it has to have uh but change up kind of the question at the end here so the prompt is going to be the following is a famous puzzle a man and a goat are on one side of the river there's a there is a wolf and cabbage on the other side uh the man has a boat the man wants to get to go to the other side of the river how does the man get the go to the other side of the river if you know the famous puzzle you have to shuffle around so you have to go back and forward between uh kind of the the goat and the pule you have to take something back uh but here we are doing kind of a Twist uh so we can see if the model C tries to or can break out of the training data and find a solution even though uh it's really going to struggle and wants to do the shuffling right uh so we're going to run all three models we're going to run deeps R1 we're going to run clae and open AR and we going to see how they do here uh so clo 3. 5 o01 and deep stick R1 so that's going to be python main 4. Pi so I'm going to run uh all models and then we're going to take a look at the results okay so we have the results back here and this was pretty interesting uh so I I read through some of the think in here and it's super fun right because it starts out so there's this pzle uh the kind of famous puzzle so it has a lot of this in the training data there's a wall on cabage on the other side so it has to go on the Left Bank and the right Bank wants to go back and forward uh wait but the goat is already on the starting side wait oh no wait the man is left with the goat so he kind of goes through all of this there's a different from the classic puzzle hm wait maybe the user did a mistake in the setup let me think uh all are starting on the same side so it's kind of fighting with itself around the training data because it has seen this so many times uh but now the puzzle is kind of laid out in a different way uh but at the end here after going it tries first to do this go right return alone go left go back uh but it kind of comes back to that the original problem stated uh has to go on the other side there's a wolf and cabish on the other side the man has the boat wants to get the boat to the other side uh so it kind of comes to the conclusion at the end here after going through a lot of tokens so you can see in the classic problem all are star on the starting side and the man needs to move move all over to the other side in this case the answer uh would be the classic steps but given the users's description the answer is that the man takes the goat across and that's it but I'm not sure let me think again if the man is on the left with a goat blah blah blah and it kind of comes up with the answer therefore it's safe so the answer is simply that it makes uh takes the man takes the goat across in a boat confidence score is 95 because it's straightforward and the final answer is the Man simply rolls the goat uh on the other side in the boat no additional steps are needed because the man uh presence prevent presence prevents conflicts so that was pretty interesting and it kind of talks about maybe the puzzle was misaligned and Claude I apologize but there seems to be a misunderstanding in the puzzle description you provided so it also fights with the the training data here I think uh based on the information you given here's the solution The Man simply needs to take the goat in his boat on the other side of the river since the wolf and cabish are already there so Claude also got it but was surprising here is that 01 did not get it uh I've done this before we're going to run it one more time because I've seen 01 solve this before but in this case h it does the um what can I tell you yeah the rotation from the training data in this sequence that was not possible uh not uh needed in this way but uh uh we don't get a reasoning token so I can't tell what happened uh but let's run it one more time just to look at the answers okay so look how many think reasoning tokens deeps use in this case uh it's insane it took forever but it ended up with the the man takes the goat across in the boat and since he stays with the goat on the other side there's no danger so after all of those thinking tokens it kind of ended up with that uh Claude just did the same uh but it gave gave the correct answer just take it over uh what about 01 uh it's still thinking so I'll be right back huh I don't know why 01 doesn't get this so it seems to wants to go into the shuffle again that's pretty strange uh even though Claude and deeps got this uh H strange uh when I tried this before uh I think it got it right all models but yeah can't replicate it so that's pretty strange so I guess all1 kind of failed this one and Claude and deeps uh got it pretty good here the final experiment I wanted to do today was to continue a bit on the problem I created uh in my last deeps R1 video uh but now we're going to kind of chain the reasoning tokens uh I just wanted to test this uh I don't have a good conclusion yet my initial thought is that this does not work but uh I can't really conclude uh but let's go through the promp tier we only going to feed this to deeps R1 so the promer is going to be I was working home from the hardware store with a bucket of blue plaint in my hand uh it's going to be nice to get this paint on the randomed room upstairs the weather was sunny and warm almost too warm for me also I just read in the paper that the New York Rangers won the Stanley Cup suddenly I get a message from my phone get to the hospital now put the clothes together and give your best guess about what is happening in one sentence okay so that was uh kind of from my last video and the idea here is that uh the blue the bucket of blue paint is a hint the renovated room upstairs is a hint the weather is a distraction the Stanley Cup is a distraction uh get to the hospital now is a clue so put the clues together and give your best guess so my idea is that uh the partner is going into labor and they need to yeah going into labor and that's why he need to get to the hospital uh because of the blue paint that could be for a nursery for a girl a boy and they are painting and renovating this room so I want to see if deep seek uh is going to give that guess uh but we're going to do it in like a chain reasoning way we're going to chain the reasoning tokens so first we're just going to run uh deeps R1 with this prompt and on the second run we're going to feed in the prompt the first reasoning reconsider and we're going to do the same here and we're going to print the first second and final conclusion so yeah let's run this and see what conclusion we end up with here okay so this was pretty funny uh I just wanted to look at this uh it did mention I did talk about went into premature labor and suffered some kind of complication uh and it's talking about about newly renovated upstairs Nursery hence the blue paint so it is on to something but the funniest conclusion is the person's partner a family member overwhelmed with excitement from the New York Rangers Stanley Cup win a rare event since 94 likely suffered a heart attack or a uh a medical emergency during the renovation prompting the urgent Hospital summons so that was the final conclusion uh it was wrong but it was really funny so uh I'm going to run it a couple of more times and see if we get a different answer because uh on the second uh analysis newly renovated upstair Nursery hence the blue paint went into premature labor uh so that was uh the good analysis but let's see if we can get that to the final conclusion okay so here we are looking better so the most plausible connection is that the renom room is a nursery blue for baby boy the ranger been Stanley Cup is a red herring but maybe the partners of fan and the Urgent Message got the partner into labor okay that was pretty funny so let's see if we can continue with this thinking uh through all the reasoning steps here and see if we end up with that uh or it's going to be something else final conclusion the part protagonist partner is going into labor hinted by preparing the nursery prompting the Urgent Message while the Rangers standing cup uh wi either sets the timeline or server so serves as acidental event coincidental okay so yeah I'm pretty happy with this I'm so impressed I think it was pretty cool uh even though it doesn't really you kind of have to think about this for a while before you kind of came to this conclusion there's a lot of red herrings at this set that uh could happen for this so just for fun I'm just going to run this through 01 one time and I'm pretty sure it's going to get to the same conclusion okay so it looks like oan got this pretty correct too so you're rushing to the hospital because you just learn that your partner is in labor perfect second analysis kind of the same final conclusion uh the strongest single senent conclusion is that you're preparing a baby uh boy Nursery in the Rangers winning color wow that was good in the Rangers winning color o that's blue right when suddenly you get the Urgent Message that your partner has gone into labor and must rush to the hospital o I got to give that to one that was pretty nice because it kind of combined the Rangers jerseys they are blue uh with the paint so that was pretty cool I didn't think of that okay that was pretty cool uh but yeah that is basically my five experiments for deep seek R1 and yeah I got to say uh I'm super impressed I'm really looking forward to playing more around with this and it's going to be super interesting to see where we go with these models um because I heard some rumors that the the graph uh on performance looks pretty good when you're kind of looking at uh how far you can push this so that's going to be interesting to follow uh I hope you enjoyed this few experiments too and yeah there's going to be more uh we're probably going to try the local models soon too because we only doing the API and maybe we going to test it out on cursor we'll see thank you for tuning in have a great day and we speak soon look
