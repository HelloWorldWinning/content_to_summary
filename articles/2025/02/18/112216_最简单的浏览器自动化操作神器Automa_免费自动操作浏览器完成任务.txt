Timestamp: 2025-02-18T11:22:16.429510
Title: 最简单的浏览器自动化操作神器Automa，免费自动操作浏览器完成任务
URL: https://youtu.be/bHpk4TVU3qQ?si=J62iZNbBlCZ2R0iX
Status: success
Duration: 20:00

Description:
好的，我将根据你提供的文本，用简体中文给出结构化的总结，并生成mermaid图。

**总结：**

**I. 核心思想**

*   介绍一款名为Automa的免费浏览器插件，该插件可以自动操作Chrome或Firefox浏览器，模拟用户行为（如输入表单、点击按钮、滑动屏幕）以及抓取网页信息，从而提高工作效率。

**II. 主要功能与特性**

*   **浏览器自动化：** 模拟各种浏览器操作，如打开/新建标签页、前进/后退、刷新等。
*   **数据抓取：** 提取网页中的文本信息，如商品名称、价格等。
*   **工作流定制：** 用户可以根据自己的需求，创建自定义的自动化工作流程。
*   **定时任务：** 可以设置定时任务，让工作流自动按时运行。
*   **数据存储：** 存储抓取到的数据，方便后续使用。
*   **免费插件：** Automa插件目前完全免费。
*   **两种浏览器支持:** 支持 Chrome 浏览器 和 Firefox 火狐浏览器。

**III. 应用场景**

*   重复性的浏览器操作
*   自动化的网页信息爬取
*   提高工作效率
*   亚马逊商品信息抓取

**IV. 操作流程示例**

1.  **安装插件：** 在Chrome或Firefox应用商店搜索Automa并安装。
2.  **创建工作流：** 新建一个工作流，并为其命名和添加描述。
3.  **添加操作模块：** 从左侧菜单中选择需要的操作模块，如“新建标签页”、“延迟”、“输入表单”、“点击元素”等，并将它们拖拽到工作流编辑器中。
4.  **配置模块参数：** 点击每个模块的编辑按钮，配置相应的参数，如URL、延迟时间、CSS选择器、输入文本等。
5.  **连接模块：** 将各个模块用连线连接起来，形成一个完整的工作流程。
6.  **保存并执行：** 保存工作流，并点击执行按钮，即可开始自动执行。

**V. 核心观点：**
Automa 是一款强大的免费浏览器自动化插件，能够通过模拟用户行为和抓取网页信息，极大地提高工作效率，尤其是在处理重复性任务时。

**VI. Overarching Framework:**
The content introduces a free browser automation plugin (Automa), explains its functionalities and features and provides instructions on how to use it, as well as practical usage scenarios.

**VII. Mermaid Diagram:**

<Mermaid_Diagram>
graph LR
    subgraph "核心功能"
        A[浏览器自动化操作]:::feature --> B(模拟用户行为)
        A --> C(网页数据抓取)
    end

    subgraph "主要特性"
        D[免费使用]:::feature
        E[工作流定制]:::feature
        F[定时任务]:::feature
        G[数据存储]:::feature
        H[两种浏览器支持]:::feature
    end

    subgraph "应用场景"
        I[重复性工作]:::application --> J(自动信息爬取)
        I --> K(效率提升)
    end

    subgraph "操作流程"
        L[安装插件]:::step --> M(创建工作流)
        M --> N(添加/配置模块)
        N --> O(连接模块)
        O --> P(保存/执行)
    end

    style A fill:#f9f,stroke:#333,stroke-width:2px
    style D fill:#ccf,stroke:#333,stroke-width:2px
    style I fill:#ffc,stroke:#333,stroke-width:2px
    style L fill:#cff,stroke:#333,stroke-width:2px

    classDef feature fill:#eef,stroke:#333,stroke-width:1px
    classDef application fill:#efe,stroke:#333,stroke-width:1px
    classDef step fill:#eee,stroke:#333,stroke-width:1px

    Q[Automa 插件] --> A
    Q --> D
    Q --> I
    Q --> L

    style Q fill:#bbb,stroke:#333,stroke-width:2px
</Mermaid_Diagram>


Content:
今天我给大家分享的 是一款自动操作浏览器的免费插件 安装上这个插件之后 你就可以让它自动的操作 你的 Chrome 浏览器 或者是 Firefox 火狐浏览器 这个插件目前是完全免费的 可以让你模拟输入表单 然后按钮的点击 还有就是屏幕的一个滑动 还有一个网页信息的一个爬取等等 它很快就成了我 最喜欢 也是最常用的一个浏览器插件之一 当我的工作需要 涉及到一些重复的浏览器操作时 我第一个想到的就是它 你可以按照你的想法 创造出无穷无尽的浏览器自动化工具 来帮助你提高工作的效率 大家好欢迎大家来到我的频道 在这里的话 我会给大家分享所有关于人工智能 以及自动化的知识 帮助你提高自己的工作效率 让你赚更多的钱 同时帮你节省大量的时间 如果你喜欢我分享的内容 请务必订阅我的频道 这对于我的频道以及我本人而言 都有非常大的帮助 现在就让我们进入正题 我将给大家演示一下 如何安装这个浏览器扩展 以及如何去根据自己的想法 去实现一个自动化工作流程 好那接下来的话 我给大家演示一下 怎么去安装这个 Automa 的这个插件 然后并且会用两个例子 来教大家 怎么去制作自己的 一个自动化的一个工作流 首先呢我们去在谷歌上搜这个 Automa 然后直接谷歌搜 然后会出现它的官网是 Automa 点 site 我们直接点进去 Automa 的话 这个 首页我们可以直接点击这里 get for Chrome 然后它是现在目前是支持两个浏览器 啊一个是 Chrome 浏览器 一个是 Fifox 这个火狐浏览器 我们直接点这里 get for Chrome 然后他会到我们这个 Chrom 应用商店 我们直接点添加至 Chrome 这个扩展 呃浏览器的这个扩展插件 Automa 安装完之后它会自动弹出一个框啊 它这个是那个扩展的一个主界面 然后我们给大家插掉 教大家怎么进这个页面 安装完之后我们在这里 因为这里我是安装的插件比较多 所以它并没有直接显示 在这个地址栏上 我们可以点击一下这里的 给它固定到地址栏 然后我们把这刚才这两个页面 给它擦掉 然后呢再点击这个 Automa 这个图标 这里的话就会呃展示了已经有的 它自带的一些自动化工作流程 然后我们再点这里这个小房子图标 dashboard 就会到这个 Automa 的主页 在主页这里呢我们可以看一下 给大家放大 左侧是有几个菜单可以点击啊 第一个就是这个 workflow 就是工作流 在这里的话 我它是已经有一个 有几个自带的工作流了 我们可以直接点击运行 然后另外第二个是有 package 然后第三个有 schedule 这个是一个定时任务 我们的工作流的话 可以自动的按定时的去运行 然后这里有 storage 这里的话 我们可以去存储一些我们需要的数据 比如说网页上一些商品的价格 还有名称 我们可以存储在这里 都是自动的 然后这里的话有一个任务的执行记录 这个 log 日日志执行记录 执行完的任务会在这里展示 然后最后有一个 setting 在这里的话 我们可以设置这个界面的主题 还有就是它的一个语言 语言的话我们先把它设成简体中文 然后这里的话会有一些其他的编辑啊 还有一些快捷键的配置 然后这些我们就先不改 我们刚才只是改了语言 然后改了语言之后 我们把这个界面给大家关掉 我们刷新一下界面 然后我们再点一下这个 Automa 它就改成一个中文了 我们刚才给大家选成的中文界面 然后这里呢我给大家演示一下 一个 先给大家演示一个比较简单的例子 模拟我们去打开谷歌搜索 并且去输入关键词 点击搜索的动作 我们先新建一个工作流 然后我们给他取一个名字 就叫 Google test 描述信息 我们可以写一个测试 自动执行谷歌搜索 然后我们点击添加 添加之后啊 这里的话 就界面就变成了一个编辑器的界面 然后左侧呢 是一些呃我们可以执行的操作 这里的分几大类 比如说 general 这里面的会有延迟 导出数据 执行 HTTP 请求模块 通知注释 这里的话大家呃 初步看起来可能会有些复杂 但其实我们用到的一般就是这个 可能会有这个延迟 就是比如说我们访问一个页面之后 需要延迟个一两秒 要等他所有的内容都加载完 比如说可能有的图片比较大 他加载起来比较慢 我们可以添加一个延迟 比如说延迟 2 秒之后 再执行某个操作 然后再看第二个 Browser 这里呢就是活动标签页 就是给浏览器添加一个新的标签页 然后这里有一个新建标签页 切换标签页 还有新建窗口 甚至还有前进和返回 这些都是模拟浏览器的操作 就是我们浏览器这里有前进和返回 还有刷新 以及这里的新建 Tab 新建标签页 我们再看下面 他会有一些点击元素获取 或者链接属性 然后这些都是些常用的操作 然后的话 接下来我给大家演示一下 怎么去执行一个谷歌搜索 让大家对这些个按钮的话 有一个简单的了解 比如说在这里的话 我们他触发器 这里是一个默认的开始位置啊 我们先不管 然后我们点呃 在这里找到一个新建标签页 然后我们把它拖过来 直接拖过来之后 我们点击这个模块之后 右上角有一个编辑 有个铅笔的按钮 我们点一下这里 然后左侧这里就会有一些 就会出来这个模块的一些设置信息 然后比如说描述这里我们可以先不管 然后新建标签页这里 URL 我们要填一个呃 因为我们要访问谷歌搜索嘛 我们就填谷歌的地址啊 然后我们把这个地址粘贴到这个 Automa 这个新建标签页的 URL 这里 然后我们粘贴进来 然后粘贴进来之后 我们把触发器这里右边有个点 还有这个新建标签页这里也有一个点 我们把这两个 点给它串起来 好这样的话就是从触发器 然后就是下一步动作 就是新建标签页 新建标签页呢 我们会访问谷歌 这个地址 然后之后呢 我们要等个一秒钟 比如说我们在这里 可以直接拖一个延迟模块过来 然后延迟这里的话 我们点一下铅笔图标 这里有个 delay time 就是延迟的时间 它这个单位是毫秒 比如说 500 毫秒的话就是 0.5 秒 我们这里延迟个两秒钟 那就是 2,000 毫秒 两千毫秒然后我们点击返回 然后我们依然是要把前面这个 从前面这个圈圈 然后给它关联到后面这个圈啊 好了 这样的话我们点先点这里的保存 右上角这里的话就是执行按钮 我们点这里 他整个的这个自动化流程 就可以直接执行 然后我们先测试一下 我们点一下执行 我们看到了 刚才他就是直接打开我们浏览器 然后打开了一个新标签 并且访问了谷歌这个搜索这个地址 然后我们把这个关掉 然后呢我们接下来的操作 就是 要实现在这个输入框里面输入文字 比如说我们要 我们就在这里面搜索 Tech 指南 我们要做的就是让我们的这个 Automa 它自动流程来模拟 我们刚才做的这个动作 就是输入 Tech 指南 并且点击回车来进行搜索 然后 Tech 指南可以搜到这个频道啊 然后呢那我们把这个返回上一步啊 返上一步 然后我们现在需要做的呢 就是 现在是已经打开了谷歌这个网页 然后我们下一步做 的就是要在这里面模拟一个输入 我们打开这个 auto 嘛 然后朝下面翻一翻 然后在这里面呢 找到一个表单的一个按钮 我们把它也拖过来 直接拖到这个右右侧的小圆点上 可以直接自动的建立连线 然后我们点一下这个表单 然后点击它的编辑按钮 它这里呢会有一个 CSS 选择器 然后我们现在要做的就是让这个 Automa 在这个输入搜索框里面 输入 Tech 指南这几个字 然后并且点击回车进行搜索啊 然后我们在 Automa 这里 我们点击这个表单按钮 并且点击这个编辑按钮 点击完之后 我们点一下这里的选择一个元素后 就选择我们的输入框 它直接就会到了 自动跳到我们浏览器界面 然后你看我们鼠标在移动的时候 这个浏览器也在变化 它有一个黄色的框 然后我们选中这个输入框 这个搜索框我们点一下 然后它这里就出现了一串东西 然后我们直接点击这个 select element 然后就直接返回回来了 然后我们再点击表单 然后点击这个编辑按钮 然后左侧他这里就有一个什么 text area 这个我们不需要管 我们需要做的就是在这个值这里 填上我们需要搜索的内容 比如说我们刚才搜的 Tech 指南 我们就直接输入到这里 然后现在的话整个流程是 我们先打开一个新的标签页 然后延迟 2 秒钟 最后在输入框里面 输入 Tech 指南这个关键字 然后我们点击一下保存我们 测试一下 我们点一下执行 可以看到 我们现在是正常执行 就是先打开了这个浏览器的 新打开一个标签页 然后打开谷歌这个地址 并且输入了 Tech 指南 然后现在我们要做的呢 就是在这再按一下回车 来 模拟我们人工执行的一个搜索的操作 我们返回这个 Automa 然后我们再找一个延迟 我们再延迟 2 秒钟啊 我们再加一个延迟的按钮过来 嗯我拖一下 把他拖到这边 然后我们流程好看一下 然后延迟这里的话 他单位是毫秒 然后我们也延迟一秒钟吧 那就是 1,000 毫秒 1,000 毫秒 然后延迟完之后 我们点击 我们点击元素 也拖过来 点击元素 这里我们点一下编辑 然后选择这里有个选择 一个元素 我们选一下 然后 ES 选择这个输入框 然后 select 点击完之后 然后我们找一个按钮啊 模拟我们按下键盘的操作 然后我们找到这个按键 给它拖过来 我们点击按键 然后在这里 他这里我们 上面的东西都不用改 然后我们在这里 是只在这个按键这个位置 然后我们输入一个 enter 然后它会自动提示 然后我们点击这个 enter 然后这样的话就可以了 然后我们返回 然后再点击一下保存 现在整个流程就我们就做完了 这整个流程就是 先打开新建一个标签页 打开标签 页之后就会跳转到这个谷歌页面 然后之后呢 是等待两秒钟 然后是等待 2 秒钟 之后我们点击输入框 并且给它输入 Tech 指南这几个字 然后再等待 1 秒钟 然后再点击这个输入框 之后再按一下这个回车键 来模拟我们手工执行搜索的操作 我们点击保存两个 Google 页面给它叉掉 然后我们返回 Automa 我们点击一下这里的执行 大家看到了 这就是刚才整个流程 刚才我鼠标在这里是没有动的 他是自动新建了一个标签页 到了谷歌搜索的页面 并且输入了 Tech 指南 然后点击回车搜索出来这个结果 然后让大家再看一遍啊 然后我鼠标是在这里都没动 然后我只点击一下这个执行按钮 其他就什么都不动了 然后我点击 这个就是 用 Automa 实现自动搜索的一个自动工作流程 这个是比较简单的一个例子 目的就是让大家对这个 Automa 有一个简单的了解 然后下一个呢 我会给大家演示一下 如何去抓取亚马逊上的商品信息 就是把亚马逊上商品的一个标题名 还有一个价格 甚至它的评分给它获取到 并且保存到我们电脑上 然后我们把这两个页面给它关掉 然后我们打开 Amazon 我们点进去 那然后 我们现在要做的一个自动工作流程 就是 用 Automa 去自动打开商品的页面 并且把这个商品的标题 还有它这个商品的价格 给他保存下来 我们想要把信息保 存下来的话 首先就是要先有一个存储信息的地方 刚才给大家介绍这个 Automa 界面的时候 我们看到这里提到了 这里是有一个存储 这里的话我们要做的呢 就是先添加一个表格 然后表格就是来用来存储我们这个 Amazon 这个商品的信息 然后我们点击添加表格 这里的话我们取个名字 就叫做 Amazon Info columns 这里面就代表我们要存储哪些信息 比如说一个商品 我们可能存储它的一个商品名 还有价格 然后我们点击加号 然后这里的话我们给它取个名字 叫做 name 然后后面这个我们不用管啊 他这个我们可以选 他数据类型是文本或者是数字 我们直接用默认的 我们我们这里是添加了一个 name 这个信息 然后我们再继续点击加号 添加一个价格 这个价格信息 price 然后我们这里点一个保存 保存之后我们这里就可以看到 这里有一个名称 创建时间 还有修改时间 还有数据行数 然后我们到工作流这里 工作流这里我们添加一个 我们把界面放大 然后我们添加一个新的工作流叫做 亚马逊商品信息获取 我们点击添加 添加之后 还是跟刚才一样 这里触发器是我们新建 工作流的时候就给我们添加 好了我们现在要做的呢 就是打开一个标签页 并且点击一下这个编辑按钮 我们把这个商品信息的这个地址 给它粘贴进来 把这个地址粘贴到这个 Automa 里面 我们 URL 在这 里面粘贴进来 然后新建了这个标签页 之后呢 我们依然是让他等待两秒钟 就是为了就是让等他所有的资源 比如说图片还有文本都加载完 两秒钟的话就是 2,000 毫秒 这里就是 2,000 等它加载完之后 我们现在要做的 就是获取这个商品的名字 还有它的一个价格 再返回 Automa 在这里的话 我们朝下面翻一翻 有没有能满足我们要求的这个功能 这里 我们看到有个获取文本的这个按钮 我们把它拖过来 我们试一下能不能满足我们的要求 获取文本 这里我们点一下他的这个编辑小铅笔 这里我们依然点击一下 这里的话 我们点击他这个选择一个元素按钮 然后去选择我们要获取的文本的内容 比如说我给大家演示一下 点击点击之后呢 然后这个界面上我们鼠标所在的位置 它下面就会显示一个黄色框 来把我们选出的内容给它框住 比如说我们现在是要选择 它的一个商品的标题 我们就把鼠标移动到它这个标题上 然后我们再点击之后 右边这里就会多出来一些东西 element 下面有一些东西我们直接不用管 点击这个 select element 点击完之后呢 我们给这个描述 改成获取商品名称 然后我们点返回这里 我们先点一下保存 然后现在呢 获取商品名称之后 我们先测试一下 就是获取的商品名称之后 我们能不能真正的获取到 那我们就想 把它先存到我们的电脑本地 因为刚才我给刚才我在存储这里 新建了一个表格 然后叫做 amazon_info 然后我们现在要做的呢 就是把网页上获取到的信息 存储到这个 amazon_info 里面 我们再返回我们的工作流 我们想要保存信息到本地的存储的话 我们要点一下右上角这里的表格 点击之后呢 这里有一个 connect to storage table 就是关联到我们刚才已经创建好的表 我们点一下 这里呢 是展示出了我们刚才创建好的 这个 Amazon info 这张表啊 我们点一下 然后它会提示工作流 现在是已经关联到了 amazon_info 这张表 它包含 name 和 price name 是商品名 price 的话就是商品的价格 然后我们叉掉 然后我们再点击一下保存 然后我们获取到文本之后呢 现在就把它插入到 我们刚才新建的 amazon_info 这张表里面去 看一下实际的效果 那我们想要把刚才获取到的文本 保存到我们本地刚才新建的表的话 就需要点击一下获取文本这里 然后我们点击一下他的铅笔图标 然后这里有一个插入表格的可选框 我们鼠标点击一下选中它 它会让我们选择 要插入数据的所在的列 这里 因为我们刚才绑定的我们 Amazon Info 这张表我们新建的时候 就有了 name 和 price 两个列 然后那我们这里是 既然获取的是商品名称 那我们就把它插到 name 这一列去 选择好之后 我们在这里点击一下保存 设置好之后 然后我们点击一下左侧的这个存储 这里找到我们刚才新建的这个 Amazon Info 这张表 然后现在它里面的数据行数的话 目前是 0 现在呢我们就点击一下工作流 让他去执行一下 然后我们看一下执行后 数据有没有新增到我们新建的表里 就可以了 我们点击这里的执行 那这里加载完网页之后 它会自动的去获取这个商品的名称 我们回到 Automa 那么我们点击这里的存储 我们可以看到 这里数据行数变成了 1 它就是刚才是 0 现在是 1 新增了一条数据 我们点开看一下 Amazon basic.... 然后这个是我们刚才获取到 这个商品名称 就直接已经保存进来了 然后同理的话 我们如果要获取价格的话 也是添加一个获取文本的一个工作流 把它拖进来 我们点击一下编辑图标 然后选择器 然后我们选择的价格是在这里 我们 select 获取完之后 我们点击一下铅笔图标 给它添加一个描述 然后在这里插入表格 这里我们选择 price 之后呢我们点击一下保存 然后我们点击运行 这里网页已经加载完了 正常的话这个工作流执行完 会将这个商品的名称 还有它的价格 存储到我们刚才新建的 Amazon Info 这张表里 然后我们回到 Automa 我们去看一下存储这里 然后这里的数据行数已经变成 2 了 然后说明是新增了一条数据 我们点开看一下 然后这里的话就有了商品的名称 name 这个 Amzon basic 然后后面的话会有个 price 13 现在 自动获取亚马逊商品的商品名和价格 的这个自动工作流已经做完了 经过几天对 Automa 插件的使用 我觉得这个插件对我帮助还是很多的 我工作中会有很多重复性的劳动 以前的话我需要人工去手动的去点 去操作现在有了 Automa 之后 我可以把它们编辑 成了一个自动的工作流 这样的话 每天我的 Automa 插件 就可以自动帮我完成一些 重复性的工作 这个视频就讲到这里 大家下个视频见
