Timestamp: 2025-07-02T22:40:02.402835
Title: AI量化开源集股票与期货一体的实盘框架（附工作流讲解） BV1roK1zYEjf
URL: https://www.bilibili.com/video/BV1roK1zYEjf/?spm_id_from=333.1007.tianma.6-3-19.click
Status: success
Duration: 22:45

Description:
好的，这是根据您提供的文本提炼的概要、核心观点、总体框架和 Mermaid 概念图。

**概要 (Outline Summary):**

1.  **PanAI 工作流概述:**
    *   **目标:** 提供低代码、高可视化的量化策略开发、分析与回测平台。
    *   **覆盖范围:** 量化流程的步骤 2-6 (步骤 1 为数据获取 STK)。
    *   **访问:** 通过官网在线使用或本地安装开源版本。
    *   **界面:** 左侧节点库，中间画布构建工作流，右侧运行与查看结果。

2.  **基本工作流示例 (单个因子):**
    *   **步骤:** 定义因子 (公式/代码节点) -> 构建因子值 (构建节点) -> 分析因子 (分析节点) -> 查看分析结果 (分析结果节点)。
    *   **因子定义:** 支持公式或 Python 代码输入。
    *   **因子构建:** 指定时间段、类型 (股票/期货)、编码方式、因子方向。
    *   **因子分析:** 向量化回测，生成包含收益曲线、分组收益、持仓、IC 等指标的报告。

3.  **事件驱动型回测:**
    *   **目的:** 更精准地模拟实际交易环境验证因子/策略效果。
    *   **节点:** 股票回测节点。
    *   **输入:** 因子值，事件驱动型策略代码 (通过 Python 代码输入节点)。
    *   **策略代码:** 基于事件 (如初始化、每日收盘 `on_data`) 实现交易逻辑 (如根据因子排名调仓)。支持自定义参数、止损、二次筛选等。
    *   **输出:** 详细回测报告 (收益曲线、交易明细、账户权益变化)。

4.  **复杂工作流示例 (多因子策略):**
    *   **流程:** 构建多个因子 (线性/非线性) -> 因子权重分配 -> 因子合并 -> 分析合并因子 -> 回测合并因子。
    *   **因子类型:**
        *   **线性因子:** 通过公式或 Python 代码实现 (如量价、技术指标)。
        *   **非线性因子:** 通过 AI/ML 模型实现。流程包括：特征工程 (定义特征和标签) -> 模型训练 (如 XGBoost) -> 基于模型构建新因子 (预测未来因子值)。
    *   **因子权重/合并:** 使用因子权重节点分配各因子权重并进行合并。

5.  **资源与帮助:**
    *   提供多种文档资源帮助用户学习因子编写、算子函数、AI 因子示例、策略代码编写等。
    *   未来将推出 AI Agent 辅助策略代码生成。

6.  **应对常见问题与核心理念:**
    *   **安装:** 后续会发布安装视频教程。
    *   **可视化 vs. 代码自由度:** 可视化是代码生成器，配合 SDK API 可实现完全自由度。
    *   **维护性:** 工作流模式显著提高复杂策略的可读性和维护效率，开发效率高。
    *   **依赖性:** 代码完全开源，可本地部署，不存在依赖和限制问题。
    *   **核心理念:** 倡导“轻代码，重思路”。随着 AI Agent 的发展，代码实现将弱化，应将更多精力投入策略构思、逻辑设计和学习上。

**核心观点 (Core Point):**

PanAI 工作流旨在通过低代码高可视化平台，简化量化策略的构建、分析与回测流程，赋力量化研究者将重点从代码实现转向策略创意本身。

**总体框架 (Overarching Framework):**

基于可视化工作流的量化研究与策略实现平台

<Mermaid_Diagram>
graph TD
    A["用户"] --> B("PanAI 工作流")

    subgraph "核心功能模块"
        C["因子构建与管理"]
        D["回测与分析"]
    end

    B --> C
    B --> D

    subgraph "因子构建流程"
        C1("因子定义<br>(公式/代码)") --> C2("因子构建<br>(生成因子值)")
        C3("特征工程") --> C4("模型训练")
        C4 --> C5("基于模型构建因子")
        C1 --> C6("因子权重")
        C5 --> C6
        C6 --> C7("因子合并<br>(多因子)")
    end

    C --> C1
    C --> C3

    subgraph "回测与分析流程"
        D1("因子分析<br>(向量化)") --> D2("因子分析报告")
        D3("回测节点<br>(事件驱动)") --> D4("回测报告")
        D5("策略代码<br>(事件驱动逻辑)")
    end

    C2 --> D1
    C2 --> D3
    C7 --> D1
    C7 --> D3
    D5 --> D3

    B --> E("学习资源与帮助")
    B --> F("核心理念<br>轻代码，重思路")

    style B fill:#ADD8E6,stroke:#333,stroke-width:2px
    style C fill:#FFFFCC,stroke:#333
    style D fill:#FFFFCC,stroke:#333
    style C1 fill:#D8BFD8,stroke:#333
    style C2 fill:#DDA0DD,stroke:#333
    style C3 fill:#D8BFD8,stroke:#333
    style C4 fill:#DDA0DD,stroke:#333
    style C5 fill:#EE82EE,stroke:#333
    style C6 fill:#FFB6C1,stroke:#333
    style C7 fill:#FF69B4,stroke:#333
    style D1 fill:#DDA0DD,stroke:#333
    style D2 fill:#90EE90,stroke:#333
    style D3 fill:#DDA0DD,stroke:#333
    style D4 fill:#90EE90,stroke:#333
    style D5 fill:#D8BFD8,stroke:#333
    style E fill:#F0E68C,stroke:#333
    style F fill:#F0E68C,stroke:#333
</Mermaid_Diagram>

Content:
大家好今天为大家分享一下攀大约工作流的使用说明首先介绍一下我们工作流的一个背景我们将基于人物制装端对端量化的流程分为了这六个步骤其中第一步已经通过一个高度封装的数据STK已经实现了大家可以通过我们的开源数据库或者直接使用我们在线网站都可以使用然后剩下的五个步骤的话我们是将在工作流中来实现就目标是尽量以低代码高可实化的方法让大家更方便的使用来做自己的联化哎工作流的入口在我们官方网站的顶部菜单栏当然大家也可以通过我们给他带去下载源码按照叫成本地来启动然后工作流启动之后可以看到一个工作流的列表清单如果是在线用户的话会看到一些模仿然后这边我点击下新键我们从头开始创建一个工作流然后默认见面左侧是我们的一些工作流的节点然后这个节点会随着我们Panel的别带同步开源给大家也会慢慢地完善越来越多那第一个例子我给大家演示一下如何参临生成一个股票的因子并且对这个因子进行一个分析首先第一步我们就是需要定义一个因子然后从左到右我们拖一个公式出来然后在这公式输入里面我们输入我们想要到一个因子的公式这公式比较简单就是一个二十日收益率的排名当前的可楼子初一二十天之前的可楼子再简直一就是一个收益率然后最后再软格排名一下就是在几千日股票里面然后先后顺序排名打个分那这就是我们定义了一个基础的因子接下来我们要对这个因子进行一个数据的构件可以从左侧拖一个增合因子构建节点公式节点只是定义了因子的公式那构建节点它就可以将这个公式转化为实际的因子的值那构建节点它需要一个入餐大家可以看到就是这个因子带马那我们就把这个公式给拖过来然后构建的话会让大家输入构建的时间就会打算构建哪一个时间断的因子我这里就采取默认1月1号到3月1号这两个月的时间然后因子类型可以选择股票或者是期货然后编码方式的话就是跟我们因子大赛同步我们除了有PASS和公式两种对这里选择公式然后最后是一个因子方向代表了越大越好还是越小越好那有了这个因子构建节件生成之后它就会生成这个时间断我们对于这公式所代表的因子的值那接下来我要对这个因子值进行一个分析我们就从左侧找到这个因子分析的节点把它拖进来然后同时把因子值给连上这个样子的话就是对因子值就可以进行一个分析了然后这个分析是很简单的一个相量化回测的节点对它默认了就是有几个条件周期可以跟大家选然后可以选择分析组然后我们会去对应方向上的第一组作为这个因子的一个收益情况那经过这个节点之后我们对因子分析就有了一个报告了那我如何查看这个报告呢我们就从左侧这边去寻找一个因子分析结果的节点把它拖进来然后跟结果对得上然后这样子我们一个因子从创建到构建到分析的一个工作流就完成了然后这个时候我们可以点击下右边的这个运行的按钮可以看到这个工作流已经开始执行了绿色的代表已经执行完成蓝色在闪烁的代表当前运行在哪个节点上然后代约等一段时间之后对我们就可以详细地看到这个等整个工作流于所有的节点都已经绿色之后就代表了这个工作流已经运行完成了那这个时候我点击下这个查看结果就可以看到我们因子的一个分析的结果然后最上面的话是一个收益的曲线然后下面就是我们这边的因子的一些分组的收益形型以及包括回色最后一天的一个因子的尺然后在下面就是一些因子分析的一些可是话的报表然后这些IC甩简啊自相关图大家可以通过一些大模型来查语一下相关的代表它怎样的一个形态是怎样评价因子的之前会有一些关系这个是因子我们够见的一个流程接下来我们有了因子之后大家觉得分析结果还不错我们接下来我们系统提供了一个时间驱动型的回色给我们大家进一步来检测这个因子的效果实际上的回色主要是大家可以看左侧有个回色相关然后我们把一个股票回色的节点过来那股票回色的节点它有两个入餐第一个餐术就是因子值就它靠哪个因子来做回色我们可以把我们刚才够见的因子给透过来然后第二个的话就是这个股票它需要回测事件驱动型它是有一套筹略代码的这个时候我们可以填写一个Person的代码输入节点然后在这边去输入一个我们事件驱动型筹略回色的代码输入好了之后我们这边连过来对然后最后再调整下我需要回测的时间然后包括我的出事资金是多少我这边的一个几准选择是什么然后我的用金倍率是多少用金倍率就是说比如说我们基础是万五或者万八的手机费那一一的话就是一倍二的话就是两倍然后还有一个回色的频率天安分钟还是T哥对 选好了之后那这边就可以进行一个股票的回测然后回测好了之后我们可以拖一个回测的一个策略回测结果然后通过这个连过来我们就可以查看一个详细的回测报告那事件驱动型的回测它回测的就相对精准会根据一时的成交量整天跌停判断手续费啊划点等等各种情况去尽量还原一个真实的因子在是盘中的一个表现那这边我已经给大家跑好一个大家可以看一下那这边是回测下来的一个收益曲线当然因为调藏初期不同因子的标地不同对 它这边的收益就跟因子的分析结果就有一定的差距然后其次的话是可以通过这个界面去看我这个详细我买了哪些股票 卖了哪些股票他们的成交和付出的手续费大于是多少然后最后一个传统可以看到我们这边就是每天的一个账户的一个全益情况OK 那接下来给大家重点讲一下我们事件驱动型回测的一个策略的写法那这里首先大家可以去看我们社区论坛里面有一个策略的帮助文档然后里面基本上是标注了一些策略的一些基础的写法然后我给大家简单讲解一下我们当前的这个例子那事件驱动型最核心的就是事件驱动就是我们系统内置了很多方法大家只要对在对应的方法下面去实现自己的蛋码就OK那这个策略就是根据因子去做买卖交易就不要简单它只需要实现两个事件就行第一个是出事化事件就是策略在启动的时候第一次启动的时候会执行哪些蛋码然后第二个是和在Data时间因为我们选的是天气别的所以就是每天在收盘的时候它会来调一次这个韩束那么首先看一下第一个出事化的方法这里面就比较简单它只做了第一是定义了我们几个核心的参数比如说每次调仓我买入因子值前多少名的这里写的实就是千识名然后这个参数大家可以在会后去下载我们的节词去改改看自己跑跑看然后第二个参数就是调仓周期我多久调一次仓然后世界的逻辑也很简单就是我们去把我们刚才购件出的因子值拿出来然后这里面为了防止为了数据我们把因子值往后挪了一天然后这个出事化这个韩束就这些完成了接下来看第二个韩束就是每天之前一次的这个逻辑这个蛋白也很简单首先判断一下今天是不是调仓日如果不是调仓日就有调过如果是调仓日的话那我们就去把回色当天的因子值取出来对 并且把钱多少名取出来然后去获取他们的一个价格去购件一个下单的指令对 最后的话就是把我们的金额给军分到各个要买的股票里面然后掉一下这个目标扯杂韩束我们的系统就会去下单然后这里面就可以实现我们很多群里小伙伴问的这个实序型的策略比如说我要加个指令的指损对吧 我就可以在这里面每天判断一下我当前每天的一个收益情况如果待会多少或者是少一多少我就品调自己的仓位或者说我要根据因子值选出来的这个股票我并不满意我还要再进一步做一些筛选比如判断下车最近的一些动量情况一些实质情况等等就可以在这里面再去做一些二次的修改这就是一个从因子购件到股票回测的一个工作流程然后接下来的话就是给大家分享一个稍微复杂一点的多因子的策略然后这个工作流这个工作流大家可以缩小的时候可以看下它的原理也比较简单就是通过我这边工作流默认够见四个因子然后把它复合成一个因子然后再对这个因子进行分析和回测然后这四个因子里面其中三个是我们的这个线形因子也就是我们比较常见的这些根据量价 写工似乎是写判的蛋码实现的因子然后非线形因子的话我们选了一个差迹Boss的工作节点来实现这个非线形的因子然后最后通过因子合并去进行因子分析和股票的回测首先我们先具体讲一下这个线形因子上面跟上面之前的案例一样那二十日的收入率来做一个因子走着固件流程这里面多了一个节点大家可以看到叫因子全重节点它是用在多因子我要最终合并的情况下我用了四个因子肯定要给它们是各自设一个全重方便我们后端后期可以随便调所以就订阅了这个因子全重节点它会自动做归于化全重这边想事多少可以通过这个按钮或者通过手术给它继续改然后这边给大家做了一个外案例就是我公式的写法可以实现一些简单的因子但我比如说有一个复杂的因子可能虚与往通过PASSN来实现就可以脱入PASSN蛋码输入作为因子蛋码在这边去实现自己的逻辑然后这是在讲一下非线形因子非线形就是通过我们的AI继续系各种模型来训练挖掘这个因子这个因子也比较简单我们首先继续系的模型我们先通过特征工程固件然后再进行模型的训练模型训练好了之后通过模型再去固件新的因子预测新的因子然后再调权重以这个例子为主的话就是我们是先电影里一个收款价作为它的特征当然这边我可以多输几个不同类型的因子作为特征就是可以多电一几个基础的特征因子有了这些特征之后我们再定一个标签就是我们要预测什么我这里预测的是我们未来一天的收益率然后特征工程还有两个参数就是开始时间和结束时间整个模块的意思是我构建了24年10月份到12月底这个特征工程里面包含了收盘价以及每个收盘价对应的第二天的收益率那够建好了之后这个特征工程我这一次采用差距不死的模型来训练对 就是用这个close来预测第二天的一个收益率来训练这个模型然后这些参数大家可以接触大模型去做一些规调然后同时的话就是如果看我们的圆码我们每一个尖点都有圆码可以看里面对一些参数也有一些基础的描述然后经过这个尖点之后就是我们这个特征工程所对应的模型就已经训练好了有了这个训练好的模型之后我们就要拿这个模型去预测未来的数据了对 就通过这个因子购件积蓄学习在这边就继续去专用的因子购件这个节点然后把这个模型拖过来把我们当时的特征工程拖过来对 然后把这个模型拖过来把我们当时的特征工程拖过来对 然后它就会预测比如说25年1月1号到3月1号这两个月时间的这个因子质刚好这个因子质和上面的因子质都对得起然后通过这个方式之后我们第四个因子给它调落的权重为3然后跟上面的3个线性因子就可以和平到一起了和平到一起之后我们就走跟刚才一样的流程首先上面我们可以做一个因子分析看一下这个因子的一个收益情况点击就可以查看一个因子的收益的结果同时的话我们还是去做一个因子的质的回色在这边跟刚才一样我们可以编写一个自己的策略去微调自己的参数去加字一些时续上的一些需求封工上的一些需求然后就可以生成一个小细的一个回色的报告这就是基础的我们稍微复杂的一个工作流的展示当然我们多因子一般不这样来用这里这个案例只是为了方便大家理解一下我们因子和工作流购件的一个流程和工程点给大家补充几个不太好理解的点就是第一个是因子到底怎么来编写然后这一块大家可以看我们这个官网的有个因子大赛的一个功能点击创建因子之后这边就可以来单独来编写和创建自己的因子然后有PASS和公式法然后又上角有一个帮助手册给了一些案例和因子的一些基本写法然后关于公式的制立里面的一些算子到底有哪些韩术然后大家可以看一下我们社区里面有一个算子韩术说明可以看这篇文章这是第一个问题点然后第二个问题点的话就是非现行因子的创建然后这边只是提供了一个简单的例子如果大家想要看更多的例子的话可以去看我们社区文档里面有一个潘大爷操作工作流势力这里面我们给了大约四个都是AI类型的一个因子的创建对付代了对应的接寸和一些公式的讲解大家可以了解学习一下然后第三个比较难理解的点可能就是我们这一边的这个回测时间驱动询测流回测的代码到底如何实现然后这边大家不要担心我们过段时间就会更新一个双Agent对抗的一个大模型会辅助大家来通过口述的方式来变写这个代码我们那次下来效果还不错如果大家有代码动手浓力的话就是我们建议大家去看我们刚才的这个侧列帮助文档这篇文章里面详细解释了就是所有时间驱动询它一共有哪些事件有哪些韩术可以调用这个跟市面上的类似的都比较相向还是相对好理解的然后最后给大家解释一下几个问题第一个就是大家群体经常讨论的就开源版安装的一些问题这个我们后面会专门录一期视频来解释安装的一些常见的问题和演示一些安装的步骤然后第二个是群体比较讨论的一个热门的问题就是已经会写代码了是否还需要可是话然后这块大家关心的问题其实第一个就是自由度的问题就大家觉得通过Torchress想比于代码来说会不会限制了自己的一个侧流的自由度然后这个其实是不用担心的就是我们后面会提供于Torch SDK然后通过Passing API的方式来启动和停止策略包括通过 API可以去读取中间策略的一些节点的输出那这种情况下其实我们整个AI的可是话就变成了一个代码生存器你可以通过Torchress来形成一些因子或者策略然后再通过自己系统里面的一些框架来调用和执行所以自由度这个是完全没有影响的然后第二个的话就是一维护这个问题然后我们在做量化很多年就是给大家看一个例子然后这边是一个简单的期货的一个换月加一个CT的一个策略大家可以看到就很简单的一个策略但经过几个同时的维护之后它就变得一个非常的复杂而且可读性非常差而且站在我们就是同样人用或者重新原来的角度基本上一个策略代码写完放半年左右基本上就很难再回忆起来了然后随着时间越长其实代码就相当的难为祸但通过我们判断的工作流的方式其实它的可读性是非常强的比如刚才这个复杂的工作流我只要用肉眼打眼一看就是倒是四个因子的一个和承的一个效果如果这一套代码如果是这一套效果如果用代码的实现的话没有几百方式很难实现的但是通过我们拖拽的方式大约五六分钟就可以实现这样的一个复杂的业务需求所以开发效率上面其实是蛮高的然后后面的话我们会组织一批延报的负现通过工作流来负现一批延报就向大家看一下它的效率确实是OK的同时的话也是在延报的负责共产状我们会完善很多很多的节点然后这里的话也是希望工作的小伙伴加入我们的开源社区跟我们一起去完善这些工作流的节点然后作者的话我们会在我们的官网以及给他伺服的手艺上面给大家熟过名然后最后一个问题就是依赖性的问题大家觉得用了我们潘党园的工作流之后对会不会产生一些依赖和限制自己的一个问题其实这个首先我们代码是完全开源的对整个所有的工作全都是开源的所以本身代码都可以本地跑是不存在这个问题的然后第二的话就是我们重点想象大家宣传的就是我们需要清代码重思路因为代码这个它只是一个策略的实现但最关键的策略到底做不赚钱还是得看我们策略的思路太过于看重代码会出现这样两个问题第一个就是和我们之前资源系统一样就是它的有些策略可能因为各种各样的原因其实慢慢变得不可维护了然后第二个的话就是IT系统也好策略也好它是需要不断的根据我们当前这个IT视频发展不断的去迭代攻心的如果你很看重它你前期的重的击联反而会造成你后期有些共同难以实现或者有些策略效果难以实现而现实了自己策略的一个发展然后最后一点的话就是想跟大家分享一下我们认为边重和系统以后就不再会是量化的门开了因为现在大量的AI agent的方式其实是很快过几年我们这个代码其实慢慢的可能都已经被弱化掉了很多代码工作已经交给了我们这个Agent的代码学区处理了对反而就是我们应该花共多的时间在我们的思路实现和学习上OK然后这就是我们今天对PanaiAI这个工作流的一个分享有什么新的问题或者说是建议欢迎来我们开源群里沟通
