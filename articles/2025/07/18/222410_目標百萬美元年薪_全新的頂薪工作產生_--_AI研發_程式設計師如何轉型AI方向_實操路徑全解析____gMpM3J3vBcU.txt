Timestamp: 2025-07-18T22:24:10.363195
Title: 目標百萬美元年薪，全新的頂薪工作產生 -- AI研發！程式設計師如何轉型AI方向，實操路徑全解析！ 🔥 gMpM3J3vBcU
URL: https://youtube.com/watch?v=gMpM3J3vBcU&si=iZ6ZEuE4U1wUwh_M
Status: success
Duration: 21:37

Description:
**核心主旨 (Core Point):**
面对AI浪潮，普通程序员应积极转型，从应用层、模型服务到后训练，逐步深入AI技术栈，以抓住职业发展新机遇并提升价值。

**宏观框架 (Overarching Framework):**
AI模型开发的“技术栈”及其对应的“人才需求与转型路径”。

**详细概述 (Detailed Outline):**

**I. AI时代人才价值的巨变**
*   **AI人才价值飙升:** 顶级AI研究员/工程师的年薪已远超传统行业高管（如Meta挖角Apple专家年薪达2亿美元，远超Apple CEO），AI相关职位已成为一个全新的、高价值的工种。
*   **赢家通吃格局:** 顶级的AI研究领域（如基础大模型预训练）门槛极高，通常需要深厚的理论基础（如博士学位）和十年以上经验，普通程序员难以直接竞争。

**II. AI模型技术栈剖析及转型机遇**
讲者将AI模型开发流程划分为四个主要层次，并为每层指出程序员的转型机会和相应价值。

1.  **预训练 (Pre-training)**
    *   **职责:** 构建基础大模型架构（如Transformer），通过海量互联网数据进行训练，使模型具备基础智能和通用理解能力，决定模型的智能上限。
    *   **技术特点:** 算法创新、模型架构设计（Attention机制、Context Window优化、MoE架构等）。
    *   **投入与竞争:** 资源消耗巨大（是后训练的10-100倍），全球仅少数顶尖公司和实验室能承担。
    *   **适合人才:** 最顶尖的AI研究员。
    *   **薪资价值:** 极高，可达数千万美元年薪。
    *   **程序员转型建议:** 普通程序员不建议作为主要转型方向，门槛过高。

2.  **后训练 (Post-training) / 微调 (Fine-tuning)**
    *   **职责:** 将预训练好的模型与人类偏好或特定应用场景对齐（如通过强化学习、蒸馏技术），使其输出更符合预期、更“人性化”或适应特定领域。
    *   **技术特点:** 包含大量工程性问题，如训练框架优化、分布式系统并行处理。
    *   **适合人才:** 拥有强分布式系统经验、数据Pipeline经验的工程师。
    *   **薪资价值:** 高，可达百万美元年薪，市场需求较大。
    *   **程序员转型建议:** 有分布式系统背景的程序员有较多机会。

3.  **模型服务 (Model Serving)**
    *   **职责:** 高效部署和运行大模型，提供推理服务。核心在于优化模型在硬件上的运行效率和成本，使其能够处理互联网级别的大规模并发请求。
    *   **技术特点:** Flash Attention、Speculative Decoding、批处理、参数并行、GPU/CPU/内存/网络IO优化、CUDA编程、缓存策略、负载均衡、可观测性（监控、追踪）等。
    *   **适合人才:** 广泛的工程师群体，包括系统工程师、基础设施工程师、SRE、甚至操作系统/文件系统/固件开发人员。
    *   **需求量:** 巨大，几乎所有需要规模化部署AI服务的公司都需要。
    *   **薪资价值:** 高，可达百万美元年薪，与后训练相似。
    *   **程序员转型建议:** 对系统、基础设施、性能优化感兴趣的程序员有大量机会。

4.  **应用层 (Application Layer)**
    *   **职责:** 在已部署的模型之上构建用户可见的产品和工作流，增加产品附加价值（如用户界面、Agent Layer、RAG - 检索增强生成、工作流编排、缓存机制）。
    *   **技术特点:** 结合AI模块与非AI模块，智能判断用户意图、数据清洗、上下文管理、提升用户体验。
    *   **需求量:** 最大，几乎所有声称是AI公司的都需要此层人才。
    *   **适合人才:** 传统Web、移动、全栈、后端程序员的最佳转型入口。
    *   **薪资价值:** 基础薪资可能与传统程序员相近，但在Agent Layer、RAG、复杂工作流编排等特定AI应用领域做得好，价值会显著提升。
    *   **程序员转型建议:** 最适合传统程序员的切入点，可逐步深入AI技术栈（从Prompt研究、RAG、Vector Database到Serving优化）。

**III. 转型路径与未来展望**
*   **清晰路径:** 普通程序员可从AI应用层入手，逐步向模型服务、后训练层深入，理解并掌握更高附加值的AI技术。
*   **工具共存:** 学习如何与AI工具协作，识别AI能提升效率的场景和其局限性。
*   **抓住红利:** AI浪潮是不可逆转的趋势，积极转型是抓住新机遇、避免被淘汰的关键。

<Mermaid_Diagram>
graph LR
    A["AI浪潮下的程序员转型机遇"] -- "驱动因素" --> B("AI领域价值飙升");

    subgraph "AI模型开发技术栈"
        direction LR
        D["1. 预训练 (Pre-training)"]
        E["2. 后训练 (Post-training)"]
        F["3. 模型服务 (Model Serving)"]
        G["4. 应用层 (Application Layer)"]

        D --> E;
        E --> F;
        F --> G;
    end

    subgraph "人才类型与价值"
        direction LR
        H["顶级AI研究员 (高门槛)"]
        I["高阶AI工程师 (分布式/算法)"]
        J["系统/基础设施AI工程师 (优化)"]
        K["传统程序员 (AI应用转型入口)"]

        L["薪资: 千万美元年薪"]
        M["薪资: 百万美元年薪"]
        N["薪资: 市场主流 (潜力大)"]

        H --> L;
        I --> M;
        J --> M;
        K --> N;
    end

    B -- "核心领域" --> D;
    D -- "人才匹配" --> H;

    E -- "人才匹配" --> I;
    F -- "人才匹配" --> J;
    G -- "人才匹配" --> K;

    K -- "转型路径 (由易到难)" --> G;
    G -- "向上深入" --> F;
    F -- "向上深入" --> E;
    E -- "向上深入 (顶级)" --> D;

    B -- "结论" --> O["抓住红利，积极转型"];

    style A fill:#D1C4E9,stroke:#333,stroke-width:2px,color:#333;
    style B fill:#C8E6C9,stroke:#333,stroke-width:2px,color:#333;

    style D fill:#BBDEFB,stroke:#333,stroke-width:1px,color:#333;
    style E fill:#90CAF9,stroke:#333,stroke-width:1px,color:#333;
    style F fill:#64B5F6,stroke:#333,stroke-width:1px,color:#333;
    style G fill:#42A5F5,stroke:#333,stroke-width:1px,color:#333;

    style H fill:#FFECB3,stroke:#333,stroke-width:1px,color:#333;
    style I fill:#FFE0B2,stroke:#333,stroke-width:1px,color:#333;
    style J fill:#FFCC80,stroke:#333,stroke-width:1px,color:#333;
    style K fill:#FFAB91,stroke:#333,stroke-width:1px,color:#333;

    style L fill:#A5D6A7,stroke:#333,stroke-width:2px,color:#333;
    style M fill:#81C784,stroke:#333,stroke-width:2px,color:#333;
    style N fill:#66BB6A,stroke:#333,stroke-width:2px,color:#333;

    style O fill:#D1C4E9,stroke:#333,stroke-width:2px,color:#333;
</Mermaid_Diagram>

Content:
Hello 大家好 欢迎来到我们的频道上一期我们讲了在AI之下如何进行投资这一次我们来讲讲工作相关的东西陈续元怎么转AI陈续元原因是这样的大家可能最近也看到了一些刷头版头条的新闻Roman 庞庞和其他一系列的AI ResearcherEngineer等等都去了一个叫Mata的不差钱的公司甚至有些人开出了一年一个亿美金和一年两个亿美金的合同简直就看比NBA和足球的明星可以做一个对比最近报出来的据说庞庞庞他从Apple去MataMata给他两亿美金一年的收入那作为对比Timcoque Apple的手续执行官去年好像也就7000多万也就7000多万这样比如说一个AIEngineer AI Researcher的价值已经超过了Apple整个公司CEO的价值至于值不值这个钱我们另说但是之前已经录过很多期视频了AI这件事情一定是Here to State的那么AI Researcher AIEngineer或者说跟AI相关的这种程续元它的价值会越来越高的提升甚至我朋友说过一件事情现在所谓的AI Researcher跟之前SophiaEngineer已经是两种公众了虽然它们以编程写算法为主但其实不管是从待遇来说还有稀缺程度来说都已经不是另一个层次了这个我在招人的时候也是生有体会因为我们公司包括我们组也在招这方面的人才的确是非常难虽然我们不是说要开出一亿年薪天价的去挖人但是一年100万美金甚至200万美金这个还是可以达到的一个合理的市场价位包括我们也有组员走的确就是马克亚配这就是市场的一个给他们这些员工的一些定位之前还有一位朋友他也是最近一个义挖去买塔他之前说过一句话我觉得还是印象挺深的你看归谷的发展最早的时候可能是由职业经理人和产品经理进行主导后面逐渐转成工程师主导工程师是在公司里面比较有话语权的甚至他们的待遇也是比较高的再到现在就是完全有AI researcher或者说纯粹由 researcher来主导所以这个是 researcher的黄金年代当然你要成为一个顶级的AI researcher这个不是我们今天视频的主要内容因为这个东西第一是你需要至少一PHD为基础第二我个人觉得现在已经比较晚了其实在做这一代垃圾烂贵串摩托或者说待遇模型的之前可能他在五年前七年前都已经在做深度学习都已经在做自然原处理现在你要零食爆佛脚转过去再跟你竞争的这批人已经有十年以上的经验了除非你天赋一饼否则你是不能轻易跟他们竞争的这个是一个赢家通吃的游戏之后我们会拆解一下AI的stackAI的站你们发现这一部分其实他的需求不那么大但是他的需求都是最顶级的那些人产所以这一层其实就很难进入了不是很建议我们今天想讲的更多的是作为一个普通的程序员不管你是做infrastructure做backhand还是做frontend做application怎么样去往AI上面靠成为一个AIengineer好行那我们今天就从这里开始首先先简单的给大家过一下AI的站大概是怎么样看的你要去训练一个大模型大概分为几步在这几步里面大概需要什么样一个知识储备什么样一个人才需求大概对应就是这个市场的价位在哪里好这里面可能会有一些技术的部分但是我尽量讲的更还来往一些帮助大家理解那先来说说这个模型的训练就是说你要把一个模型从一些混乱的参数从头变成可以用的产品比如说恰恶GPT大概要经历一个什么样的过程当中会有哪些技术在里面第一步叫做PreeturingPreeturing中文预讯练它做了一件什么事情它就是把所有互联网私有的公有的等等只要能拿到的预料数据全部拿过来你会有一个模型的价购现在大家都可以看到最主流的价购就是TransformerTransformerAttentionIncoderDecoder这种类似的价购Outro Regressive就是它自己能够生成下一个偷肯假设把一个主流的价购拿过来你要从头开始训练那么你就会给它塞入大量的预料它简单来说作为什么事情对Incoder进行了一个压缩它可以把整个Incoder记在它的所有参数里面就把它记住它会产生一个什么样的效果说它多多少少就已经可以产生Incoder对应的Outport了你给它说一句话它已经可以自动不全了所以它生成的那些话就跟你上去好像看起来像是人化了对但是预讯点其实决定了模型的上线这个模型有多智能这个模型会不会做体其实绝大部分的能力都在预讯点这个阶段已经产生了并且这个模型价购也定了这个模型的效率也定了所以这一块对应的专业就是刚才说的那些顶级的AI Reset去定义这个模型价购怎么样让它的Attention变得更好怎么样让它的Contacts window上下网窗口变得更长怎么样能够在所有上下网里面的偷肯它都能找到需要抓取的那种内容还有就是说它模型是Dance的价购还是Moe现在多专家的这种价购等等等等所有这种算法层面的创新绝大部分都在预讯点或者模型的价购阶段都已经帮你做好了但是这个市场不管是从公司的角度我招人做预讯点和我想做基础大模型从头开始去一个基础大模型这个都是非常高的投入全世界也没几个Live现在真的号称自己在做Fundation模型的预讯点了大厂包括可能Google,Mata,Microsoft可能在做Amazon和Apple什么都号称在做但其实不知道它们做的效果怎么样其他的Star Lab可能就OpenAI,Anceropic,XAI类似于这些公司在做预讯点的过程国内当然对应DipSync可能还有一些其他的公司我不是特别清楚预讯点它所占用的资源和之后你要做后讯点就是PoseTrining是完全不一样的可能是10倍到100倍的这样一个量级的体身所以讯点一个模型你看到花多少多少液多少多少钱 多少人 多少卡去做预讯点真正都是在做预讯点这个阶段所以我个人不是觉得普通的程序员或者说有很多程序员经验的人应该去考虑预讯点这一层因为这一层的确就交给专业的最顶尖的人去做就可以了那它的下一步叫什么叫做后讯点那你可能会有个问题自然这个模型都已经懂Internet上面所有的东西了那我为什么还要做后讯点这件事情那这件事情其实它最主要在做的就是跟人类的偏好进行一些对齐对你的特定的应用场景比如说你是法律的你是做数学的你是编程的你是干嘛的对它进行一个特定的对齐什么叫对齐你刚才说了这个预讯点好的模型它可以给一个英谨 给一个输入它的给个输出甚至它可以帮你补完你的句子比如说你说我爱那它会产生我爱北京天安门但我也爱美国华盛顿这个东西就看起来是人说出来的话但是在这个场景会在这个语境里面总共会感觉政治不正确这个就是跟人的偏好要去做一层对齐那很多这种对齐都是在后续年的阶段包括你听说过的这种强化学习对齐人类的feedback包括现在更多的是这种自主的根据比如说这种destine这种真流都发生在这个阶段让一个老师模型来教一个学生模型这种比较新的这种花样都发生在这个阶段目标就是说让你的产出和人的预期更尽私比如说有些像前感累了聊天累的那他就要把他的情商变得更高一点要能够既有霸总又有小奶狗他知道自己怎么去适应这些角色比如说所以在后续年的阶段我觉得就已经有这种程序员去往这个方向转的机会了因为后续练他也有很多工程性的问题在里面包括其实预性内也一样其实前面预性练这种工程性的问题你也可以去看看一定要算法或者模型层面你可以做这种续练的框架这个其实是比较适合程序员去做的因为其实续练框架收到底也没有特别复杂的内容能够并行所以如果你有很强的这种风布式系统的这种经验你比如说之前做过这种数据的Data Pipeline其实都可以在对应的后续练阶段找到对应的一些位置那么在预讯练和后续练之后你就有一个模型了模型刚才再回到刚才说的就是一堆参数最开始是一些随机的参数经过讯练之后它就变成了一些具体的一些有那么一些意义的参数虽然你去看这一层你不知道这些0.1 0.0 2 0.0 3什么这个是什么意思但是它其实已经把互联网的数据和人类的偏好已经放在这些数字之中了你可以这么理解那对于这么大的一块数据比如说你说DipseekDipseek是级百别链的7000亿的参数现在甚至有上 t 级别的参数它的模型价格比如说是Mix of Experts是混合专家模型它的滋活参数可能没那么多但是整体还是很大的一块你要怎么去高效的去涉服模型让它能够做推理用户给个输入它能给个输出让它非常高效的能够以互联网级别的比如说你每天有成千上万的用户甚至上百万的用户去访问你怎么把这件事情做得高效那就说到了下一步这个叫modelsaving这一块其实是很多程序都可以去尝试的原因是在于什么看这个modelsaving刚才说的就是说把模型有效的在上面跑起来它其实优化一点点对于整个公司来说会带来非常有价值的效率的提升和成本的降低它的优化方式包括比如说像这种flash attention包括像这种specitative decoding加各种hide 加各种classify能够让它输出变得更有效还有它的参数病型多个专家怎么样病型到不同的GPU上面每个GPU跑什么专家什么时候支火什么时候不支火这些都是在modelserv侧面去做的这件事情我们之前同时做过一个比喻就是说模型就好像汽车的引擎那么modelserv就是模型的服务器就像当于其他的车的框架你这个引擎放在这上面你还要跟它有交互你要方向盘你要有杀车你要有油门这个就好比你当有输入进去的时候模型只能take一个输入但是在modelserv侧面你可以把很多输入给这个batch起来这样的话它整一次这个serving的效率就会高很多从这个stack来说你有很多层可以让sde去做的事情第一个你可以在单个机器侧面去看它对机器的硬件使用的效率包括它的网络就是network看到iO包括它的sridingiO现成包括它的GPU,CPU,memory的应用效率包括tash的tate rate等等都可以去看这个是在单个机器上如果您的把单个机器的效率提高那么在一个分布实际统里面您也可以进行四的认为所有的它在用的机器它的效率都会等下的进行一个提高所以你的整体效率就会变得更高那么在这上层可以做这个枯打例如说类似于之前cc家家的会编语原来是说编一期效率不高的时候那你可以直接写会编然后让它的程序运行效率更高那么现在也是一样的就是说你可以直接写枯打把你一些独特的算字能够让它在GPU上运行的效率更高那么你常见的这种attention什么你就不用去写了因为在这种主流框架它背后都已经做了这一层的优化但是如果你有一个创新的架构或者什么那在modal server 层面你可以去把它变成枯打然后跟GPU结合得更好那么再往上走走可以看到整个discuity system层面这些参数怎么并行对吧这些需求怎么 route用户的impote怎么 route什么时候改 batch什么时候改加速怎么样去做这种开程的这种策略等等这些就是更上层的东西其实对于很多again这种有系统经验的有infrastructure经验的这些小伙伴都是很有机会往这些方向去转的甚至你做这种操作系统你做这种file system你做这种比如说freemoke firmware等等各种层面都可以往这方面去加这部分的需求其实还挺大的原因就在于刚才说了只有几少数的公司它会去做pre training这部分但是绝大部分的公司都会去做post training这部分基本上每一家如果它要save at scale的公司都会去有自己的GPU去做modal inference甚至你可以去找工作比如说去togetherAI,Fiveworks,AI等等这些公司就专门做这一件事情帮用户更高效的去saving他们的AI traffic所以其实这方面已经是比较拦海了但是刚才说的整个stack从这个薪水来说可能真的有pre training可能是在几千万美金的年薪那么post training和这个modal server其实是差不多的都可以达到上百万的年薪这个是美金只要你做得好这个是没有问题的对所以这个就是一个市场的一个现状所以大家都可以往这边去转一转在这之上比如说有一些运萎的sre等等相关的那你就可以去看看怎么样去monitoring一个GPU cluster之前可能你比较熟悉的CPU为主的Cluster普遍netty这种Web application这post但是这种Web application的 traffic和这种大量数据交互大量iO的GPU为主的这种network traffic其实它是非常不一样的所以我建议这种sre的都可以去看看怎么样去manage这个GPU cluster怎么样去做operability怎么样去做nification怎么样去做 traffic load的balance和office tracing这些都是非常有价值的因为毕竟效率提升一点点看再说了对于整个公司来说就可以省很多钱对这部分就是模型那你现在有什么了我们再来回顾一下你有一个训练好的模型已经非常高效的能够在你自己的服务器或者在你的脂肪GPU Data Center不管是什么能够高效地把它跑出来那么最后一步就是在上面加应用对不对你毕竟你不是所有用户都愿意用API的方式打一个命令行然后拿到一个书出更多的就是要有见面要有workflow要有其他在上面增加的这种产品的附加价值大家也不要小看这一块其实你看manage那个applexity包括最近被收购的Windsurf其实都主要是在这一层上面干花火大家理解的AI产品并不简简单单只是说我写个promp虽然说promp的也相对比较重要但更多的现在比如说Agent Layer这个workflow layer等等等等这些其实就是把不同的AI的模块或者说AI和你现在其他非AI的模块能够结合起来包括Rag等等这种增强包括它怎么做处存等等这些其实大家不要小看对于模型本身来说在模型能力确定的情况下你就上层的能力做得好其实对于模型的效果还是有非常大的体身甚至你可以做非常简单的这种同时的病情直接问三个模型再把它的结果会综起来最近有篇论文就这样了它发现它的作体能力就是比单个模型要强这个还是挺神奇的一件事情真的跟人的智能有点像三个臭皮酱顶个猪格量那如何把这一层做好非常多的机会都是在承讯员这一层而且这一层的需求是最大的基本上每个号称点AI的公司都需要有这一层的人去做所以作为一个比如说传统的程序员比如说你做这个Wi-Fiplication你做这个Mobile你做这个FullStack等等等等你做普通的Bacchan的都应该往这方面去看一看如何去写AI的Wolfflow比如说用户有个输入对 您在最简单一件事情你判断这个用户输入需不需要去做一层网络的搜索需不需要去做最新的数据的抓取抓取完这最新的数据以后需不需要对它进行清洗对它进行增强和现在的Contacts结合起来然后把这个比较好的问题回复给你这个本身就非常不简单它不简单在很多个层次第一层次就说要不要去做搜索这件事情你让AI自己去判断这个Classic App本身就不太好做第二个你拿来的数据以后怎么样去把更相关的数据结合到之前聊天的记录里面能够把它拿过来这一步Rag也不太好做包括怎么样让它的这种搜索的效率更高效比如说它反复问这些问题你是不是还要去做一层Cash in the Year这些其实都是在Application Layer去做的事情都是程序员的一些机会所以并不是说真的程序员你做个网站什么被AI替代了还有很多新的这种需求AI目前暂时做不了的需求其实都是程序员机会只不过就是说希望让大家能够意识到这一点那我们再来谈谈钱刚才说了这个Pre-Trinity是最高的价值PoseTrinity和ModelSewing可能是差不多的价值那么做这一层首先从公司的层面来说会有非常伟大的公司都在这一层对吧包括你看到Classic App的plexity他们其实估值也很高融资也很高Windsurf 2.25个亿美金被Google收购了对吧这个都非常有价值所以分为两块来看第一块如果你真的觉得自己很有产品的Sense希望你去创业这个是捕捉这一层价值最好的一个机会第二个就是你加入一家公司你看好一层做这个AI的应用的机会你去加入它这个可能程序员的待语和原来程序员差不多了太多当然如果你在某些方面比如刚才说的这种Rag是这种比如说MCP model的Proticle包括这种AgentLayer或者说你能组织非常强的这个Wokeflow包括之前早期这个Lunch&基本上也有做了这一层事情在模型上面增加一些Wokeflow使得能够模型的Cupability看起来好像增强了如果你能在这层做得非常好其实也是非常有价值的对所以整体来说凡是跟AI跟这个模型相关的其实它的原工的一价都比传统程序员其实要高了的确我回到开头的观点我非常同意就是说其实AI相关的这些AgentLayer工程师Research是一个新的公众了已经希望大家可以注意到这一点然后能够有意识的在工作里面去找这些方面的机会如果你是一个比如说这个App的程序员你先从AI的App开始做可能你做的事情还比较基础跟AI没什么太大关系写Prompt 研究Prompt 比较Prompt的效果做一些Eveiled等等再一层一层往里面去做看看能不能比如说通过VaxialDataVase或者说通过其他的方式能够让你Prompt的效果变得更好再往上去做怎么样让它的Serving的效率变得更高做到这个Model Server等等等等这个就是一条非常清晰的路径如果你是在做Model Server福气相关的内容你可以再往上看看看到这个模型的价构去理解模型的价构知道最新的模型有哪些发展的方向最新的算法是哪些逐渐的往更高复加值的方向去走这个可能就是我自己的一个思路也跟大家分享一下好的那今天就讲这么多主要是讲这个普通的程序员怎么像AI程序员转型当然之前说的也都有效能够让AI写扣的时候已经让AI写扣的跟这些工具共存知道他们的边界在哪里怎么在什么时候能够提升你的效率在什么时候可以降低会降低你的效率这些都需要你自己不停地去尝试对所以OK还是回到核心AI这个浪潮S here to stay不可能因为个人的意志精心转移了只能往这上面去扣在任何转型的时候都会有一大批人被淘汰也会有一大批人抓住这个新的红力那抓住红力的人为什么不能是我们好那么今天就讲这么多下期再见拜拜
