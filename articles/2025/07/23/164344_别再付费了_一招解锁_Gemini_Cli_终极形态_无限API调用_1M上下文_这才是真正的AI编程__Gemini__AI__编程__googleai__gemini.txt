Timestamp: 2025-07-23T16:43:44.860795
Title: 别再付费了！一招解锁 Gemini Cli 终极形态，无限API调用+1M上下文，这才是真正的AI编程！#Gemini #AI #编程 #googleai #gemini
URL: https://www.youtube.com/watch?v=O9_fvdzB55Y
Status: success
Duration: 10:02

Description:
以下是对文本内容的总结：

**总结大纲：**

**I. 核心目标**
本教程旨在分享如何利用特定方法实现免费、无限次使用Google Gemini CI AI工具。

**II. 实现原理**
1.  **工具更新支持：** Gemini CI 最新版本（0.1.9及以上）已支持配置自定义的API基础URL和API Key。
2.  **密钥代理：** 借助自部署的`Gemini Balance`项目（该项目内置了多个可用的API密钥），作为Gemini API的代理服务。
3.  **绕过限制：** 通过将Gemini CI指向`Gemini Balance`代理，而非直接连接官方Gemini API，从而绕过官方账号的每日/每小时调用次数限制，并能够无限次使用如Gemini 2.5 Pro等高级模型。

**III. 关键配置步骤**
1.  **环境变量设置：**
    *   在命令行环境中设置`GEMINI_API_BASE_URL`环境变量，其值应指向您自部署的`Gemini Balance`服务的地址（URL或IP）。
    *   设置`GEMINI_API_KEY`环境变量，其值应为您`Gemini Balance`服务的授权令牌。
2.  **Gemini CI 模型配置：**
    *   进入Gemini CI的配置编辑界面（通常通过命令行交互进入）。
    *   在“模型配置”中，务必关闭“启用代码执行工具”选项。此操作是为了避免调用Gemini 2.5 Flash模型时因不支持该功能而导致的400错误。
    *   保存配置。

**IV. 优势与特性**
1.  **无限使用：** 突破官方免费账号的调用次数限制，无限次使用各种Gemini模型。
2.  **高级模型：** 可持续使用更强大的Gemini 2.5 Pro等模型。
3.  **大上下文支持：** Gemini CI支持高达1MB的Token上下文，能够一次性理解当前窗口中的大量信息。
4.  **命令行高效交互：** 作为命令行AI工具，它能直接访问、分析和修改本地文件，无需手动上传，极大提升开发效率。
5.  **替代方案：** 可作为昂贵的Cloud Code等AI开发工具的免费替代品，功能上不相上下。

**V. 注意事项**
*   确保Gemini CI版本符合要求（0.1.9+）。
*   正确配置环境变量，指向您的`Gemini Balance`服务。
*   务必禁用Gemini CI中的“启用代码执行工具”以防止模型调用失败。
*   可通过`Gemini Balance`后台查看实时API调用情况，以验证配置是否成功。

---

**核心观点：**
通过巧妙地结合Google Gemini CI的自定义API配置与自部署的Gemini Balance项目作为代理，用户可以实现对Gemini AI工具的免费且无限次使用，有效规避官方的调用限制。

**Overarching Framework (总体框架):**
通过代理服务与工具配置实现免费无限AI能力获取。

---

**Mermaid 概念图：**
<Mermaid_Diagram>
graph TD
    subgraph "核心目标"
        A["免费无限使用Gemini CI AI工具"]:::goal
    end

    subgraph "实现原理"
        B["Gemini Balance项目 (提供无限密钥代理)"]:::component
        C["Gemini CI (v0.1.9+ 支持自定义API)"]:::component
    end

    subgraph "关键配置步骤"
        subgraph "A. 环境变量设置"
            D("配置GEMINI_API_BASE_URL"):::action
            E("配置GEMINI_API_KEY"):::action
            F["Gemini Balance实例地址/IP"]:::source
            G["Gemini Balance授权令牌"]:::source
            F --> D
            G --> E
        end

        subgraph "B. Gemini CI 模型配置"
            H("禁用 '启用代码执行工具'"):::action
        end
    end

    subgraph "优势与特性"
        I["绕过官方使用限制 (每日/每小时)"]:::benefit
        J["无限使用Gemini 2.5 Pro等高级模型"]:::benefit
        K["支持1MB Token上下文"]:::feature
        L["命令行交互 & 直接文件操作"]:::feature
    end

    A -- "通过" --> C
    B -- "提供代理服务/密钥" --> F
    B -- "提供代理服务/密钥" --> G
    C -- "需要" --> D
    C -- "需要" --> E
    C -- "需要配置" --> H

    D & E -- "使能" --> C
    H -- "确保" --> M["模型调用成功 (包括2.5 Flash)"]:::outcome

    C -- "实现" --> I
    C -- "实现" --> J
    C -- "提供" --> K
    C -- "提供" --> L

    M -- "验证配置成功" --> A

    style A fill:#D8F9D8,stroke:#006600,stroke-width:2px,color:#000;
    style B fill:#FFFACD,stroke:#FFD700,stroke-width:1px,color:#000;
    style C fill:#FFFACD,stroke:#FFD700,stroke-width:1px,color:#000;
    style D fill:#ADD8E6,stroke:#4682B4,stroke-width:1px,color:#000;
    style E fill:#ADD8E6,stroke:#4682B4,stroke-width:1px,color:#000;
    style F fill:#F0F8FF,stroke:#A9A9A9,stroke-width:1px,color:#000;
    style G fill:#F0F8FF,stroke:#A9A9A9,stroke-width:1px,color:#000;
    style H fill:#FFDAB9,stroke:#FFA07A,stroke-width:1px,color:#000;
    style I fill:#CCEEFF,stroke:#0099FF,stroke-width:1px,color:#000;
    style J fill:#CCEEFF,stroke:#0099FF,stroke-width:1px,color:#000;
    style K fill:#E0FFFF,stroke:#00CED1,stroke-width:1px,color:#000;
    style L fill:#E0FFFF,stroke:#00CED1,stroke-width:1px,color:#000;
    style M fill:#90EE90,stroke:#32CD32,stroke-width:1px,color:#000;

    classDef goal fill:#D8F9D8,stroke:#006600,stroke-width:2px,color:#000;
    classDef component fill:#FFFACD,stroke:#FFD700,stroke-width:1px,color:#000;
    classDef action fill:#ADD8E6,stroke:#4682B4,stroke-width:1px,color:#000;
    classDef source fill:#F0F8FF,stroke:#A9A9A9,stroke-width:1px,color:#000;
    classDef benefit fill:#CCEEFF,stroke:#0099FF,stroke-width:1px,color:#000;
    classDef feature fill:#E0FFFF,stroke:#00CED1,stroke-width:1px,color:#000;
    classDef outcome fill:#90EE90,stroke:#32CD32,stroke-width:1px,color:#000;
</Mermaid_Diagram>

Content:
哈喽, 各位小伙伴们, 大家好。 这期节目呢, 要给各位小伙伴们分享一下, 我们如何免费无限的去使用我们一个 Gemline 的一个 CI 的一个工具, AI 工具。 我现在呢, 给大家演示呢, 看到没有? 我现在正在使用它, 让它给我分析一个项目, 叫做 Multiway。 然后呢, 我直接通过控台, 直接让它问一下这个项目, 它现在就在全层的给我进行一个分析。 而且呢, 我这里呢, 是没有登录任何的一个国家账号的。 我这里呢, 借助于我上一期节目, 给各位小伙伴们分享了一个我们 Gemline 的一个 Bal ance 的一个, 就是使用我们 Gemline K 来达到无限使用这么密钥的作用。 那么它的核心原理是什么? 就是我们可以在最新的, 就是在 Gemline CI 的最新版本, 也就是说 0.1.9 的版本, 它现在已经支持我们通过我们配置我们自己的 API 的这个, 就是 UR 和我们一个 API 的一个我们这个 K。 那么我们就可以, 这时候呢, 我们就可以借助我们这个 Gemline Balance 这个, 永久的这个 K, 就是里面我内置的很多这种 K。 就可以达到我们永久免费无限使用我们的一个 Gemline CI 的这么一个功能。 首先呢, 给大家说一下怎么去做。 先给大家演示一下效果。 好, 这里呢, 我就这里呢, 我直接圈一下。 首先呢, 具体这些命令呢, 大家可以看它的文档。 我比如说现在呢, 我现在要问一下它某个目录的东西。 我比如说, 我切到一个……好, 我这里。 我让它帮我分析一下。 好, 这个时候呢, 我就开始回车。 它这个时候就开始扫这个目录。 这个时候呢, 同时呢, 你也可以在你的这个 Gemline Balance 这里呢, 同时在后台可以看到它现在在调你哪个 API。 由于它现在还在扫描。 好, 它现在呢, 还在扫描。 扫描完毕之后呢, 它就开始进行一个……就是说, 我们一个 AI 的一个调用。 我们让它用中文回答。 我们让它使用中文回答。 好, 我们可以看到啊, 它这个时候呢, 刚才其实呢, 在剪辑那个项目的时候, 它又调我了好多次。 有用到的 2 5 Flash 和 2 5 Pro 的这几个模型。 大家可以看到没有? 诶, 这个时候他已经用中文回答, 回答我这个项目是什么了。 他对这个 MT Translator Service 的项目分析, 它是一个机器翻译的服务器。 关键点呢, 它使用一个 Docker 的服务, 然后呢, 比较……的东西。 翻译出来的, 没有任何问题。 非常的棒, 没有任何问题。 而且呢, 我们可以看到, 最主要最主要验证你是否配置成功了, 就是在这里, 能看到它的实时调用。 那么, 就证明你这个已经配置成功了。 它这个密钥呢, 就不会去走你的这个, 今晚的一个里面的配置的。 因为我每个账号呢, 就说你如果登录我账号呢, 每天大概的处理次数是 1000 次。 每小时 60 次的一个请求限制。 但是一般来说, 请求几次之后呢, 它就会, 你模型就不允许用这个精锐 2.5 Pro 这个 模型了。 但是呢, 我们通过这种方式呢, 我们就可以无限的使用 2 5 Pro 这个模型。 只要你有无限的这种密钥。 这个密钥怎么获取呢, 大家网上搜下。 方式很多。 也可以通过呢, 其他方式去注册谷歌账号, 去申请, 都是可以的。 好, 那么我们可以看到, 它这里呢, 已经回答完毕了。 那怎么去做呢? 当我们打开一个窗口的时候呢, 我们需要在这里呢, 去设置我们两个环境变量。 记得, 第一个环境变量呢, 是谷歌金融链的一个 base ur。 这个 ur 就是我们自己在金融链 balance 配置的这么一个地址。 那么就是你自己搭建这个地址。 如果说你是 IP 呢, 那你就填你的 IP 就可以了。 直接填上这个地址就可以了。 那么, 你的金融链 API 呢, 就是你这里的授权的令牌。 就这两个, 就这么简单。 这两个属性, 设置完毕之后呢, 我们直接在你的后面的一个控制台, 直接输入金融链, 就可以进入进去了。 当然, 当你……如果说, 还有一个配置呢, 还需要做一下。 如果说, 你像我这样, 只是做完之后呢, 还有一个问题。 就是说, 当它调用我们一个 2 5 Pro 的一个, 2.5 Flash 的一个模型。 大家看到没有? 我们可以看到这里。 好。 好, 现在没有调用了。 我给大家看一下。 好。 它这里呢, 会去调用, 有时候会去调用我们一个, 就是说, 对一些小型的计算问题呢, 它会去调一些 2.5 Flash 的这种模型。 如果说有个配置不做了呢, 你会调用失败。 那么失败呢, 就是我们可以看到这里。 所以大家如果遇到这种失败呢, 一定要记得。 好。 它会报一个, 这么一个失败的错误。 它会告诉你呢, 当前不支持。 我再往前切一下。 好, 400。 对, 这个。 我现在玩有点慢了。 大概呢, 就会报一个, 我们的一个, 400 的一个错误。 那么这个呢, 我们需要在哪里配置呢? 在我们这个配置编辑这里。 记得。 要把这个, 再切到这里。 在这个模型配置。 模型配置这里呢, 有一个, 启用代码执行工具这个关掉。 如果你不关的呢, 它 2 5 Flash 这个模型的调用会失败的。 会直接, 这边会报错。 那么就可以, 把这个勾掉就可以了。 勾掉之后呢, 这里大家记得一定要点击, 保存配置。 然后再去请求呢。 你就可以在, 控制编码这里, 进行完全的一个, 成功的一个请求了。 那么呢, 我给大家。 一个。 好。 我再来详细介绍一下。 我给大家看一下它这个模型调用。 好。 它首先调用了 2 5 Pro。 它现在内部呢, 大家可以看到, 它这个, 其实我们通过后台可以看到, 它已经开始, 调用我们一个 2 5 Pro 的一个模型。 开始, 分析, 当前的模型的一个内容。 然后呢, 紧接着。 好。 它现在已经调用了一些模型。 我看它又调了没有。 它就调了一次, 2 5 Pro 的一个模型。 它就开始。 详细的。 讲解的这些东西。 当然了。 GMSI 呢。 它也能做的事情很多很多。 大家呢, 可以去它的官网。 进行一个。 就进行一个详细的。 就是有哪些功能呢。 可以进行一个。 查看。 我这里呢, 也给大家简单的介绍一下。 GMSI 呢。 它是一个命令行的 AI 工具。 就是类似我们一个 Cloud Code 的一个工具。 但是我们都知道, Cloud Code 呢。 它的。 相当贵的。 但是呢, 基本上, 现在来说。 GMSI 和 Cloud Code 呢。 它的。 整体的一个能力呢。 是不相上下的。 那么我们可以借助于 GMSI 呢。 去完全替代 Cloud Code 的。 它是一个。 它支持我们最大的一个。 一兆的 Token 上下文。 也就是说。 这里呢。 它会有一个。 这里看到没有。 这里呢。 就是上下文当前占用的大小。 然后呢。 这里会告诉你。 占用当前还剩百分之九十九。 也就是说。 在这个窗口呢。 你还可以继续。 运行很多 Token。 它每次呢。 对于当前窗口的。 所有的这些信息。 它都一次性都是知道的。 这就非常牛逼了。 一兆的。 好。 这它已经回答很清楚了。 大家看到没有。 这个呢。 已经帮我解释的很清楚了。 然后呢。 我们可以看到。 它这里呢。 包括。 还可以支持我们一个 。 就给大家说的。 它可以呢。 指定。 比如说。 我们要到。 像我们写进哪个文件夹。 都是可以执行 。 当然了。 还有我们 。 比如说。 。 还有我们。 。 。 我们调用 mcp service。 都是可以的。 这很多命令。 然后呢。 它这里呢。 基本上来说呢。 就是这些命令。 然后呢。 就是说。 基本来说。 我们通过网页端能做东西呢。 我们都可以通过它。 而且它是。 可以帮我们快速的去改动文件的。 就这些文件。 它可以。 快速改动。 而不需要我们手动一个去改的。 我们之前用传统的这种。 AI 的方式呢。 我们都需要去。 在这里。 比如说问它。 然后再上传文件。 那么。 这种呢。 命令行。 由于它。 已经在。 知道你给它指定的目录。 并且呢。 它是在你当前的这个。 电脑上运行的。 那么它就直接。 可以去检索你的目录东西。 就是直接知道你当前目录。 并且呢。 可以直接修改它。 非常的棒。 但呢。 今天呢。 主要给大家分享一下。 就是免费去使用我们一个。 GMI CI 的工具。 借着我们一个。 GMI BALANCE。 大家呢。 一定要。 知道我们刚才的几个问题点。 一定要记着。 第一个呢。 就是我们这个 K。 按照我这样格式进行一个设置。 然后呢。 第二个呢。 就是我们在这个。 配置这里呢。 模型配置这里。 一定要记着。 在这边。 要把这个。 啊。 启动。 启用代码执行工具。 这个开关。 关闭掉。 啊。 然后当你的一些。 环境变量执行完毕之后呢。 再去执行我们一个。 GMI。 这个窗口。 我们就可以。 进来了。 啊。 就非常方便。 就可以使用了。 啊。 好。 今天呢。 就简单给各位小伙伴。 分享一下我们一个。 借助于。 GMI BALANCE 这个项目。 好。 欢迎大家。 多多关注频道。 点赞。 谢谢。
