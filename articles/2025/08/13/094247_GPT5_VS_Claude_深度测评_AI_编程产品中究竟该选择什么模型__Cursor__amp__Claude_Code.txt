Timestamp: 2025-08-13T09:42:47.013898
Title: GPT5 VS Claude｜深度测评｜AI 编程产品中究竟该选择什么模型？｜Cursor &amp; Claude Code
URL: https://youtube.com/watch?v=q1HfbE_sem8&si=t38_UqgSbxqIpT26
Status: success
Duration: 16:29

Description:
### 核心观点

尽管GPT-5在语义理解和成本方面具有优势，但在实际编程开发场景中，Claude-4 Sonnet在代码生成和功能完整性上整体表现更胜一筹，因此Claude在编程领域的领先地位目前仍不可撼动。

### 总体框架

本文围绕GPT-5发布后，作者在实际编程环境中对GPT-5与Claude-4 Sonnet进行多维度亲身测试与对比，旨在评估GPT-5在编程领域的真实能力，并为开发者提供选择模型的参考建议。

### 总结大纲

**一、引言与测试背景**
*   GPT-5发布，引发编程能力超越Claude

Content:
Hello~朋友们 GPT5 发布了 我也是熬夜看了它的发布会 因为这些闭源大模型的大版本迭代 总是令人期待的 毫无疑问 综合来看 GPT5 是一个优秀的版本迭代 但是 我个人更关注它在编程领域的发展 这两天 有很多博主在称赞 GPT5 的编程能力 称其超过了 Claude 真的是这样吗? 那我们是否要将主力模型 切换到 GPT5 呢? 只看各种跑分的话 GPT5 几乎全面超越了 Claude 在内的所有模型 稳居数据第一 但其实做评价的前提是真的去体验 而不是只看数据 编程领域更需要大家亲身去体验一下 那没有第一时间录制视频介绍 GPT5 是因为我这两天在实际开发环境中 多维度亲身测试了一下 主要还是针对 GPT5 和 Claude 的差异 GPT5 包含了 GPT-5、 GPT-5 Mini、 GPT-5 Nano 可以简单理解为高、 中、 低三个版本 我使用的是 GPT5 而 Claude 目前是前几天最新发布的 Claude-4.1 Opus 和备受好评的 Claude-4 Sonnet 以及 Claude-3.5 Haiku 同样也可以理解为高、 中、 低三款模型 Claude-4.1 Opus 无疑是最好的 网上有很多 Claude-4.1 Opus 和 GPT5 的对比 但我这里使用的是 Claude-4 Sonnet 因为大多数人在实际开发场景下 并不会去使用 Claude-4.1 Opus 成本太高了 对比起来没有太大的意义 我们就按照实际开发中 最常会用到的 Claude-4 Sonnet 与 GPT5 做对比 这样的话 谁好用用谁 很简单的道理 使用的 AI 编程产品分别是 Cursor、 Claude code 这两款最具代表性的产品 主要是因为 Claude code 中的 Claude 模型 上下文相对干净 而 Cursor 会出于功能通用性衡量上 会有很多内置提示词 某些场景上会影响 Claude 的发挥 这也是很多人说 Cursor 中使用 Claude 降智的点 有好有坏吧 这不是本期的内容重点 所以两者综合来看是比较合理的 相信这也是大多数朋友们 用的最多的两款产品 测试环境就是我在实际开发中的任务 那由于我前后端都做 并且是基于我在做的一个新的小项目 去使用的 如果仅仅是选择几个方向的编程 Demo 去对比的话 是没有实际参考意义的 那目前这个测试 无论是前端界面、 后端逻辑、 以及整体架构上都可以兼顾到 但是由于不是使用 Demo 测试的 我并不能直接给大家看代码 只能和大家聊一下 我个人在多方面对比下的结论 希望大家可以理解 最后也会给大家提供一个 相对直观的小例子 大家可以自行评判 那本期视频虽然是个人观点 但绝对保质、 保真 供大家参考 其实在 GPT5 发布之前 Claude 无疑是编程领域 大模型的无冕之王 因为从 Claude 发布以来 一直都把 Coding 放在了核心位置 收效也是明显的 尽管它的定价很高 但依然获得了认可 比较有共识性的一句话是 脱离 Claude， 所有的 AI 编程产品都是扯淡！ 这句话并不是危言耸听 我们可以通过前段时间 Claude 拒绝为 Windsurf 提供服务 而导致 Windsurf 用户大量流失 这一事件 就可以看出 Claude 模型的重要性 其实截止到目前为止 绝大多数专业开发者 在选择一个 AI 编程产品付费之前 第一点是看它是否支持 Claude 我们可以来看一张 OpenAI 和 Anthropic 的 2025 年营收对比图 OpenAI 年营收在 120 亿美元 而 Anthropic 则是 50 亿美元 有很大差距对吧 但是从营收构成上我们可以看到 Anthropic 在 API 调用的营收 是要超过 OpenAI 的 而 API 调用过程中 仅仅是 Cursor 和 GitHub Copilot 两者的 API 调用消耗就有 14 亿美金 大家可以品一品这是什么概念 那在 GPT5 一个多小时的发布会上 其中大约一半时间 都是在介绍 GPT5 和 Coding 相关的内容 显然 OpenAI 也意识到了 Coding 的重要性 准备去用 GPT5 和 Claude 在编程领域打打太极 那究竟哪个模型更适合编程环境呢？ 我们来看看多维度对比的结果 那由于我写的是一个新的项目 所以我将我想要写的项目介绍 以及我想要使用的基础技术栈 都写在了提示词中 注意我只写了相关的技术栈 并没有明确给出一个架构规划 然后 我在 Cursor 中分别使用 GPT5 和 Claude-4 Sonnet 让其生成项目基础框架 并且帮我优化整体架构 那最终 Claude-4 Sonnet 使用了我说的技术栈 帮我生成了代码 并且帮我扩充了很多内容 比如亮色暗色模式、 多语言切换 还给了一些示例以及文档 在第一次启动时 有一个配置项有问题报错了 然后我又让其查找问题并且修复 最终成功启动了项目 虽然整体架构 并不是完全按照我预期想法生成的 但是完整性非常高 我甚至需要删掉一些不必要的内容 来降低开发的复杂度 最后他还给了我一些建议 那由于这是一个 Nextjs 搭配 Prisma ORM 的项目 它在生成完之后还询问我部署方案 如果走 Serverless 方案的话 提醒我需要从 Edge 边缘运行时环境 导出 Prisma 客户端 相当不错 而 GPT5 同样完成了任务 也都是用到了我说的一些技术栈 并且帮我优化了架构 扩充了很多内容 但完整度并不是很高 启动因为缺少一些内容报错了 然后我就让它反复修改了很多次 才启动成功 也没有给我一些建议 但是对比之前的 GPT-4o、 GPT-4.1 明显要好上不少 那这一趴 Claude-4 Sonnet 胜出 但是可以看出 GPT5 的整体项目架构规划上 还是可以的 就是生成不太给力 然后我就花了一些时间 捋了捋项目基础架构 把两份代码保持一致 这样就又是处于同一个起跑线上 那我又简单梳理了下需求 然后将需求落实到文档上 让两个模型分别基于文档开始写页面 最开始我是让两个模型基于需求 帮我一次性输出相关的页面 那最终 Claude-4 Sonnet 生成的页面还是相当完整的 包括一些逻辑交互的细节也都很好 就是页面吧 也不是不能看 就满满的 Claude 风格 因为大家都知道 如果不使用提示词 约束 Claude 生成的界面样式 只是让它基于需求 去生成一个好看的界面 那这个时候 Claude 生成的页面会十分格式化 比如它会给你搞点渐变色 以及浮夸的小动效 如果大家用多了就知道 不约束主题色的话 大概率就是橙蓝紫 3 种颜色 选两种渐变 但是由于功能完整度很高 所以初看整体是不错的 就是我个人用 Claude 生成的多了 也就看腻了 所以建议大家用 Claude 写页面 页面的风格主题色啥的 都提前在提示词写好 然后是 GPT5 GPT5 生成的页面 它不使用渐变色 这点还是不错的 就是吧 页面中很多功能项都十分简陋 页面的样式还是比较统一的 有一些小细节 但是不多 那这一趴 Claude-4 Sonnet 再次胜出 随后我又选中几个页面 给出一些风格以及样式的提示词 让两个模型分别去重构这个页面 诶～这次 GPT5 的样式生成相当不错 Claude-4 Sonnet 也还行 但是明显不如 GPT5 生成的样式好看 但还是同样的问题 GPT5 的页面功能逻辑部分差了 Claude 很多 我还尝试给出一些页面样式参考 让两个模型分别去生成 这个时候 Claude-4 Sonnet 的学习能力很强 生成的页面 基本能够和我给的示例保持一 致但是 GPT5 就不太行了 其实给大家介绍界面 UI 生成的时候 大家应该能够感受到 Claude 的逻辑生成能力 是要强过 GPT5 不少的 当然之前只是页面的功能逻辑 我们把几个页面的样式调整好之后 再次将两份代码保持一致 然后同时测试了 让两个模型分别基于需求 和页面生成相关的 CRUD（增删改查）接口 最终的结果是 Claude-4 Sonnet 生成的接口几乎是没有问题的 有一些复杂接口有点小问题 但是一般都能够在两三步内解决 并且 Claude 还在接口生成后 帮我自动做了页面接口对接 而 GPT5 生成的简单接口还好 稍微复杂一点就会有各种问题 修复时也需要反复修改很多次 也没有帮我做页面接口对接 生成完接口调整好之后 我又手动的让它去做页面接口对接 因为会涉及到多个文件的修改 这里同样还是会有一些小问题存在 需要再次进行修复调整才行 那之后我还测试了手写一个标准接口 让两个模型学习 并且帮我生成其他的类似接口 这次两个模型的表现都很不错 有点小瑕疵也都很快就解决了 但是 一旦接口逻辑和视力接口不太一样时 GPT5 的生成就会存在一些问题 需要经过不断修复才行 这是前期开发中 我刻意使用两份相同代码 分别用这两个模型测试的结果 那在后续的开发中 我没有再使用两份代码同步测试 而是进入正常的开发流程用 Cursor 做主力开发 比如生成函数、 逻辑优化、 修改样式、 调整接口、 修复 BUG 等等等等 和我日常使用 AI 编程工具没啥区别 只是这中间 我会经常性的切换两个模型去使用 同时我还会使用 Claude code 打打辅助 一般情况下 当我觉得 GPT5 处理内容 处理的比 Claude-4 Sonnet 好时 我就会用 Claude code 再去跑一遍类似的逻辑 以确保这种场景下 不是 Cursor 影响了 Claude 模型的发挥 那在这个前提下 我发现 GPT5 在单文件处理上 其实是和 Claude-4 Sonnet 不相上下的 但是只要业务涉及到多个文件 Claude-4 Sonnet 的发挥往往会更好一些 但是当多个文件的上下文过大时 或者是持续的在一个 Chat 面板中 和大模型交互 上下文达到了一定的量 Claude-4 Sonnet 的能力会断崖式下降 这点在 Claude code 中还不是很明显 但是在 Cursor 中会非常明显 因为 Cursor 的一些功能集成 导致内置提示词很多 那其实在 Cursor 中使用 Claude 模型 我们能够真正使用到的上下文长度 是要比在 Claude code 中短很多的 所以在 Cursor 中 就会很容易触碰到这个界限 很多朋友不是很注意这个问题 所以就会时常感受到降智的体验 那反观 GPT5 它的上下文长度要比 Claude 长很多 OpenAI 官方给出的最大上下文长度 是 400K Tokens 而 Claude 则是 200K Tokens 差了一半 尽管在 Cursor 中 GPT5 的最大上下文长度是 272K 这依旧要比 Claude 长了很多 所以 GPT5 反而不太容易触碰到这个界限 这一点也是 GPT5 的优势 那由于之前的观点 无法让大家直观的看到 所以我补充一个小案例 大家如果看过我 之前的 Cursor 教程视频的话 就会知道 我在上期 Cursor 视频末尾 演示了一个原型图生成的案例 这是我之前随便想的 一个关于番茄时钟的产品核心需求 其实我很喜欢用这个案例去测评模型 因为这个需求足够小众 市面上没有极其出色的产品 能够给到大模型参考 所以结果也会更真实一些 而且让其生成原型 其实本质上也是在写代码 我们先在根目录创建一个 prd 文档 放进去我的核心需求 然后让大模型去优化 再在根目录下创建一个 pr 文档 放进去一份原型生成的基础提示词 再让大模型基于优化后的 prd 文档 去优化这个 pr 提示词文档 最后让大模型基于 prd 需求文档 和 pr 提示词文档 去生成这个产品需求的原型界面 我分别使用 GPT5 和 Claude-4 Sonnet 生成了一份原型 我们来看一下过程和结果 在使用 GPT5 的这个案例中可以看到 第一次我让 GPT5 帮我优化 prd 文档 它确实帮我优化了 但是它并没有给我直接写入 prd 文件 所以接着我让它做了一个写入操作 然后是优化 pr 提示词文档 最后是基于 pr 提示词文档和 prd 需求文档 去生成原型 我们来看一下 GPT5 优化的需求文档 和提示词文档 其实可以看到 这份 prd 文档 对比我们优化前的那段核心功能 看上去补充的很完整 提示词文档对比优化前的那些描述 也很不错 OK 我们看一下生成的结果 很令人震惊对吧 一共生成了 11 个页面 它除了给了个页面筛选以及苹果边框 生成的还不错之外 功能原型太简陋了 甚至都不是很完整 按理说不应该这样的 所以我仔细检查了下才发现 原来模型用错了...... Cursor 中 GPT5 系列的模型 和 OpenAI 官方名字不一样 官方的 GPT5 在 Cursor 中应该是 GPT-5 High 而我用的是 GPT-5 对标到 OpenAI 官方那边就是 GPT-5 Mini 然后我就又切换到 GPT-5 High 重新走了一遍流程 这次生成的速度明显慢了很多 不过效果好的话也可以接受 可以看到 这里依然是我手动让它去写入文件 并没有给我自动写入 其他的流程都一样 我们看看 生成的 prd 需求文档和 pr 提词文档 明显要比之前的版要详细很多 OK 看看最终生成的原型结果 嗯...虽然功能依旧有些简陋 起码样式还是比较统一的 功能也是相对完整 一共生成了 8 个页面 但是对比我上一期视频中 使用 Claude 3.7 Sonnet 生成的原型 除了页面多了几个 单论页面质量感觉还不如 Claude 3.7 Sonnet 那我们接下来再试试 Claude-4 Sonnet 还是同样的步骤 可以看到这里 Cursor 进行了处理 它将提示词拆解成任务步骤 然后一个个执行 最终优化后的 prd 文档 也直接帮我写入文件了 后续优化 pr 提示词 以及最终的原型生成 也都拆解了 任务步骤 逐步生成 这个其实不是 Claude 的能力 而是 Cursor 内部针对 Claude 模型 有很多特殊处理 Cursor 很多功能是只支持 Claude 模型的 它的心态就是抱紧 Claude 大腿 当然 Cursor 也为此 放弃了 Claude 模型的清爽调用 我们检查一下 最终优化的需求文档和提示词文档 其实我们可以明显的看到 抛开内容不论 Claude-4Sonnet 生成的文档 格式上是比较简单的 没有 GPT5 那么多样化 GPT5 生成的文档使用了很多 Markdown 格式 不过 Claude 这个文档 看内容其实也都涉及到了 OK 我们来看看生成的原型结果 我只能说没有对比就没有伤害 一共有 10 个页面 先不说界面功能上是十分完整的 还多了很多细节 还有移动端的菜单栏、 导航栏 那至于页面风格也是很一致的 大家可以看到 这就是我之前说的标准 Claude 风格 蓝紫色渐变 加上这小动效 我现在都对 Claude 生成页面应激了 不是说不好 而是看腻了 但功能是非常完备的 交互也有 我们刷新一下 可以看到 这个专注结束页面 还给了点缤纷的落雨效果 那给大家看这个案例 是因为它不像官网落地页 或者是贪吃蛇那种东西 这其实是一个相对来说 比较贴合实际的需求 而原型生成本质上也是代码的生成 是具有一定代表性的 你可能会质疑 是不是提示词优化环节的问题 我可以很负责的告诉大家 有一点点 但真的影响不大 不信的话 我还进行了交叉测试 我们可以基于 GPT-5 High 优化的 prd 文档 以及 pr 提示词文档 让 Claude-4 Sonnet 模型生成原型 同样 也可以基于 Claude-4 Sonnet 优化的 prd 文档 以及 pr 提示词文档 让 GPT-5 High 模型生成原型 多说无益 我们可以直接看看结果 这是基于 GPT5 优化的文档 Claude 生成的模型 这个结果中 图标是有些问题的 整体界面样式比较一般 倒计时这个页面有很大的问题 但是可以看到 整体的页面功能依然生成的非常细致 再看一下基于 Claude 优化的文档 GPT5 生成的原型 这个生成怎么说呢 背景颜色倒是还行 整体功能也是闭环了 就是页面略微有一点点简单 不是简陋 而是简单 而且这个手机框和内容没有适配好 但是值得一提的是 这是唯一一个做了明暗色切换的 之前 Claude 那一版也是遗漏了 那点击就会切换模式 我们需要刷新一下 OK 还给了一个说明文档 总体来说 这个也是很不错的 那这个交叉测试能够说明什么？ 我们前面有聊到过 GPT5 生成的文档 其实是要比 Claude 生成的要华丽些 因为在结构上 用 Markdown 语法用的比较多 通过这四个结果的对比我们可以得出 Claude 生成的文档虽然结构简单 但内容信息都给到了 而通过这几个结果我们也不难看出 GPT5 在代码生成上确实还有所欠缺 细节不够完整 当然这也不能代表全部 仅在编程领域适用 OK 最后我们总结一下 从一个专业开发者、 Vibe Coder 的角度去看 其实 GPT5 在实际编程开发方面 是不如 Claude-4 Sonnet 的 Claude-4.1 Opus 我不怎么用 所以也没有试 但是可以确定的一点是 Claude-4.1 Opus 是超过 Claude-4 Sonnet 的 当然 GPT5 也并不弱 最令我感到诧异的一点 是 GPT5 的语义理解 其实在这之前 GPT-4o 就凭借图像生成大火了一把 除了它优秀的生成能力之外 其实很多人最喜欢的一点是 它可以很好地通过语义理解 去生成图像 要知道 之前无论是 Stable Diffusion 还是 DALL·E 3 都是需要一些格式化的提示词 才能生成较好的图像 而 GPT5 显然是继承了这一点 在给到 GPT5 任务让其生成代码时 它要比 Claude 更能理解我想要表达的点 不需要我太刻意的优化提示词 当然这个差异并不大 但是 我确实会遇到一些 Claude 会误解的需求 GPT5 就可以很好的理解我所表达的内容 只是代码生成方面 我个人看来 GPT5 确实不太行 有点口头上的巨人 行动上的矮子的那意思 归根结底就是垂直领域还是不太行 这其实也体现了 GPT5 还是一个更趋向于通用性 理解的大模型 能够适配的场景很多 综合来看也更智能 但是就编程这个垂直领域而言 Claude 目前的地位还是不可撼动 不过差距也并不是很大 GPT5 的提升还是很可观的 用肯定是可以用的 关键是它比 Claude 便宜 GPT5 的定价甚至比 Claude-4 Sonnet 还便宜 这样的话 如果朋友们是在使用 Claude Code 这种以 Claude 为主的按量计费产品 是可以考虑通过 MCP Server 的方式 集成 GPT5 作为辅助使用 让 Claude 将一些编码任务 分派给 GPT5 来执行 实现模型间的协同工作 这样可以极大降低我们的成本 如果是在 Cursor 中 并且是按次计费的这种调用模式 那就没有必要用 GPT5 了 还是首选 Claude！ 再次说明 以上仅适用于编程领域 OK 本期的视频到这里就结束了 感谢大家的观看 记得三连 下期再见~
