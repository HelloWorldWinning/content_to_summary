Timestamp: 2025-10-28T06:54:21.533654
Title: Human vs. AI: Winning Meta Hacker Cup "Qual" Round 2024?
URL: https://youtube.com/watch?v=wKVbwXhQk80&si=TMpAGrO9oqOdxHPe
Status: success
Duration: 53:25

Description:
好的，这是对所提供文本的核心思想提炼和总结。

### **一、 核心结论 (一句话)**

在此次编程竞赛中，人类选手通过对问题的深刻洞察和创造性的算法设计，最终取得了对人工智能的决定性胜利。

### **二、 内容框架**

该内容记录了一位顶尖程序员参加 Meta Hacker Cup 编程竞赛的全过程。其 overarching framework (宏观框架) 遵循了典型的**“竞赛解题”**模式：
1.  **赛前背景**：介绍比赛（Meta Hacker Cup）及“人类 vs. AI”的特殊主题。
2.  **实时解题**：展现比赛中的实时思考、编码与调试过程（文本中为片段式呈现）。
3.  **赛后复盘**：系统性地回顾并讲解每个问题的核心挑战、关键洞察（Key Insight）以及最终的解决方案。
4.  **结果与反思**：宣布赢得比赛第一名，并确认人类在该次创造性问题解决的较量中战胜了AI。

### **三、 各问题核心思路解析**

#### **问题 A: 旅者过桥 (Travelers & Bridge)**

*   **目标**：让N名旅者用最少时间通过一座桥，可单人或双人（一人推车）通过。
*   **核心洞察**：最优策略是始终利用速度最快（`Si`值最小）的人作为“摆渡者”，负责运送其他人过桥并独自返回。
*   **解决方案**：基于最快的速度 `min(S)` 和人数 `N`，通过一个简单的数学公式 `min(S) * max(1, 2*N - 3)` 直接计算出总时间，并处理好 `N=1` 的边界情况。

#### **问题 B: 概率计算 (Probability Calculation)**

*   **目标**：解决一个与代码行数变化相关的概率问题。
*   **核心洞察**：问题的本质可以被抽象和简化为一个核心数学方程：`P^(N-1) = Q^N`。最初的思维误区（使用 `1-P`）导致了解题的延迟。
*   **解决方案**：直接求解该方程，计算出新的概率 `Q`，然后根据题目要求进行格式化输出。

#### **问题 C: 蚂蚁归线 (Ants on a Line)**

*   **目标**：计算最少需要移动多少只蚂蚁，才能使所有蚂蚁位于同一直线上。题目允许答案在真实值 `M` 和 `2M` 之间。
*   **核心洞察**：答案的近似性要求是一个关键提示。如果最优解 `M` 小于总数的一半（`N/2`），则意味着超过一半的蚂蚁已经共线。
*   **解决方案**：采用**随机化算法**。通过多次随机选取两只蚂蚁来定义一条候选直线，并计算该直线上的蚂蚁数量。由于多数蚂蚁共线，这种方法有极高的概率（每次尝试至少 `1/4`）找到那条“最优”直线。

#### **问题 D1: 冰壶游戏 (点状石子)**

*   **目标**：模拟一个冰壶游戏，所有石子大小可忽略，计算它们的最终位置。
*   **核心洞察**：
    1.  石子被投掷的相对顺序（从远到近）在整个过程中保持不变。
    2.  所有石子最终占据的位置集合，恰好等于它们初始被赋予的能量值集合。
*   **解决方案**：将所有初始能量值进行排序，排序后的结果即为所有石子从远到近的最终位置。

#### **问题 D2: 冰壶游戏 (宽石子)**

*   **目标**：模拟规则更复杂的冰壶游戏，石子具有单位宽度，碰撞物理也随之改变。
*   **核心洞察**：石子的最终停止位置 `p` 取决于其能量 `e` 和在它前方已存在的石子数量。可以定义一个位置函数 `F(p) = p - (位置小于p的石子数量)`，目标是找到使 `F(p) = e` 的最大位置 `p`。
*   **解决方案**：这是一个动态的查询和更新问题，需要使用**高级数据结构**。演讲者使用了一个**带懒惰标记的伸展树 (Lazy Splay Tree)** 来高效地执行以下操作：
    1.  通过二分查找快速定位目标位置。
    2.  插入新的石子。
    3.  对一个范围内的所有石子位置进行批量更新（懒惰标记的应用）。

<Mermaid_Diagram>
graph TD
    subgraph "Meta Hacker Cup: 人类智慧的胜利"
        A["元宇宙黑客杯"]
        B["核心主题: 人类 vs. AI"]
        C["最终结果: 人类获胜 🏆"]
        A -- "引入" --> B -- "竞赛结果" --> C
    end

    C --> D{"解题路径"}

    subgraph "问题 A: 旅者过桥"
        A1["问题: N人过桥最短时间"]
        A2["核心洞察: 最快者摆渡策略"]
        A3["解决方案: 简单数学公式"]
        A1 --> A2 --> A3
    end

    subgraph "问题 B: 概率计算"
        B1["问题: 求解新概率"]
        B2["核心洞察: 抽象为数学方程"]
        B3["解决方案: 直接解方程"]
        B1 --> B2 --> B3
    end
    
    subgraph "问题 C: 蚂蚁归线"
        C1["问题: 最小移动蚂蚁数(近似解)"]
        C2["核心洞察: 利用近似条件进行随机化"]
        C3["解决方案: 随机采样点对"]
        C1 --> C2 --> C3
    end

    subgraph "问题 D: 冰壶游戏"
        subgraph "D1: 点状石子"
            D1_1["问题: 计算最终位置"]
            D1_2["核心洞察: 相对顺序与位置集合不变"]
            D1_3["解决方案: 对能量值排序"]
            D1_1 --> D1_2 --> D1_3
        end
        subgraph "D2: 宽石子"
            D2_1["问题: 模拟复杂物理规则"]
            D2_2["核心洞察: 定义位置函数 F(p)"]
            D2_3["解决方案: 高级数据结构<br/>(带懒标记的伸展树)"]
            D2_1 --> D2_2 --> D2_3
        end
    end

    D --> A1
    D --> B1
    D --> C1
    D --> D1_1
    D --> D2_1

    style A fill:#D2B4DE,stroke:#333,stroke-width:2px
    style B fill:#A3E4D7,stroke:#333,stroke-width:2px
    style C fill:#FAD7A0,stroke:#AF601A,stroke-width:3px,font-weight:bold
    style D fill:#FCF3CF,stroke:#333,stroke-width:1px

    style A1 fill:#FDEDEC,stroke:#333,stroke-width:1px
    style B1 fill:#FDEDEC,stroke:#333,stroke-width:1px
    style C1 fill:#FDEDEC,stroke:#333,stroke-width:1px
    style D1_1 fill:#FDEDEC,stroke:#333,stroke-width:1px
    style D2_1 fill:#FDEDEC,stroke:#333,stroke-width:1px
    
    style A2 fill:#EBF5FB,stroke:#333,stroke-width:1px
    style B2 fill:#EBF5FB,stroke:#333,stroke-width:1px
    style C2 fill:#EBF5FB,stroke:#333,stroke-width:1px
    style D1_2 fill:#EBF5FB,stroke:#333,stroke-width:1px
    style D2_2 fill:#EBF5FB,stroke:#333,stroke-width:1px

    style A3 fill:#E8F8F5,stroke:#333,stroke-width:1px
    style B3 fill:#E8F8F5,stroke:#333,stroke-width:1px
    style C3 fill:#E8F8F5,stroke:#333,stroke-width:1px
    style D1_3 fill:#E8F8F5,stroke:#333,stroke-width:1px
    style D2_3 fill:#E8F8F5,stroke:#333,stroke-width:1px,font-weight:bold
</Mermaid_Diagram>

Content:
hey everyone what's up we are back this, hey everyone what's up we are back this, year with another year of meta hacker, year with another year of meta hacker, year with another year of meta hacker, cup um this is going to be the first, cup um this is going to be the first, cup um this is going to be the first, round and one thing that's exciting this, round and one thing that's exciting this, round and one thing that's exciting this, year is they actually have an AI track, year is they actually have an AI track, year is they actually have an AI track, so we'll see if uh the best AI can solve, so we'll see if uh the best AI can solve, so we'll see if uh the best AI can solve, these problems um for me I will not be, these problems um for me I will not be, these problems um for me I will not be, doing the AI track today but I'll be, doing the AI track today but I'll be, doing the AI track today but I'll be, doing the human track so yeah let's see, doing the human track so yeah let's see, doing the human track so yeah let's see, can the humans beat the AIS or we'll be, can the humans beat the AIS or we'll be, can the humans beat the AIS or we'll be, the other way around, the other way around, the other way around, all right we're about to get, all right we're about to get, all right we're about to get, started awesome here we, go okay cross alone in si, go okay cross alone in si, seconds there's a, so you should always just bring the, so you should always just bring the, fastest, person so you have to bring someone back, person so you have to bring someone back, so, it is at, it is at, least oh, least oh, least oh, um n is one then it's just s0, um n is one then it's just s0, um n is one then it's just s0, otherwise well actually it's oh 2, this so we're all on case three where is, this so we're all on case three where is, that, 32 oh it oh I, 32 oh it oh I, see one, two so it's actually it's actually this, two so it's actually it's actually this, is this what it is, it, it, cool oh, code like just about this is very, code like just about this is very, annoying but okay here we go submit that, two uh Q minus, two uh Q minus, P 100, this we got and then obviously, this we got and then obviously, this, minute um yeah actually why is this p, minute um yeah actually why is this p, is 1us p, is 1us p, is 1us p, [Music], power something is something, power something is something, here, so oh shoot it's actually what am I, so oh shoot it's actually what am I, doing it's, doing it's, doing it's, this right I don't know why I did this, this right I don't know why I did this, this right I don't know why I did this, one, okay this should, okay this should, be okay that see that made no sense but, be okay that see that made no sense but, be okay that see that made no sense but, we should be good now, submitted all right let's just keep, submitted all right let's just keep, going yeah I don't know what the leader, going yeah I don't know what the leader, going yeah I don't know what the leader, board is but let's just go first I don't, board is but let's just go first I don't, board is but let's just go first I don't, know, um maybe I'm first I'm first in the, um maybe I'm first I'm first in the, human track all right let's go, interesting how many ants okay so I mean, interesting how many ants okay so I mean, you're trying to find how many ants are, you're trying to find how many ants are, you're trying to find how many ants are, oning, to move okay so then at least half of, to move okay so then at least half of, them are on the same, them are on the same, them are on the same, line right and if half of them are on, line right and if half of them are on, line right and if half of them are on, the same line because if if we don't, the same line because if if we don't, the same line because if if we don't, have half of them on the same, yeah great got it, yeah great got it, so I want my let see maybe, let's do, let's do, that so that's a class that gives me, that so that's a class that gives me, that so that's a class that gives me, Point operations so the input is going, Point operations so the input is going, Point operations so the input is going, to be n and, then that is there before that, then that is there before that, right yeah okay now for least half what, right yeah okay now for least half what, right yeah okay now for least half what, are the, are the, are the, chances I, chances I, chances I, mean I can do, mean I can do, mean I can do, 100 very, one quick, one quick, thing right and, thing right and, thing right and, now just make sure that this doesn't, now just make sure that this doesn't, now just make sure that this doesn't, change, change, change, [Music], not oh that's a little tricky because, not oh that's a little tricky because, it's not going to be exactly, it's not going to be exactly, it's not going to be exactly, right that's okay that's actually okay, right that's okay that's actually okay, right that's okay that's actually okay, that is, that is, that is, okay yeah I guess, oh I see wait so just imagine the stone, oh I see wait so just imagine the stone, just goes, through oh you don't know which one it, through oh you don't know which one it, is, 9 5 N9 you five, 9 5 N9 you five, yeah okay is closest to, yeah okay is closest to, yeah okay is closest to, one three so, E1 let C instead I know two Okay cool so, E1 let C instead I know two Okay cool so, read an, read an, read an, n n and G and then we, tie up with the of the lowest index okay, tie up with the of the lowest index okay, great so if there's a tie you want the, great so if there's a tie you want the, great so if there's a tie you want the, bigger one, just walking that Smit time, just walking that Smit time, output make should to d1cc, cool same, cool same, yep um and then yeah now it's one unit, yep um and then yeah now it's one unit, yep um and then yeah now it's one unit, wide so what does that, change it's not loading but we are in, change it's not loading but we are in, first, first, first, Gus the right yes so it's true p and, Gus the right yes so it's true p and, Gus the right yes so it's true p and, stone at P plus one moving Stone stops, stone at P plus one moving Stone stops, stone at P plus one moving Stone stops, at, at, at, p is not, St how's that, St how's that, work oh that's like, work oh that's like, work oh that's like, free oh, free oh, free oh, interesting probably need, interesting probably need, interesting probably need, a or something let's see, the third 8 7 96 okay so 8 seven we're, the third 8 7 96 okay so 8 seven we're, going to go to nine but boom boom, 11 right I need like a different model, 11 right I need like a different model, to make this work, okay let's see let's think about it so, okay let's see let's think about it so, yeah this is, yeah this is, yeah this is, helpful, guess oh because otherwise they would, guess oh because otherwise they would, they all get stuck here yeah that's bad, they all get stuck here yeah that's bad, they all get stuck here yeah that's bad, Okay so, open Okay, open Okay, so let's tomorrow, where a problem where there's a bunch of, where a problem where there's a bunch of, stuff and then, one de position so def all these by one, one de position so def all these by one, and, maybe they maintain the same relative, maybe they maintain the same relative, order a n you're trying to a nine you, order a n you're trying to a nine you, order a n you're trying to a nine you, want to position, want to position, want to position, where 11, where 11, where 11, 11us things, empty oh yeah so here here for example, empty oh yeah so here here for example, we just find the ninth empty Spot 1 2 5, we just find the ninth empty Spot 1 2 5, we just find the ninth empty Spot 1 2 5, 1 2 3 4 5, 1 2 3 4 5, 1 2 3 4 5, 6 Spot 7th empty spot the ninth empty, 6 Spot 7th empty spot the ninth empty, 6 Spot 7th empty spot the ninth empty, spot deck, one we're finding the six empty Spot 1 2, one we're finding the six empty Spot 1 2, 3 4 5 eight right, no it's a spr it's a lazy SP Tre do I, no it's a spr it's a lazy SP Tre do I, really want that I mean what do I need, really want that I mean what do I need, really want that I mean what do I need, to do I need to binary, is display lazy is that what I, is display lazy is that what I, want I want, lazy yeah I need BL a little, lazy yeah I need BL a little, crazy I do it this, way what can I do Cory, way what can I do Cory, range for, g yeah operations there's no reverse, g yeah operations there's no reverse, there's no just add, need oh do I even need Max I don't need, need oh do I even need Max I don't need, but doesn't just keep, cool um below is, cool um below is, Tre wait I am searching for, oh I see I can do this okay, oh I see I can do this okay, so oh this is, so oh this is, so oh this is, just should, just should, just should, join, join, join, node both, friend where's friend get, friend where's friend get, Max get Max, want is it, want is it, least, least, least, yeah or E it's at least e, then wait sorry if it's at least e no no, then wait sorry if it's at least e no no, no if it's at most he, fine okay so now we have that and then, fine okay so now we have that and then, now, right d2cc and, right d2cc and, S and just real, okay it's going to take a while littleit, okay it's going to take a while littleit, I have 100 points and I am in, long oh this is what I want to see too a, long oh this is what I want to see too a, Clos track a open track, AI to be fair yeah I think none of these, AI to be fair yeah I think none of these, were that although be is pretty easy I, were that although be is pretty easy I, were that although be is pretty easy I, actually misunderstood it for a sec, actually misunderstood it for a sec, actually misunderstood it for a sec, but yeah it's just some very simple, us it's just, us it's just, that like yeah I would think I can get, this maybe they just didn't attract, this maybe they just didn't attract, enough, enough, enough, interesting AI Cutters I don't know okay, interesting AI Cutters I don't know okay, interesting AI Cutters I don't know okay, cool loaded um yeah so we are in first, cool loaded um yeah so we are in first, cool loaded um yeah so we are in first, with a pretty solid lead um, with a pretty solid lead um, with a pretty solid lead um, even if this guy submitted D2 right now, even if this guy submitted D2 right now, even if this guy submitted D2 right now, he'd still be 20 20 minutes behind over, he'd still be 20 20 minutes behind over, he'd still be 20 20 minutes behind over, 20 minutes so cool good stuff um all, 20 minutes so cool good stuff um all, 20 minutes so cool good stuff um all, right going to grab some food and I'll, right going to grab some food and I'll, right going to grab some food and I'll, be back later to explain my, Solutions all right so I've been a, Solutions all right so I've been a, little lazy it's been two weeks since, little lazy it's been two weeks since, little lazy it's been two weeks since, the contest and I haven't recorded a, the contest and I haven't recorded a, the contest and I haven't recorded a, contest review yet but we can just do, contest review yet but we can just do, contest review yet but we can just do, that now um so yeah so we did end end up, that now um so yeah so we did end end up, that now um so yeah so we did end end up, winning contests and solved all the, winning contests and solved all the, winning contests and solved all the, problems um and the contest organizers, problems um and the contest organizers, problems um and the contest organizers, even gave me a little shout out um here, even gave me a little shout out um here, even gave me a little shout out um here, uh turn I was the first to solve each, uh turn I was the first to solve each, uh turn I was the first to solve each, problem as well so pretty solid win and, problem as well so pretty solid win and, problem as well so pretty solid win and, then also happy to report that we did, then also happy to report that we did, then also happy to report that we did, beat the AI so if you look at so this is, beat the AI so if you look at so this is, beat the AI so if you look at so this is, a human results if you look at the AI, a human results if you look at the AI, a human results if you look at the AI, track there's two AI tracks but you can, track there's two AI tracks but you can, track there's two AI tracks but you can, see um neither neither track has many uh, see um neither neither track has many uh, see um neither neither track has many uh, contestants over 31, contestants over 31, contestants over 31, points uh, points uh, points uh, so pretty solid win uh over the AI, so pretty solid win uh over the AI, so pretty solid win uh over the AI, humans are still safe for now but anyway, humans are still safe for now but anyway, humans are still safe for now but anyway, uh let's get into the the, uh let's get into the the, uh let's get into the the, problems so let's start with problem a, problems so let's start with problem a, problems so let's start with problem a, problem a has end Travelers who want to, problem a has end Travelers who want to, problem a has end Travelers who want to, cross a, cross a, cross a, bridge um but they have this wheelbarrow, bridge um but they have this wheelbarrow, bridge um but they have this wheelbarrow, that lets them do this special thing um, that lets them do this special thing um, that lets them do this special thing um, where one person can um cross the bridge, where one person can um cross the bridge, where one person can um cross the bridge, alone and SI seconds so each person has, alone and SI seconds so each person has, alone and SI seconds so each person has, their own like speed or two people can, their own like speed or two people can, their own like speed or two people can, both cross in si seconds if traveler J, both cross in si seconds if traveler J, both cross in si seconds if traveler J, rid in the real barar so you want to get, rid in the real barar so you want to get, rid in the real barar so you want to get, everyone across um and the key thing to, everyone across um and the key thing to, everyone across um and the key thing to, realize is you only need to use the, realize is you only need to use the, realize is you only need to use the, smallest SI value because everyone else, smallest SI value because everyone else, smallest SI value because everyone else, should just use the wheelbarrow so if, should just use the wheelbarrow so if, should just use the wheelbarrow so if, there's only one or two people you can, there's only one or two people you can, there's only one or two people you can, just take one trip across right if, just take one trip across right if, just take one trip across right if, there's three people or more and what, there's three people or more and what, there's three people or more and what, you do is you have the fastest person, you do is you have the fastest person, you do is you have the fastest person, bring someone across with the, bring someone across with the, bring someone across with the, wheelbarrow then come back again with a, wheelbarrow then come back again with a, wheelbarrow then come back again with a, wheelbarrow then bring someone else, wheelbarrow then bring someone else, wheelbarrow then bring someone else, across and so forth so it's actually a, across and so forth so it's actually a, across and so forth so it's actually a, really simple solution you just have the, really simple solution you just have the, really simple solution you just have the, um you just have the uh smallest SI and, um you just have the uh smallest SI and, um you just have the uh smallest SI and, you multiply by basically 2 * n minus 3, you multiply by basically 2 * n minus 3, you multiply by basically 2 * n minus 3, um you have to be a little careful, um you have to be a little careful, um you have to be a little careful, because when n is one that's actually, because when n is one that's actually, because when n is one that's actually, negative you want this to be at least, negative you want this to be at least, negative you want this to be at least, one you need at least one trip across um, one you need at least one trip across um, one you need at least one trip across um, so yeah so this is this solution just, so yeah so this is this solution just, so yeah so this is this solution just, multiply this by the smallest s it's, multiply this by the smallest s it's, multiply this by the smallest s it's, actually a little silly that we sort we, actually a little silly that we sort we, actually a little silly that we sort we, really don't need to we just need them, really don't need to we just need them, really don't need to we just need them, in but it doesn't matter here it's fine, in but it doesn't matter here it's fine, in but it doesn't matter here it's fine, either way um yeah so pretty simple and, either way um yeah so pretty simple and, either way um yeah so pretty simple and, that's um cool let's look at problem, that's um cool let's look at problem, that's um cool let's look at problem, B um right problem B you have this kind, B um right problem B you have this kind, B um right problem B you have this kind, of implementation that you're doing and, of implementation that you're doing and, of implementation that you're doing and, if you kind of look through the details, if you kind of look through the details, if you kind of look through the details, you want to, you want to, you want to, know, know, know, um what probability with nus one line, um what probability with nus one line, um what probability with nus one line, would equal your probably originally, would equal your probably originally, would equal your probably originally, with n lines it just boils down to this, with n lines it just boils down to this, with n lines it just boils down to this, equation P nus 1 = q n um I actually, equation P nus 1 = q n um I actually, equation P nus 1 = q n um I actually, took too long in this problem because, took too long in this problem because, took too long in this problem because, I I I was using one minus p and oneus Q, I I I was using one minus p and oneus Q, I I I was using one minus p and oneus Q, instead and I should have just been, instead and I should have just been, instead and I should have just been, using p and Q but yeah if you solve this, using p and Q but yeah if you solve this, using p and Q but yeah if you solve this, then you, then you, then you, get you get P nus1 the^ of 1 n which, get you get P nus1 the^ of 1 n which, get you get P nus1 the^ of 1 n which, isal to P 1 n which isal to P 1 - 1 n, isal to P 1 n which isal to P 1 - 1 n, isal to P 1 n which isal to P 1 - 1 n, so just some basic map and then yeah you, so just some basic map and then yeah you, so just some basic map and then yeah you, just compute that and then the answer, just compute that and then the answer, just compute that and then the answer, we're going to do is Q minus p and then, we're going to do is Q minus p and then, we're going to do is Q minus p and then, con back to percent times, con back to percent times, con back to percent times, 100 um so yeah just a little bit of math, 100 um so yeah just a little bit of math, 100 um so yeah just a little bit of math, um not too not too complicated once you, um not too not too complicated once you, um not too not too complicated once you, just work through it so that's it for B, just work through it so that's it for B, just work through it so that's it for B, yeah you can tell from the point values, yeah you can tell from the point values, yeah you can tell from the point values, these are very uh small value problems, these are very uh small value problems, these are very uh small value problems, um okay problem C so we've got a bunch, um okay problem C so we've got a bunch, um okay problem C so we've got a bunch, of ants and we want to get all the ants, of ants and we want to get all the ants, of ants and we want to get all the ants, onto the same line, onto the same line, onto the same line, in the coordinate, in the coordinate, in the coordinate, grid um we're going to know how many, grid um we're going to know how many, grid um we're going to know how many, ants need to move in order to get them, ants need to move in order to get them, ants need to move in order to get them, all to L in the same, all to L in the same, all to L in the same, line and we don't actually need the, line and we don't actually need the, line and we don't actually need the, exact answer so this is unusual for this, exact answer so this is unusual for this, exact answer so this is unusual for this, problem we don't actually need the exact, problem we don't actually need the exact, problem we don't actually need the exact, answer but if the real answer is M then, answer but if the real answer is M then, answer but if the real answer is M then, as long as your answer is, as long as your answer is, as long as your answer is, between M and 2 * m then you'll be good, between M and 2 * m then you'll be good, between M and 2 * m then you'll be good, and so what that means in particular is, and so what that means in particular is, and so what that means in particular is, if m is at least n /2 if it's at least, if m is at least n /2 if it's at least, if m is at least n /2 if it's at least, half of n then even n moving all n ants, half of n then even n moving all n ants, half of n then even n moving all n ants, is accepted right so the only cases we, is accepted right so the only cases we, is accepted right so the only cases we, have to worry about are cases where the, have to worry about are cases where the, have to worry about are cases where the, minimum number of ants M that need to, minimum number of ants M that need to, minimum number of ants M that need to, move is less than half and if that is, move is less than half and if that is, move is less than half and if that is, true then at least half of the ants are, true then at least half of the ants are, true then at least half of the ants are, already on the same line so then what we, already on the same line so then what we, already on the same line so then what we, can do and this is a common technique, can do and this is a common technique, can do and this is a common technique, what we do is we can just pick random, what we do is we can just pick random, what we do is we can just pick random, pairs of ants right and if at least half, pairs of ants right and if at least half, pairs of ants right and if at least half, the ants are on the same line every time, the ants are on the same line every time, the ants are on the same line every time, we pick a pair there's a one quarter, we pick a pair there's a one quarter, we pick a pair there's a one quarter, chance, chance, chance, at least of getting this line one, at least of getting this line one, at least of getting this line one, quarter from 12 time 12 and so yeah we, quarter from 12 time 12 and so yeah we, quarter from 12 time 12 and so yeah we, just do that um and then we can find all, just do that um and then we can find all, just do that um and then we can find all, the ants that are on that, the ants that are on that, the ants that are on that, line and then here I'm taking the most, line and then here I'm taking the most, line and then here I'm taking the most, I'm just finding the most number of ants, I'm just finding the most number of ants, I'm just finding the most number of ants, on the same line just by picking random, on the same line just by picking random, on the same line just by picking random, pairs of ants to determine the line and, pairs of ants to determine the line and, pairs of ants to determine the line and, at the end you just output Ed minus M, at the end you just output Ed minus M, at the end you just output Ed minus M, because that's how many you need to move, because that's how many you need to move, because that's how many you need to move, and so you can just Analyze This I do, and so you can just Analyze This I do, and so you can just Analyze This I do, 100 iterations here for example so you, 100 iterations here for example so you, 100 iterations here for example so you, can see that you know for this the, can see that you know for this the, can see that you know for this the, probability of failing is at most 3/4, probability of failing is at most 3/4, probability of failing is at most 3/4, which is 1 - 1/4 to the^ of 100 and that, which is 1 - 1/4 to the^ of 100 and that, which is 1 - 1/4 to the^ of 100 and that, is super small um it's, like 10 to the 13th order of magnitude, like 10 to the 13th order of magnitude, so super super unlikely uh and then yeah, so super super unlikely uh and then yeah, so super super unlikely uh and then yeah, that's good so that's it for this, that's good so that's it for this, that's good so that's it for this, problem all right let's talk about D so, problem all right let's talk about D so, problem all right let's talk about D so, D1 we've got we're playing uh a solid, D1 we've got we're playing uh a solid, D1 we've got we're playing uh a solid, game of curling the stones are, game of curling the stones are, game of curling the stones are, negligible size and you know how much, negligible size and you know how much, negligible size and you know how much, you're basically throwing the stones in, you're basically throwing the stones in, you're basically throwing the stones in, order each Stone has a certain amount of, order each Stone has a certain amount of, order each Stone has a certain amount of, energy so for example this, energy so for example this, energy so for example this, is this is, is this is, is this is, uh a second this is N9 five and seven so, uh a second this is N9 five and seven so, uh a second this is N9 five and seven so, nine means your first throw goes to nine, nine means your first throw goes to nine, nine means your first throw goes to nine, five your second throw goes to five and, five your second throw goes to five and, five your second throw goes to five and, then seven what happens is you go to, then seven what happens is you go to, then seven what happens is you go to, Five you Collide and then the green, Five you Collide and then the green, Five you Collide and then the green, stone actually gets the energy and then, stone actually gets the energy and then, stone actually gets the energy and then, goes to, goes to, goes to, seven and what you want to know, seven and what you want to know, seven and what you want to know, is which Stone ends up closest to Gold G, is which Stone ends up closest to Gold G, is which Stone ends up closest to Gold G, and how far away it is from, and how far away it is from, and how far away it is from, G um then you can break ties this way um, G um then you can break ties this way um, G um then you can break ties this way um, so here you just need a couple key, so here you just need a couple key, so here you just need a couple key, observations the first one is that um, observations the first one is that um, observations the first one is that um, the stones are going to stay in the, the stones are going to stay in the, the stones are going to stay in the, order that they're thrown so always, order that they're thrown so always, order that they're thrown so always, Stone one will be the farthest Stone two, Stone one will be the farthest Stone two, Stone one will be the farthest Stone two, will be the next farthest as you can see, will be the next farthest as you can see, will be the next farthest as you can see, here stone three will the next farthest, here stone three will the next farthest, here stone three will the next farthest, and so on um this is because just the, and so on um this is because just the, and so on um this is because just the, the way that it works with the, the way that it works with the, the way that it works with the, collisions you know they'll never change, collisions you know they'll never change, collisions you know they'll never change, order and then the second observation is, order and then the second observation is, order and then the second observation is, that the positions the final positions, that the positions the final positions, that the positions the final positions, of the stones will be the same set of, of the stones will be the same set of, of the stones will be the same set of, numbers as the original set of numbers, numbers as the original set of numbers, numbers as the original set of numbers, the original set of energy so even, the original set of energy so even, the original set of energy so even, though we have 9 seven and five or 9, though we have 9 seven and five or 9, though we have 9 seven and five or 9, five and 7 we do end up in positions 5, five and 7 we do end up in positions 5, five and 7 we do end up in positions 5, seven and N just in a different order, seven and N just in a different order, seven and N just in a different order, and that order is the original order so, and that order is the original order so, and that order is the original order so, that actually tells us exactly where all, that actually tells us exactly where all, that actually tells us exactly where all, these Stones end up and so D1 ends up, these Stones end up and so D1 ends up, these Stones end up and so D1 ends up, being very simple you just take your e, being very simple you just take your e, being very simple you just take your e, you sort them and then that's where, you sort them and then that's where, you sort them and then that's where, everything ends, everything ends, everything ends, up and yeah you know the exact um, up and yeah you know the exact um, up and yeah you know the exact um, positions and then you can just do, positions and then you can just do, positions and then you can just do, the uh closest find the closest match um, the uh closest find the closest match um, the uh closest find the closest match um, I, I, I, use let's, see right I use less to less than equal, see right I use less to less than equal, to because um if you have two that are, to because um if you have two that are, to because um if you have two that are, equally distant you want the further one, equally distant you want the further one, equally distant you want the further one, in this case because that is a lower, in this case because that is a lower, in this case because that is a lower, index still so that's what you're doing, index still so that's what you're doing, index still so that's what you're doing, yeah so that's D1 um yeah so takes a bit, yeah so that's D1 um yeah so takes a bit, yeah so that's D1 um yeah so takes a bit, a little bit of analysis but once you, a little bit of analysis but once you, a little bit of analysis but once you, got that the code's pretty simple D2 was, got that the code's pretty simple D2 was, got that the code's pretty simple D2 was, pretty different so instead you have, pretty different so instead you have, pretty different so instead you have, stones that are one unit wide and now, stones that are one unit wide and now, stones that are one unit wide and now, they stop one unit before the stone they, they stop one unit before the stone they, they stop one unit before the stone they, Collide, Collide, Collide, into and then they transfer the energy, into and then they transfer the energy, into and then they transfer the energy, to that still so here it's a little, to that still so here it's a little, to that still so here it's a little, different here if you have energy of um, different here if you have energy of um, different here if you have energy of um, what is this 87 96 you go to eight you, what is this 87 96 you go to eight you, what is this 87 96 you go to eight you, go to seven and then you would go to, go to seven and then you would go to, go to seven and then you would go to, nine but you're going to collide instead, nine but you're going to collide instead, nine but you're going to collide instead, so you hit six and you make a collision, so you hit six and you make a collision, so you hit six and you make a collision, and then it goes all the way through to, and then it goes all the way through to, and then it goes all the way through to, the last one and this guy gets the 9 6, the last one and this guy gets the 9 6, the last one and this guy gets the 9 6, which is three units of energy remaining, which is three units of energy remaining, which is three units of energy remaining, and so this guy goes to 11 and then we, and so this guy goes to 11 and then we, and so this guy goes to 11 and then we, end with with six end with six we go, end with with six end with six we go, end with with six end with six we go, here we still have one more unit of, here we still have one more unit of, here we still have one more unit of, energy it transfers to the green one, energy it transfers to the green one, energy it transfers to the green one, which moves by, which moves by, which moves by, one so this is definitely than D1 um, one so this is definitely than D1 um, one so this is definitely than D1 um, there's not such a simple rule and in, there's not such a simple rule and in, there's not such a simple rule and in, particular the positions you end up on, particular the positions you end up on, particular the positions you end up on, are not the same as the original set of, are not the same as the original set of, are not the same as the original set of, numbers um there's a couple ways to do, numbers um there's a couple ways to do, numbers um there's a couple ways to do, this the way that I did it and the way, this the way that I did it and the way, this the way that I did it and the way, that they explain in the solutions it's, that they explain in the solutions it's, that they explain in the solutions it's, a more data structure powered approach, a more data structure powered approach, a more data structure powered approach, so the idea is and if you take some, so the idea is and if you take some, so the idea is and if you take some, observations you can find this, observations you can find this, observations you can find this, eventually the idea is when you have a, eventually the idea is when you have a, eventually the idea is when you have a, certain amount of energy the position, certain amount of energy the position, certain amount of energy the position, you go to is the last position where we, you go to is the last position where we, you go to is the last position where we, can Define this function basically so F, can Define this function basically so F, can Define this function basically so F, of position equals position, of position equals position, of position equals position, minus the number of stones, minus the number of stones, minus the number of stones, located at less than position right so, located at less than position right so, located at less than position right so, in this case, in this case, in this case, for this sort of layout F of 8 would be, for this sort of layout F of 8 would be, for this sort of layout F of 8 would be, 8 minus 2 because these two are the left, 8 minus 2 because these two are the left, 8 minus 2 because these two are the left, of eight um which is six and you, of eight um which is six and you, of eight um which is six and you, actually you want to find the last, actually you want to find the last, actually you want to find the last, position where F of position equals the, position where F of position equals the, position where F of position equals the, energy you want so here we want an, energy you want so here we want an, energy you want so here we want an, energy of six then F of 8 is going to be, energy of six then F of 8 is going to be, energy of six then F of 8 is going to be, 8 - 2 which is six then F of 9 is going, 8 - 2 which is six then F of 9 is going, 8 - 2 which is six then F of 9 is going, to be 9 - 2 which is 7 so 9 is too big, to be 9 - 2 which is 7 so 9 is too big, to be 9 - 2 which is 7 so 9 is too big, so actually the six ends up at eight so, so actually the six ends up at eight so, so actually the six ends up at eight so, that's the idea here um the way you, that's the idea here um the way you, that's the idea here um the way you, actually simulate that um you need to be, actually simulate that um you need to be, actually simulate that um you need to be, able to binary search right to to count, able to binary search right to to count, able to binary search right to to count, how many things are less how many of, how many things are less how many of, how many things are less how many of, your numbers are less than a certain, your numbers are less than a certain, your numbers are less than a certain, value and then actually you have to do, value and then actually you have to do, value and then actually you have to do, one more thing on top of that which is, one more thing on top of that which is, one more thing on top of that which is, um everything less than that value needs, um everything less than that value needs, um everything less than that value needs, to, to, to, as well so instead of six and seven you, as well so instead of six and seven you, as well so instead of six and seven you, these up at C and six so that's the, these up at C and six so that's the, these up at C and six so that's the, operation find that position insert a, operation find that position insert a, operation find that position insert a, new thing and then document everything, new thing and then document everything, new thing and then document everything, below, below, below, it uh first thought here is to use a SE, it uh first thought here is to use a SE, it uh first thought here is to use a SE, tree but actually SE Tre does not work, tree but actually SE Tre does not work, tree but actually SE Tre does not work, because you SE Tre doesn't give you this, because you SE Tre doesn't give you this, because you SE Tre doesn't give you this, type of decrement by value you can, type of decrement by value you can, type of decrement by value you can, decrement by index or position but this, decrement by index or position but this, decrement by index or position but this, is actually by value so what I did is I, is actually by value so what I did is I, is actually by value so what I did is I, actually used a lazy SP, actually used a lazy SP, actually used a lazy SP, um the implementation is all here but, um the implementation is all here but, um the implementation is all here but, not going to go into details on that, not going to go into details on that, not going to go into details on that, implementation there's other ways to do, implementation there's other ways to do, implementation there's other ways to do, this you can also use a treat um but the, this you can also use a treat um but the, this you can also use a treat um but the, idea is simple once you have that, idea is simple once you have that, idea is simple once you have that, implantation and the tree gives you, implantation and the tree gives you, implantation and the tree gives you, those two operations one is you can, those two operations one is you can, those two operations one is you can, count how many things are below a, count how many things are below a, count how many things are below a, certain value um obviously you can, certain value um obviously you can, certain value um obviously you can, insert and then the other thing you do, insert and then the other thing you do, insert and then the other thing you do, is you can do that range update so you, is you can do that range update so you, is you can do that range update so you, can decrement that whole range and, can decrement that whole range and, can decrement that whole range and, that's where the lazy part comes in and, that's where the lazy part comes in and, that's where the lazy part comes in and, once you do that you just have to, once you do that you just have to, once you do that you just have to, implement the detail so do B Search, implement the detail so do B Search, implement the detail so do B Search, Count below and this is what I saying if, Count below and this is what I saying if, Count below and this is what I saying if, mid minus below is the most e then we, mid minus below is the most e then we, mid minus below is the most e then we, can uh cut in half in this direction, can uh cut in half in this direction, can uh cut in half in this direction, otherwise in this direction finally we, otherwise in this direction finally we, otherwise in this direction finally we, do that we decrement minus one for all, do that we decrement minus one for all, do that we decrement minus one for all, the below values and then we insert, um and yeah so that that lets us, um and yeah so that that lets us, simulate everything going on here and, simulate everything going on here and, simulate everything going on here and, yeah you can also even like answer ques, yeah you can also even like answer ques, yeah you can also even like answer ques, about what's going on in the middle if, about what's going on in the middle if, about what's going on in the middle if, you needed to do that you don't need it, you needed to do that you don't need it, you needed to do that you don't need it, on this problem there's also a much, on this problem there's also a much, on this problem there's also a much, nicer simpler solution um that doesn't, nicer simpler solution um that doesn't, nicer simpler solution um that doesn't, take any data structures it just takes, take any data structures it just takes, take any data structures it just takes, some more inform for that you can check, some more inform for that you can check, some more inform for that you can check, out Duality Duality st2 uh but I won't, out Duality Duality st2 uh but I won't, out Duality Duality st2 uh but I won't, go into it here anyway so that's it for, go into it here anyway so that's it for, go into it here anyway so that's it for, me on this one U hope you enjoyed the, me on this one U hope you enjoyed the, me on this one U hope you enjoyed the, video and if you liked it um feel free, video and if you liked it um feel free, video and if you liked it um feel free, to subscribe to the channel check out, to subscribe to the channel check out, to subscribe to the channel check out, other videos on my channel but either, other videos on my channel but either, other videos on my channel but either, way I'll see you in the next one
