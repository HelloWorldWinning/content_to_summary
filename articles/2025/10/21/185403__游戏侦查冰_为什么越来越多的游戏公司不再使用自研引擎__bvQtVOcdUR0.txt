Timestamp: 2025-10-21T18:54:03.372267
Title: 【游戏侦查冰】为什么越来越多的游戏公司不再使用自研引擎？ bvQtVOcdUR0
URL: https://youtube.com/watch?v=bvQtVOcdUR0&si=-s4BNjPEOUQrfA5w
Status: success
Duration: 16:45

Description:
好的，这是根据您的要求从文本中提炼的核心观点摘要。

### **核心要点大纲**

**一、 行业趋势：从自研引擎到商业引擎的转变**

*   **现象观察**：众多知名游戏大厂（如CDPR、BioWare、Konami）正纷纷放弃沿用多年的自研引擎，转而采用以虚幻5为代表的商业引擎来开发其未来的旗舰项目。
*   **历史背景**：
    *   游戏引擎是需要持续投入人力和财力进行迭代的昂贵工具，而非一劳永逸的资产。
    *   早期游戏开发工具与游戏逻辑深度绑定，直到《毁灭战士》（Doom）引擎出现，才确立了引擎与内容分离、可复用的现代化框架。
    *   过去由于各家游戏类型、画面风格和硬件平台差异巨大，没有一款商业引擎能满足所有需求，因此大厂普遍选择自研。

**二、 放弃自研引擎的核心原因（面临的困境）**

1.  **技术军备竞赛落后**：
    *   商业引擎（特别是虚幻）凭借巨额投入和庞大的开发者社区，功能日益强大且通用，其部分技术（如Nanite、Lumen）已处于行业领先地位。
    *   自研引擎不仅要服务自家产品，还要追赶商业引擎的技术特性，这成为一场成本高昂且难以取胜的竞赛。
2.  **人才招聘与技术断层风险**：
    *   **人才稀缺**：自研引擎技术封闭，相关人才库小，导致招聘困难、培训成本高昂。
    *   **人员流失风险**：核心开发人员的离职可能导致技术断层甚至倒退。DICE工作室因核心人员流失，导致《战地2042》的寒霜引擎升级不顺，核心玩法（建筑破坏）表现远不如前作。
    *   **商业引擎优势**：拥有庞大的用户基础和开放的学习资源，人才储备充足，招聘选择面更广。
3.  **迭代困难与开发效率低下**：
    *   **技术债与重构困境**：老旧引擎（如343工作室的Slipspace引擎）的底层代码难以适应现代游戏开发需求。CDPR的REDengine每次大版本更新都近乎推倒重来，导致开发过程混乱，是《赛博朋克2077》首发灾难的根源之一。
    *   **“边造跑道边起飞”模式**：引擎开发与游戏制作同步进行，严重拖累美术和策划的工作效率，并可能导致核心玩法无法得到及早验证。
4.  **跨平台能力不足**：
    *   自研引擎通常为特定平台打造，在向主机、PC、移动端等多平台移植时面临巨大技术挑战和成本。
    *   商业引擎从设计之初就考虑了多端适配，在跨平台开发方面拥有天然优势。

**三、 坚持自研引擎的理由与优势**

*   **市场表现**：尽管数量占比低，但在销量顶尖的大作领域，自研引擎开发的游戏仍占据近半壁江山（46%），证明其强大的市场竞争力。
*   **核心优势**：
    1.  **极致的定制化与优化**：
        *   自研引擎可以为特定游戏类型和目标硬件平台“量身定做”，实现商业引擎难以企及的深度和细节。
        *   **案例**：Rockstar的RAGE引擎打造了《GTA》和《荒野大镖客2》中无与伦比的开放世界生态；任天堂和索尼的第一方工作室能最大限度压榨自家主机性能，实现卓越的画质与帧率。
    2.  **掌控性能与避免通用引擎弊端**：
        *   开发者对引擎有完全的掌控权，可以进行更底层的性能优化。
        *   商业引擎为追求通用性可能存在效率问题（如虚幻引擎的蓝图系统），对开发者经验要求高，易造成“优化地狱”。
    3.  **长期的成本效益与技术壁垒**：
        *   对于收入极高且持续运营的大型项目，商业引擎的5%流水抽成是一笔巨额开销。
        *   对于网易这类体量的公司，长期来看，维持一个自研引擎团队的成本远低于支付给商业引擎的授权费，同时还能构建自己的核心技术壁垒。

---

### **核心结论**

尽管商业引擎因其技术领先、人才储备和开发效率等优势正成为行业主流，但顶尖游戏公司依然凭借自研引擎在特定领域实现极致优化和成本控制，形成两者持续共存并推动行业发展的格局。

---

### **内容框架**

本内容通过“**提出问题—分析原因—探讨反例—得出结论**”的框架，剖析了游戏行业引擎选择的变迁。首先，它**观察到“大厂放弃自研，转向商业引擎”的行业趋势**，并以此为切入点提出核心疑问。接着，从**技术竞赛、人才成本、开发效率和跨平台能力**四个维度，深入分析了导致这一转变的深层原因。随后，内容转向另一面，通过数据和案例论证了为何**部分顶尖公司（如Rockstar、任天堂、网易）仍在坚持自研**，阐述了其在**极致优化、成本控制和构建技术壁垒**方面的独特优势。最后，综合两方面论点，得出**商业引擎与自研引擎将在未来市场中持续共存、相互竞争**的结论。

---

<Mermaid_Diagram>
graph TD
    subgraph "游戏引擎选择的十字路口"
        A["游戏行业的引擎抉择"]
    end

    subgraph "趋势A：拥抱商业引擎 (以虚幻引擎为代表)"
        B["商业引擎"]
        B -- "驱动力" --> B1["技术领先 & 功能丰富"]
        B -- "驱动力" --> B2["庞大的人才库 & 易于招聘"]
        B -- "驱动力" --> B3["强大的跨平台能力"]
        B -- "驱动力" --> B4["成熟的开发工具链"]
        
        B_Res["结果: 成为行业主流选择"]
        B1 --> B_Res
        B2 --> B_Res
        B3 --> B_Res
        B4 --> B_Res
    end

    subgraph "趋势B：坚守自研引擎"
        C["自研引擎"]
        C -- "核心优势" --> C1["极致性能优化 & 硬件定制"]
        C -- "核心优势" --> C2["深度玩法定制 & 打造独特体验"]
        C -- "核心优势" --> C3["无流水抽成 & 长期成本可控"]
        C -- "核心优势" --> C4["构建核心技术壁垒"]
        
        C_Res["结果: 少数顶级公司为实现极致体验而坚持"]
        C1 --> C_Res
        C2 --> C_Res
        C3 --> C_Res
        C4 --> C_Res
    end

    subgraph "自研引擎面临的困境 (推动向商业引擎转变)"
        D1["技术迭代落后 (军备竞赛)"]
        D2["人才稀缺 & 技术断层风险"]
        D3["开发效率低下 & 周期长"]
        D4["跨平台适配困难"]
    end

    subgraph "商业引擎的潜在问题"
        E1["高额流水抽成"]
        E2["通用性带来的优化挑战"]
        E3["技术受制于人"]
    end

    A -- "主流趋势" --> B
    A -- "战略选择" --> C
    C -- "面临挑战" --> D1
    C -- "面临挑战" --> D2
    C -- "面临挑战" --> D3
    C -- "面临挑战" --> D4
    B -- "存在劣势" --> E1
    B -- "存在劣势" --> E2
    B -- "存在劣势" --> E3

    D1 & D2 & D3 & D4 -- "共同导致" --> B_Res
    
    subgraph "最终结论"
        F["未来格局: 两者共存，持续较量，共同推动行业进步"]
    end

    B_Res --> F
    C_Res --> F
    
    style A fill:#D2B4DE,stroke:#333,stroke-width:2px
    style F fill:#A9DFBF,stroke:#333,stroke-width:2px
    
    style B fill:#AED6F1,stroke:#333,stroke-width:1.5px
    style C fill:#F9E79F,stroke:#333,stroke-width:1.5px
    
    style B1 fill:#E8F8F5,stroke:#1ABC9C,stroke-width:1px
    style B2 fill:#E8F8F5,stroke:#1ABC9C,stroke-width:1px
    style B3 fill:#E8F8F5,stroke:#1ABC9C,stroke-width:1px
    style B4 fill:#E8F8F5,stroke:#1ABC9C,stroke-width:1px
    
    style C1 fill:#FEF9E7,stroke:#F39C12,stroke-width:1px
    style C2 fill:#FEF9E7,stroke:#F39C12,stroke-width:1px
    style C3 fill:#FEF9E7,stroke:#F39C12,stroke-width:1px
    style C4 fill:#FEF9E7,stroke:#F39C12,stroke-width:1px
    
    style D1 fill:#FADBD8,stroke:#E74C3C,stroke-width:1px
    style D2 fill:#FADBD8,stroke:#E74C3C,stroke-width:1px
    style D3 fill:#FADBD8,stroke:#E74C3C,stroke-width:1px
    style D4 fill:#FADBD8,stroke:#E74C3C,stroke-width:1px

    style E1 fill:#FADBD8,stroke:#E74C3C,stroke-width:1px
    style E2 fill:#FADBD8,stroke:#E74C3C,stroke-width:1px
    style E3 fill:#FADBD8,stroke:#E74C3C,stroke-width:1px

    style B_Res fill:#5DADE2,stroke:#333,stroke-width:1.5px,color:#fff
    style C_Res fill:#F5B041,stroke:#333,stroke-width:1.5px,color:#fff
</Mermaid_Diagram>

Content:
大家好 我是毛毅在最近的一两年时间里我们不能观察到游戏行业正在发生的一个变化那就是不少大线由于场上正在放弃自言引起转而使用虚幻舞为代表的商业引起开发游戏就比如23年使用自言的软的引擎制作的网日执引DLC大了一场漂亮的翻身杖的CDP已经确认公司下一款大型游戏54将采用虚幻舞制作而且赛伯丰克计则也将不再使用自家的Ride N-ZN-4好像有着多年自言引秦传承的报寻也在今年年初发布的张牧西一众透露出了动思有一款大型开放世界多人游戏正在使用虚幻舞进行开发还有正在重返主机赛道的科乐美他们早在200年就放弃了自家的Fox N-ZN对于两款成织版游戏接近2和核金装备试试者军外包并采用了虚幻舞类似的例子还有S133等大家20等响拥有优9自言引秦历史的重要游戏企业曾经百花起放的自言引起时比如前段时间前二星开外者奥备福媒一对于批评游侠业在转向虚幻舞方面超值过几今天我就想给大家伙聊聊这个话题自言引起的技能数为何过去家家都盘如今却被广泛放进商业秦到底做对了哪些事情扩大了优势还在坚持自言引起的公司有哪些他们又处于合容理由有什么优点耐心看完你一定会有所说服首先必须要跟大家科普的概念是游戏引秦并非是一种开发出来就能一劳永逸让游戏公司用很多年的固定资产而是需要持续投入人力猜力进行迭来升级才能匹配项目兴趣学的精贵工具就比如报学曾经常识采用模仇这830的引秦来初步搭建模仇世界但由于两者的视角不同玩法不同需要优化和验证的特性也不同导致尝试非常不顺利举例来说模仇世界需要摆放的场景用模仇3的引秦摆起来又慢又难由化更不必提连网和玩家间交互这些功能的验证因此尽管看起来画风有几分相似问事时间上也前后脚没差几年但实际上模仇世界最后用的几乎是一个全新的引秦将不足在开发起动两三年后才用上引秦的完整版并起来好像很麻烦但在那个年代这才是个家游戏企业的常态因为游戏引秦的诞生是一个相对交往的概念被普遍认为是第一款真正游戏引秦的是1993年的ED Software的Dome引起在此之前各个厂商当然也要做自己的开发工具比如给关卡设计师准备一些可复用的素材让他们能快速搭建关卡但那时的游戏游戏的资产和逻辑与渲染无力引秦和输入控制代码这种底层更基础的东西是写在一起的大家可以理解为每个游戏都是由一个单独的工具来打造出来的而度则将其进行了分理也就是说其他开发者也可以用Dome引秦在其提供的框架内交易方便的大设与原板关卡不同的内容引入新的模型和战斗规则这位Dome带来了诸多游戏的地图和玩法帽子也正式了这种架构的优越性在Dome获得巨大成功后其他厂商才开始跟见这个趋势把原本为每个游戏单独打造的开发工具向着更加饭用化模块化的方向来改造以适配多款游戏的开发而也有一些公司也将自家做好的引秦授权给其他公司的使用来获利在由于比时各家大厂游戏的玩法类型画面风格以及面向的硬电平台差异很大当时并没有任何一款商业引秦能广泛适配所有需求所以各家还是主要依靠自己做引秦如今大伙所输质的在商业授权方面做了很好的区划引秦对时候也只是Applege的自验引秦属于摆压证明中的其中一家然而20多年发展后以许幻有力替为代表的商业引秦整合的功能越来越丰富能运用的场景覆盖了几乎所有主流的玩法类型和硬电平台并且在巨额的研发投入和庞大开发者社区持续反馈贡献的支持下不仅贩用性得到了质的废月其部分技术特性也处在领先地位很多厂商开始意识到自研引秦变车一场无止境的军备竞赛不仅需要考虑服务于自家产品的需要还要在一些技术特性上相较商业引秦不落下风这技巧艳开发者的技术实力又考验厂商的战略定力那面对变化平仁的游戏环境这两件事都很难我们不妨取一个比较具体的力度来让大家感受一下这种困境光环系列如今的开发团队三次三工作室的最后一代资源引秦Sleepsweights是基于上一代的碰引秦盖进而来而碰引秦的历史甚至得追溯到1992年当时棒基的联合床时人间主城节三穷思受到E.D.Sophia Weir的德径总部三迹的启发在苹果麦克系统上开发FPS游戏通往和暗示路时编写了一个三迹引秦这个引秦在连接后支撑了棒基接下来的几个作品品马拉松神话等游戏的开发最终演变成为了制作光环系列的四眼情之后随着棒基和三四三分家留在微软的三四三开发者们继续使用碰引秦来开发光环系列15年推出光环五后他们决定对碰引秦进行一次大升级于是这才有了Sleepsweights的引秦和采用这个引秦的游戏光环五线可惜光环五线放出实验的时候差距的人物于长期间谋并不理想的光照和圆领渲染让画面处处都透露着一股上世代的寒酸糟糕的演示直接导致游戏跳表休息不不一年后光环五线在20年底发手并收回了不错的手发评价但之后游戏的版本更新却很发力光环老玩家最在意的战役合作分屏功能一次次被推迟并最终在20年9月确定取消根据知情人的爆料之所以更新效率有问题是因为三次单子22年初就信开了两个继续采用Citybook Space引擎值得的光环系列去做一款是光环五线二一款是代号project的Tatac的大头插项目到了22年底新上任的管理层决定改用虚幻五引擎值得光环五线二这让项目需要做千一开发者也需要重新学引擎进一步拉地的工作效率导致两个项目均停摆这段爆料出现的时间是24年初到了24年底得到了部分正式33关宣改名为黑楼斯举明确表示未来所有项目将在虚幻五上进行为何33要放弃Citybook Space的引擎呢最直接的原因是他迪代后的特性依然更不上时代光环工作是艺术总监克里斯马修斯指出坦誓在说Citybook Space部分主建一有近25年历史虽然33持续对其近应该吧但虚幻引擎中Away个长期机内的某些技术优势是我们无法负现的其便投入大量资源常试模仿也难以欺贱我们有其看中Nanat和Luma的技术作为艺术量这里我们无比端分而放弃Citybook Space的另一个原因所以由于自演引擎的风笔性带来的人才招募与培训成本会拖累项目表现这里我可以给大家一个更鲜明的例子那就是EA7下Dice工作时在占地2032上的翻车但是使用的寒霜这一罪初为占地系列打得了引擎后来由于表现部俗EA内部其他重要产品线如机密威车系列龙腾士机系列非法系列等也都采用过寒霜然而由于Dice不少自身开挖者深感也限制了他们的创头自由特别是在18年前后大头杀板法疯头证盛也想快马加遍赶一个占地板吃鸡出来这让部少自身开挖者选择在16至18年间离职这批自身开挖者的离开导致寒霜引擎的升级连带出了X占地50在2016版的寒霜引擎上制作的为了让下一代占地有更好的表现占地2042次18年启动运后就在升级寒霜引擎然而原本计划6个月的升级时间升升变成了18个月而且不少新招目的开挖者已经缺乏自身员工知道导致用新版引擎做出的效果不尽反退但地2042首发时建筑破坏反饰之薄弱实际界令不少系列核心玩家破了大坊要知道建筑破坏一直是系列的一大卖点占在玩家的视角原来一直都能做到的事新作却表现如此拉垮着实令人废解反观由不少代斯老员工组织的工作是NBUX Studios他们制造的The Final Zone却有玩家们熟悉又经验的建筑破坏效果充分凸显了人才而非引擎才是各种关键从2042之后的更新以及目前系列最新作占第六的十万中看建筑破坏方面确实有了明显掌机但这一件事已经证明了自验引擎由于其封闭性一旦出现具列人员流动是存在技术段层甚至短期倒退风险今年来的游戏业由于性企业决起老企业增长法例导致人才流动性变高使用自验引擎带来的培训和模合成本问题预发凸显更不必提那些主导引擎关键迪代的核心人才也有可能会流失进一步加大组穿代码的迪代难度而商业引擎在人才招募方面就相对容易得多这其中有很多原因首先是很多商业引擎为了更好的推广采取了相当开放的策略扩大了使用人数比如ADSOP的Wears从最大的动物Injunt的到后来的EDTax都进行了开员这几年很火的明天引擎向GoDutt也是完全开员的而另一些商业引擎如虚幻Bright Engine虽然不是完全开员但也公开了员而且为了培养开发者大多数商业引擎也都在2010年后陆续取消了购买和订阅费让业余爱后者也可以下载一个免费版学习甚至是和个小的M出来如今的不少引擎主流的手卫方式非常后质只有在游戏成功发布收入进账后才需要开发者向引擎方按流水比例支付使用喂大型开发商还可以买段或进一步谈低分成对于使用商业引擎陆维启了新人和继续商业引擎的中型项目越来越多最终反映到招聘上一个商业引擎项目确实比自言引擎招人时的选择面更广而且就算人才没有问题这引擎迭内过程也比大家想象的要艰难我们再来看看SDVR吧23年他们才评计了网日之影为自己证明转头就宣布54不带采用Royce系列引擎原因我们可以从一些前员购的发言中来找一下线索从在SDPR认知的程序8特朗斯机透露SDPR每一次转的引擎的大版本迪代都是从零开始给我建包括加载脚本渲染等核心模块也全部推翻中来而SDPR会选择这样做的原因用朗斯机自己的话来说就是SDPR总幻想的这次一定能做得更好结果却总是在感动冲撕阶段对代码进行暴力模改导致后续难以维护最终形成的恶心兴玩从52到53再到2077无一例外这一番爆料也并非辜贞EarGamer在12年对SDPR进行实现SDPR这个人格热个日耳杂你说的在52全面其动前我们已完成了对基础模块的达劲但绝大部分开发工作确实是与游戏制作同步进行的大家说虽然引擎零食版本的部分定性带来挑战但反过来也让我们能根据实际需求实施表准代码架狗正是这种动态模合才运用于除专位52廖森定制的开发工具但实际上这种编造跑道编起非的开发模式对美术和策划的工作效率脱类严重特别是如果自营引擎常识件无法支持某些特性导致中央玩法原型无法尽早测试和验证会严重错败团队的事情幸运的是5253都涉嫌过关正上CPR以为2077可以再次负贺这一路结果之前迎来了公司历史上最惨烈的游戏手发射力于是给Mirr在2024年对2077的复盘长文中是任2077主任务设计师的帕威尔SARS科表示从16年6月项目正式起动开发我们开始研究引擎技术的有一事情我们几乎从零开始编写Ride NJ刺从先前版本里能直接一只使用的东西很少所以在终于为2077画上据好后为了不再重复陷入困境CPR在未来也选择全面拥抱许幻物除了以上几个问题另一个影响引擎选择的因素是跨平台能力举例来说当初CPR之所以要研发自验引擎以来原因就是他们最初采用的Ora引擎来自生软桂增这部引擎虽然帮他们做出了51但Ora引擎并不支持主帝平台而竟军主机市场一直是比时CPR的宿远当时CPR为了将51一直到主机启动了白狼计划与法国公司的Weiss Green Games合作来一直可由于CPR缺少经验同时这家法国公司也极其不靠谱刷构多次爆发一件中途情况严重的时候CPR每个月花在法国公司的钱比公司在波兰的总花费还多最终白狼计划于各铁而各中不仅浪费了CPR的大量人力时间和资源还严重影响了Ride NJ无事儿的开发进度同理随着时代的变迁有时候开发上甚至希望引擎能同时兼顾移动端腾性的天安迷到端友也是用资源型Quick Server打的整体效果在同时在网友中非常出色但问题是进入移动时代后当初做资源引擎完全没有考虑过移动端一直导致天刀手游开发现入了比较尴尬的境地如果完全不用老引擎会导致画面风格和端友差异交易明显最终他们的决绝方案是把资源引擎的一些特性价接到移动端适配做得更好的优励体影响但这个工程的技术难度和时间也比预想中要更长变向延长了产品的开发周期科乐媒放弃使用小导工程式的Fox引擎转头虚幻也是基于移动优先的战略有此可见虽然跨端游戏越来越多商引擎在多端适配方面的优势会预发突现甚至直接左右开发轴的选择说了这么多商引擎的优势那么自言引擎的时代真的彻底过去了吗其实并未见的2025被给我们引擎报告显示2024年STEM发售的所有项目自言引擎的数量占比仅为10%但在游戏销量方面自言游戏引擎的销量占到总销量的41%而需换引擎仅有31%特别是在百万销量的大多领域自言引擎的销量占比更是达到了46%尽管从10年为度来观察需换引擎确实在销量占比方面增长序盟但还未形成完全主导的局面而坚持自言引擎的核心原因就在于当投入足够高的情况下而行一直在坚持迭代贼引擎即而行高级游戏引擎这个引擎的历史可以追溯到2002年Tek2收过了天使工作室成为而行圣地亚格分布而工作室自言的天使引擎也正式耿名销量连6年随着而行屏方球陆续的XBOSS为平台发售这支引擎迎来了技术手袖之后在陆续整合了动画引擎E4R后立引擎不累的后而行用销量引擎在2008年打造出了GTSRID的引擎的目标是帮助R型打造每个主机时代中所以真实所以就成金感的大型开放世界游戏引擎迭代后打造出的GTA5黄野大标科2都在开放世界的深度广度以及细节方面为玩家留下了深刻印象而RID凌年即将温饰的GTA6虽未发售但从预告片跑在PS5上的情况来看其实人物和光影细节都令人探浮对金能力有看比索尼一方可以说在开放世界生态以及各种尼针细节打不上RID的引擎目前做出的产品是虚幻武产品所不及的而且自言引擎相比商业引擎还有一大优势就是场上能在引擎性能优化方面有更大的掌控卷可以根据目标平台的CPUGPU存储价格建成两身定座是满进的让游戏表现出急质的画质和整律比如任天堂和索尼的第一方游戏董事彼同时带移达主机的游戏在性能方面表现更好而虚幻引擎为了牵扰多平台难免在性能优化方面出现故此诗彼的问题比如说虚幻引擎为了方便策划在不懂变成的情况下完成很多配置工作涉及了一个蓝图这种可实话脚本系统但其运行的效率相较于直接使用CGE来实现某些逻辑在CPU消耗方面会大很多所以对于有经验的开发者来说需要横子系的分配哪些逻辑可通过蓝图实现来实现开发效率和游戏运行效率间的平衡而且这种设计往往需要在游戏开发早期就做好规划对于开发者的经验和能力要求甚至比用自验引擎更高而大多数新手开发商确实做不好这带来的结果就是虚幻引擎总给人一种优化地狱的认知但其实如果拿自验引擎做它不擅长的事一样会带来优化灾难今年大家感受很明显的产品就是卡普空的怪脸荒野画面又不算好但性能开销又很高显然卡普空的爱引擎在开放世界的优化方面有很长的路要走最后自验引擎相较于商引擎还有一大优势就是能免去受移的支出尽管虚幻引擎目前进一步调整的授权费用政策例如现在只对收入超过100万美元的游戏抽取5%如果上iRU的平台还可以尽一步减少授权费用利好中小开发等队但对于那些商业预期非常好的大型项目特别是持续硬的游戏5%的分成还是相当露腾的尽管如今iRU为了推广引擎也愿意给大型企业一个更低的分成报价但对于一些超级项目来说算下来可能依然分成和养一个自家引擎团队的成本差不太多一个大家更熟悉的例子是往一中所周知往一户于是比较清相于使用自验引擎的早前间的大方2和梦幻使用的是云风大神主导开发的风魂引擎后来在3D为时代他们又用了很久的NUX后来又做了一个迷塞亚引擎并且严用到了腌云这样的形作往一至今还有百来人团队支撑几个引擎的维护车更新尹管在一些技术论坛不妥立这员工对于这些引擎的土槽但一个很实际的问题是躺弱使用三方引擎以户于产品的产品体量一年恐怕要支付35个亿的引擎省费这个价格确实比养引擎团队要昂贵多了特别是万一游戏能超长待击个20年那自言无论如何都是个很值得的选择总结也网虽然商业卿如今的市场率与日聚增甚至其部分优秀的特性让很多传统自验引擎企业都因为种种原因转向但总还是有一些大型企业进行现实利益优化打造技术必赖等原因坚持自言的道路两者坚持续较量也中将持续推进游戏产业的进步好的那么这期视频就到这里了如果觉得还不错拜托大家点赞收藏支持一下下期应该是网络史赶紧的话不要忘了关注让我们下期节目再见吧
