Timestamp: 2025-03-29T08:18:19.495038
Title: Cloudflare MCP：开启MCP云端托管的新时代，为MCP服务商业化道路铺平了道路，相当于桌面软件到互联网应用的过渡，使得未来mcp服务不再依赖于本地电脑 t9eupmtPaWU
URL: https://youtube.com/watch?v=t9eupmtPaWU&si=1STIhdoVUtL3FBoK
Status: success
Duration: 24:40

Description:
好的，这是根据您提供的文本提炼的核心观点和摘要：

### **Cloudflare MCP 云端服务化总结**

**I. 核心问题：传统 MCP 的局限性**
    *   依赖本地：用户必须在本地电脑安装客户端软件（如 Cursor）和 MCP 服务。
    *   访问受限：无法方便地在移动设备或无本地环境的情况下使用。
    *   部署复杂：用户需要在本地托管和管理 MCP 服务。

**II. Cloudflare 的解决方案：MCP 云端化**
    *   核心变革：将 MCP 从本地桌面软件模式转变为基于互联网的远程服务模式。
    *   实现方式：用户通过浏览器或 App 即可远程调用托管在 Cloudflare (CF) 上的 MCP 服务，无需本地安装。

**III. Cloudflare 提供的关键支持组件**
    *   **A. Worker for OIDC Provider (身份验证与授权)**
        *   **目的：** 解决远程访问的安全验证和授权问题。
        *   **机制：** 充当 OIDC 提供者，验证用户身份，并基于上游身份提供商（如 Google）的令牌，自行签发具有更细粒度权限控制的令牌给 MCP 客户端。
        *   **优势：**
            *   **精细控制：** 可以控制用户对 MCP 服务内具体工具的访问权限。
            *   **增强安全：** 即使 CF 签发的令牌泄露，攻击者也只能获得有限工具的权限，而非原始上游身份提供商的完整权限。
    *   **B. MCP Agent (远程传输处理)**
        *   **目的：** 处理 MCP 客户端与远程服务器之间的通信传输层。
        *   **技术：** 使用 Server-Sent Events (SSE) 等技术维持持久连接，处理数据传输和序列化，简化开发者工作。
        *   **演进：** 兼容 MCP 规范的传输协议演进（如 SS1 -> HTTP-based transport）。
        *   **关键能力：** 支持构建**有状态 (Stateful)** 的 MCP 服务，能在会话中保持上下文和对话状态。
    *   **C. MCP Remote (客户端兼容)**
        *   **目的：** 使原本只支持本地连接的 MCP 客户端能够连接到远程 MCP 服务器。
    *   **D. Playground (测试平台)**
        *   **目的：** 提供一个在线环境，供开发者测试其部署的远程 MCP 服务。

**IV. 主要优势与价值**
    *   **提升可访问性：** 让 MCP 服务触达更广泛的用户（包括手机用户），不再受本地设备限制。
    *   **简化用户体验：** 用户无需安装专业软件或本地服务即可使用 MCP。
    *   **增强安全性与控制：** 通过 OIDC Provider 实现精细化的权限管理。
    *   **实现状态化服务：** MCP Agent 支持保持会话状态，可构建更复杂的交互式应用。
    *   **推动商业化与标准化：** 为 MCP 服务的商业化和规模化应用铺平道路，降低使用门槛。结合 OpenAI 等对 MCP 的支持，有望成为行业标准。

**V. 实践示例**
    *   文本中提到了使用 Cloudflare Wrangler 创建 Worker 部署 MCP 服务，并通过在线 Playground 或本地检查器进行测试的流程。

---

**核心结论点 (Core Point):**

Cloudflare 通过提供一套完整的云端基础设施和工具（包括身份验证、远程传输、客户端兼容和测试平台），将 MCP 从本地依赖型协议转变为易于访问、安全可控、支持状态化的远程云服务，极大地扩展了其应用场景和用户基础。

---

**总体框架 (Overarching Framework):**

该内容描述了 Cloudflare 如何构建一个全面的**生态系统**来支持 **MCP 协议的云端化转型**。其框架核心是利用 Cloudflare 的全球网络和 Worker 平台，提供从**身份认证**、**安全传输**、**状态管理**到**客户端兼容性**和**测试工具**的一站式解决方案，旨在解决传统本地 MCP 模式的局限性，推动 MCP 成为一种更普适、更易用、更安全的下一代互联网应用交互协议。

---

**Mermaid 概念图:**
<Mermaid_Diagram>
graph LR
    subgraph "传统MCP模式 (本地)"
        direction LR
        P1[用户] --> P2(本地桌面软件\n如Cursor)
        P2 --> P3(本地安装/托管\nMCP服务)
        P3 --> P4(本地或远程API)
        style P1 fill:#f9f,stroke:#333,stroke-width:2px
        style P2 fill:#f9d,stroke:#333,stroke-width:1px
        style P3 fill:#f9d,stroke:#333,stroke-width:1px
        style P4 fill:#f9d,stroke:#333,stroke-width:1px
        P_Limit[("局限性:\n- 需本地安装\n- 访问受限\n- 部署复杂")]
        style P_Limit fill:#ffeded,stroke:#f44,stroke-width:2px,color:#a00
    end

    subgraph "Cloudflare MCP 云端解决方案"
        direction TB
        CF_Core[("CF MCP 云端服务\n(托管在Cloudflare Worker)")];
        style CF_Core fill:#cff,stroke:#33a,stroke-width:2px,color:#006

        subgraph "CF关键组件"
            direction TB
            CF_Auth["Worker OIDC Provider\n(身份验证/授权)"]
            CF_Agent["MCP Agent (Agent SDK)\n(远程传输/状态保持)"]
            CF_Remote["MCP Remote\n(客户端兼容)"]
            CF_Playground["Playground\n(在线测试工具)"]
            style CF_Auth fill:#dff,stroke:#066,stroke-width:1px
            style CF_Agent fill:#dff,stroke:#066,stroke-width:1px
            style CF_Remote fill:#dff,stroke:#066,stroke-width:1px
            style CF_Playground fill:#dff,stroke:#066,stroke-width:1px
        end

        U1[用户] --> B1(浏览器/App\n无需安装软件)
        B1 -->|远程调用| CF_Core
        CF_Core --- CF_Auth
        CF_Core --- CF_Agent
        CF_Core --- CF_Remote
        CF_Core --> API(后端API/第三方工具)
        CF_Playground -->|测试连接| CF_Core
        style U1 fill:#f9f,stroke:#333,stroke-width:2px
        style B1 fill:#efc,stroke:#333,stroke-width:1px
        style API fill:#ddd,stroke:#333,stroke-width:1px
    end

    subgraph "主要优势与价值"
        direction TB
        B_Access[("提升可访问性\n(跨设备/地域)")]
        B_Simplicity[("简化用户体验\n(无需安装/管理)")]
        B_Security[("增强安全与控制\n(精细权限管理)")]
        B_Stateful[("支持状态化服务\n(复杂交互)")]
        B_Standard[("推动商业化/标准化")]
        style B_Access fill:#cfc,stroke:#060,stroke-width:1px,color:#030
        style B_Simplicity fill:#cfc,stroke:#060,stroke-width:1px,color:#030
        style B_Security fill:#cfc,stroke:#060,stroke-width:1px,color:#030
        style B_Stateful fill:#cfc,stroke:#060,stroke-width:1px,color:#030
        style B_Standard fill:#cfc,stroke:#060,stroke-width:1px,color:#030
    end

    P_Limit -->|Cloudflare解决| CF_Core
    CF_Core --> B_Access
    CF_Core --> B_Simplicity
    CF_Auth --> B_Security
    CF_Agent --> B_Stateful
    CF_Core --> B_Standard

    linkStyle 0 stroke:#f44,stroke-width:2px,color:red;
    linkStyle 1,2,3,4,5,6,7 stroke:#33a,stroke-width:1.5px;
    linkStyle 8,9,10,11,12 stroke:#060,stroke-width:1.5px;

</Mermaid_Diagram>

Content:
每天分享一个AI在各行业的应用案例大家好,这里是AIGC令可我们今天来介绍一下Curled Fraud的支持的MCP它的话开启了MCP云端脱管的新时代也为MCP未来服务的商业化扩宽道路,扑行了更多的一些道路然后相当于是传统的软件桌面软件到互联网应用的一个过渡然后使得未来MCP服务不再是一代于本地电脑了我们都知道在之前我要用MCP服务的话我必须要用本地的软件电脑上要需要装个软件比如说Curled Cursor之类的软件对吧然后我才能在软件里面去运行这个MCP在本地需要做MCP安装那么现在有了Curled Fraud的MCP之后我不需要装任何软件我在榴栏器里面就可以用这个MCP远程序用MCP服务它相当实现了这么一价值相当于有时候把人们从原先的需要依赖专灭软件去运行MCP直接给它进化到了我可以远程在榴栏器里面直接去运行MCP不需要装任何软件这个是有非常重大的意义的我们都知道最计算机最早期的时候都是大家只用桌面软件对吧然后在后来后来往有的之后然刚出现了榴栏器然后我可以在榴栏器里面不需要装任何软件就可以用很多工具那么这个是这个现在今天介绍这个Curled Fraud的MCP的这个东西相当于是跨越这么一个时代那么我们下面来具体看一下它的一个介绍MCP的这是榴栏框的官方CF官方他们发布的支持那么它发了四个东西有四个东西来做支持第一个就是相当于这个支持都是为我们处理购件远程的MCP服务解决问题的首先第一个的话是Worker or Super Rider这个东西的话就是说让因为你要远程调用必然会存在健全授权的问题就是远程这种健全的问题如果我直接在本地的软件里面运行那就没有什么要不要授权那这里健全那样的这一种当然我要远程运行你就要对这个使用者做一个驿政就我要驿政它是不是一个安全访问那么这个的话就是Osu这个东西就是Worker or Worker or Super Rider它就是解决这个问题的然后第二个的话是MCP Agent这个东西的话它是Curled Agent这个STK里面的一个类域用于处理远程传输处理远程中这个是卓式现在是在这个原先的SS1就是现在是SS1往下更一层但又高于SDP这一层的一个存在这个我以后下面会详细说一下然后MCP这个Remote这个的话就可以允许原本只支持本地连接的MCP客户端可以远程的MCP服务器进行鞋通工作然后最后一个的话是一个Playground的你在个Playground里面可以去测试你的MCP远程服务然后大概是三个的四个东西我们下面来挨个看它第一个就说我们首先看它的意义就是从远程从本地到远程这样就可以让MCP传给更多的人如果只是在本地的话你受质于比如说你比如说像Cursor只能在电脑上装你手机上不可能装个Cursor那么你对于手机上没法装上人它就没法用MCP就像现在很多人想的手机上用MCP是没法用的那么现在有了这个远程服务之后我们就完全可以在手机上也可以用MCP也就是说使得这个AI这种体能够从外部的服务MCP从MCP这种外部的服务器上访问工具和资源那么就说我们看它价格这传统价格传统价格我们可以看出来你首先需要有一个桌面的像Claude桌面板或者Cursor这一类的扣端然后的话同时你的MCP服务需要在本地安装然后的话你才能掉就在通过MCP本地的服务就掉用远程的APR或者是三方的一些APR等等那么这是与传统的方式那么这种方式有很多局限性的局限性就是说你要不装软件你要不本地装MCP的搜a服务那你就没法运行而CF它的这个MCP出现之后的话使得用户不再需要装本地在本地就是要拖管一个MCP服务了就说用户只需要在自己的流暖器或者说手机的App里面然后来调用MCP扣端在互联网上去调用通过远程调用MCP扣端不管是Cursor的Claude这是MCP协议的各种扣端然后的话同时这个MCP的搜a服务是运行在ClaudeCF上的那么的话通过这种搜a服再去跟APR三方的APR各种交互这样就使得用户不需要在本地去装MCP扣端也不需要在本地去拖管安装本地安装MCP服务这个就大大的方便了让更多的人可以享受的MCP服务了就不需要像以前那么麻烦还需要装一堆专业的边统软件或者专业的各种扣端软件才能用到所以这个是非常非常的有价值的然后的话就说首先我们来看第一个就是身份使用身份一样的这种授权仅仅于MCP批评有使用这个的话就是这个东西很有价值的我们简单讲咱们来讲解一下就是说它更改它除了更改这个传输层之外当我们来构建使用来自中单用户账户信息的时候远程来调用而远程服务的时候我们还需要做身份授权和验证我们需要一种方法来允许用户登录来证明他们是谁以及另外一种方法用用户控制AI代理使用就是AI的代理在使用服务的时候能够访问哪些东西这个东西的话就是说MCP使用O-O-O-SER来解决这个问题啥意思啊简单点说我们都知道MCP里面有很多工具对吧每个MCP服务里面都有一堆工具那么这堆工具的话你如果放的远程的话那么这个时候首先要解决第一个问题就是说我允许哪些人访问我这些访问我的MCP服务然后我允许哪一个就是我允许使用的人访问我这个MCP服务第二个我允许使用的人访问我这个MCP服务里面的驻请哪些工具这个就为远程调用其功的提供了一个非常非常克力度非常细精准控制用户使用全线的这么一套机制那么的话他们官方就是Crow CF官方的话他们相当于做了一个方案用WokeO-O-SER的PRIVADER来解决这个问题然后通过你使用WokeO-O-SER的PRIVADER的话他就自动帮你解决的这个问题自动帮你解决问题啊你记住啊就说这个的话不是说是需要你自己很复杂的去自己写我说是代码等等等等你不需要你只要用它这扶很简单的就能实现这个验证很简单就实现这个验证我举一个简单场景的例子吧就是我允许哪很简单一个例子给大家看一下比如说比如说这个这个是一个PRIVADER的他的PRIVADER就是你在这里可以测试MCP服务那么的话我比如说我本地有一个MCP服务SS1、870、SS1对吧而且这个服务的话我已经我这个服务我有这个MCP服务对吧然后我这个服务的话我这个手需要练结我做扣段我需要练结这个服务那么怎么练结呢我来看我给大家看一下啊我先练结啊练结的时候首先是需要验证我们需要做一个验证稍等啊就是验证了之后你才能练结上这个服务并不是说是你上来就能直接就练成你说这是远程的嘛比如说这个服务是远程的我需要在在这个机器直播现在远程就说是PRIVADER的就是CF他们官方这个远程OK我练结可来个特对吧可来个特之后那么这个时候他会自动去练结来说中间正常来说他是需要验证的我把验证清楚重验证一下就是你要练结上你首先需要验证他这边会谈出一个验证框他需要验证你这个请求然后你如果说Operov的话假如这个用户你有这个比登录机制的各方面能就配合的话那么他就可以帮你验证成功验证成功之后我可以看到了吧我这个MCP服务是一个1加1等于几的这个水计算的一个公司OK我们来我们来看一下等于几OK我们来验证一下这个MCP服那么这个时候他会调用我本地的这个MCP服务然后去完成这个问题1加1等于几他会调用我本地的MCP服务这个工具这个工具里面有一个加法的一个工具加法的一个工具他会直接调用我稍等一下这个反应反应有点慢你让他稍微等一回让他执行吧我为大家就说OK看到了吧他用了这个工具就是MCP服务里面的工具的爱德然后的话他的1加1等于爱看到了吧这个已经给我打了那么这是一个就是Playground的使用办法你可以把你的原则SSE的MCP服务放在这里然后去验证他OK这是第1个这是给大家说的就是这里我们刚刚看到你在练技的时候他就需要验证如果我们在以前用任何MCP服务这几乎没有中间的验证类传的那么他现在帮你做了一个验证那么你要是如果使用这个验证非常方便的用省方式那的话我们来看一下他的一个说明就是我们的MCP服务在接收接收以通过身份验证的用户的信息作为详细参数不需要执行任何检查也无需直接管理这个偷砍就是我们你就是仍然可以完全控制如何验证用户当这个他们登录是看到由按也到他们使用哪个提供商登录就是我们都可以用自带的第三方验证和数钱提供商来自己集成我们下面看一下流程比如说用户首先是用户体制的问题然后由MCP的客户端去做MCP请求然后通过Claw的MCP server这边去请求请求完之后然后返回需要验证然后再有用户去做验证验证完成之后然后再到 server这边去上传对用的问题然后再具用多部的一个进行一个工作流工作流完成之后的话然后再返回这个验证的一个给用户发一个令牌反回用户发一个令牌反回来这个令牌有了之后然后再干嘛呢再去就是使用这个验证的这个这个代码验证的这个令牌再去调用这个中间稍微说一下就这点的话很有意思他这个O-O-S它的验证非常有意思它的验证他帮我们把用户登录的那个验证比如说我我的我的比如我自己网站上这个 mcp服务的话你要登录你首先等用骨骼去登录然后登录了之后骨骼会发给我们一个就是登录的一个验证的一个偷肯令牌那么这个令牌并不是这个令牌不给到用户自己这个令牌会由cf官方他们在claw的mcp这个 server里面去保存保存了之后的话他再给用户去他自己会帮用户去发一个偷肯记住把这里这时候有区别的这个验证并不是说是简单的类似骨骼验证这种他是把骨骼验证作为他作为他的一个基础验证然后在基于骨验证他自己再去给用户发一个自己的验证偷肯那么这个好处什么呢好处就是在于他能够去精准的控制mcp server这个上面的mcp服务里面的所有的工具那工具的可能有十个工具那么比如说第一个工具给A类用户有全线第二个工具给B的用户有全线第三个工具给A和B都有全线那么这个手的话就可以使的这个全线分配变得更容易当其中某个用户的这个偷肯丢失的时候比如说当用户的这个由cfmcp server发布的这个令牌丢失了那么丢失了别被盗了那么这个手的话黑客也只能去访问他们有限的一些工具来来来来来就是暴露这些内容但是对于谷歌的令牌并没有暴露谷歌的给你的令牌就是完整的全线并没有丢掉他只能访问有限的条件有限的东西但不能得到无限的所有的全线所以这个是他凉凉死的这个验证的一个非常好的一个机制所以这是一个然后第一个他底下说了一个例子也这个例子那么的话这里介绍了他为什么要发自己的这个令牌那么这话就是这里又说比如说我们的work不会将上游体弓商出得到的令牌直接传给mcp口误的什么意思呢就他不会就他充当了这个接收上游体弓商就像谷歌验证或者给他把验证就是你别用过登录了谷歌验证谷歌登录登录之后的话谷歌会发一个令牌验证出来然后由他的这个哦 also这个就是mcp us pervite他来去帮我们管这个管这个令牌然后就他来帮我们管这个令牌然后管的这个令牌的话然后再拿这个令牌他再帮我们发一个他把令牌存在这个里面KV里面然后有了这个令牌之后存在这个里面之后他会帮用户发一个令牌他自己发了一个令牌然后的话这个操作就是由他刚才就是官方提供了这个服务来解决的来几个这样的话就防止出现了错误那么这个好处什么呢这个好处在于就说他的使得这个好处就使得mcp服务器可以限制访问并实施比谷歌验证或者给他个验证更精细的一个控制我们都知道mcp服务里面有多个工具对吧一般都有七个八个或多个工具那么如果当我们像mcp扣段发发行的这个令牌丢失的时候那么攻击者也只能获得通过mcp工具明确授权的有钱权限而不是原始令牌的完整防强权限什么意思呢比如说我如果是用原始的这个谷歌给的验证的话那么用那么这个攻击者就能获取我的mcp服务的所有权限但如果说我有这个由这个mcp服务去服务这块就他来发布这个令牌的话那么你就只能访问由他去限制的这个部分的防强权限所以这个这个这个东西是非常非常有价值的这个对于商业化对于整个的远程服务管理是非常有价值的ok这里当他举的一个例子比如说你的mcp服务器来请求用户使用gmail的这个授权的从他们这个gmail账户里面获取电子邮件那么mcp服务器公开的工具范围更展只允许读取来自有限的你指定的这个发现人的旅行预定通知以处理诸如此的这个问题那么我们就可以在mcp服务中强制实施这个约束当你发送给mcp客户端的令牌被泄露的时候由于这个令牌是发给mcp服务器的不是发给这个上游的提供商登录提供商比谷歌拉克拉克拉等等不是发给他们的那么攻击者就没有办法用他来读取任意的电子邮件这个有安全性提供的保障这里非常重要然后再往下我们来看degg服务叫mcp agent这个的话就说可以可以是目前可用的远程传输的要求并且与mcp规范修定是尖绒的然后我们都知道在本地机器之外开放mcp的下一步是开放远程传输层的同系然后在本地机器上远行mcp服务只需要通过sqtiO进行通行就是你只需要通过这个来通行但是mcp服务器能够通过互联网来调用它必须实现远程传输那么今天的话就是agentsdk它的mcp agent就是解决这个问题的然后在后台使用这个东西来保持持久性的打开以方便mcp客户端可以将服务器发送事件sce发送到你的mcp服务器然后而且我使得我们不需要自己边线带马来处理这个传输和序列化那么这个也是非常有价值处理传输这块的那么mcp规范中的其实传输协议也在发动变化这个sjable 保iptp取代了原先的ippss1这就允许与mcp服务器建立无状态的传iptp链接然后就可以选择升级到ssss1并且的话无需mccp客户端将消息发送到与它的链接点不同的端点那么这个就是将随之转变并且只与这个atp 一起工作这样就不需要从头支持对传输协议的这种修定了是这个还是非常有意义的当对于可能很多不是搞技术都不太懂但是你只需要知道这个东西对于整个的远程调用是非常非常重要的基础工作如果没有这个东西远程调用是很难你还需要有很多很多的工作量需要做的那么的话就说这也适用于未来的传输迭代绝大得足mcp的服务器仅公开工具这些工具可以由无状态传输提供的简单远程的mcp的这种scp的这种方法然后就说更复杂的人在这个代理到代理之间的传输需要提示和采样等等的那么就说这个反正就可以帮助我们实现双向通性双向的实施通性然后有状态的mcp服务这个也非常重要就说没有状态的话是一种然后没状态的有状态的人agent take的mcp service然后我们在构建这个mcp服务的时候每个mcp扣端都会通过agent sdk然后的话来保持一个对话比如说你有一个用户练接到你的mcp服务了然后这个sf这边的mcp服务的话服务器会保持一个跟用户之间的对话这样的话就使得用户这个对话能一直存在不至于说是安逸别人聊两句调用一次然后就没有然后了你还要在扣端那边那边就处理这个问题那个就太复杂了那么这个东西其实非常非常有价值的这个这就为构建有状态的mcp打开了大门那么的claw的上的mcp服务器不仅也是这个什么意思我就说 说价值吧它的价值是什么呢它的价值是你通过这个东西就能够使得你的mcp服务的话能够保存一些数据啥意思呢比如说我调用mcp服务在一个会化里面我可能又多次调用mcp服务对吧如果是无状态你只能调用一次然后就调用一次你需要在你本地去保存这个结果然后每次跟上游跟这个服务器mcp服务交互的时候你都需要把之前的这个结果带上然后再去跟他交互然后现在变成有状态之后的话那么这里面很多东西就不需要处理了比如说我让他计算就一加一等二 然后再加三等一几对吧他首先他会调用一个一加一等一几的工具然后紧接他会调这个比如说简移的工具那么的话这个时候是调用了两次工具如果说无状态那就是说这两个是完全分开没有任何观点的然后你就需要带很多餐厦上你就要处理很多幼稠机然后如果说这个是有状态的说白了你就不用管这个就这两个工具怎么调用他就是他这个服务器上搜射过上保存一个对话他可以帮你去了解这个上下文就干这么一个事情ok那么这样的话就对我们就够件复杂的一些个比如说启动自己的外保流暖器触发工作流调用AM模型都能够实现了所以这个也这个东西也非常有价值然后从目前紧支持MCP的客户端连接到远程的MCP服务器那么就说我前面其实也说过了那么官方提供了一个Walker AI Playground的就是完全远程的MCP客户端就说这个客户端的话我记得以前我们也介绍过一个项目就是类似于这样的就这个你通过这个客户端里面就不需要装任何的软件就会用MCP服务那么这个是非常有价值的这么这个对于我们就是未来很多人使用MCP服务就变得更加容易了就是未来而且这个东西未来是可以封装的很多应用里面的使得MCP服务可以变得无处不在以前还是要依赖于软件的现在有这个东西就会不需要软件了所以这个也很有价值然后最后就说你设置等等等的就说底下还有一些说明我这个就不稀说了那么这块官方给个例子就远程够见MCP服务的一个例子有兴趣的话大家可以自己够见一下这个其实这个部阻很简单第一步的话你执行这个命令这里的话就是有一个大牛做的这个代码我觉得它这个还执行挺成我执行了一下是能成功的第一步的话就说你需要创建一个CF上面Crowdeflare上面创建一个MCP server的这么一个Walker的一个这么一个Walker这么一个Walker就说你毕业说你创建好之后那么在你这边就有Mine就有这个Walker看到了吧就会有这个Walker了有这个Walker之后然后紧接着需要你需要启动它CD到这个幕炉底下CD进去之后然后然后再执行MPM Start然后Start然后Start之行之后然后就会服务就会运行在这个上面像我这个打我这个我现在这个运行的比如我现在这个MPM Start我就会我这个服务就能跑起来就说我的MCP服务这个服务就能跑起来跑起来之后的话这个服务其实本质已经在Crowdeflare上了这个服务我这个服务在远程上面的然后按周的话我紧接着我还要在客户端里面去运行一个MCP的一个检查器那么的话我可以执行这两个命令首先第一个这个命令然后就说这个命令执行了之后那么你就可以打开就在这个里面我比如说我把这个执行一下那么这个时候的话他就会打开这个5137我要37这个服务就说在这个为大家看一下就是我刚刚给大家看那个检查器那么检查器就会有就是我就可以在这里去检查验证他了SSESSTATDO或者SS1你把你的MCP服务在这块一放然后你点击这个connector然后这块Approva然后就可以去在本地去检查他是不是用泡泡去你看这个connector对吧用连接起来连接起来就这里面工具我们看一样这个工具啊这透这是工具然后你可以Lister用哪些文别有加法工具看到了吗然后你可以验证1加2然后软工具等一三看到了吗这个结果就有了然后这边有运行的历史然后这边有这个对用的ServerServer的一个Nutrition那么的话就说这边还有Ping你可以Ping这个服务就Ping这个可以Ping这个服务然后这边还有Shermple然后再有这个Root等等等等这边你可以增加个弄种所以的话这个东西你要本地运行可以去测试谈本地可以测试谈好吧OK然后官方其实刚才那个官方给了这个例子那么就说按照它这个方式就可以去做一个简单去不属于MCP服务来跑起来当的话你也可以不属更复杂的比如说给它HUB它这个块它也给了给它HUB的运行方式给它HUB的话就是说可以在这个就是不属MCP服用这个东西不属不属完之后的话就说你如果说要使用它比如说我现在这个不是已经不属好了要使用它你就把这个把这个就是放在你的Cloud的Code单的Cyting里面放在Cyting里面就可以了就说把在这个里面你把它配置上配置上的话你就可以去运行使用这个服务来好吧OK这就是关于这个的一个简单介绍当然就说你如果说要增加三方的一些个验证O-L-S提供商的一个三方验证那么你就可以按下面这个方式去运行体验一下好吧就说你如果用下面这个方式那它在你在执行它的过程中它就会多出一个板块在验证的时候就会多出一个需要你谷歌登录或需要你这个Github登录等等那么这个可以按照自己的需求来验证所以的话这个项目对于整个行业的发展是非常非常有价值的就说我觉得大家有心去可以下去仔细看一看这个对于我们所有的MCP的这种从业者你去购件本远程的MCP服务是非常非常有价值的那么你通过它就可以把你的MCP服务放在远程的这种放在远程的SF上面然后来拖管这个MCP服务OK最后让我们来看一下这两天一些最新的一些消息这两天有些个最新的新稳还是在低点iagclink点iag上我们来看一下首先第一个阿里又放了一个视觉特利模型CovKoMAX这个视觉特利模型它不光能看懂这个图片和视频并且的话能够结合这些信息进行分析推底这个的话我觉得它的价值跟那个Gemene 枪上天i.5的价值是类似的主播它是开源版的然后还有一个Open-A的SDK就是说SDK 构建AZ的工具叫MetaEZinta自然语言描述就可以构建一个Air工具然后这个也非常有意思这个就是说自动化构建AZinta然后再有一个就是图像方向这个清华和微软的一款信息换东线的生存工具叫BasedDent然后这个可以帮你生成这个换东线这个项目对AirPBT领域应该是一个打击OK然后再到这个缩小Popelux City和Open-A的一个开源速走工具叫OpenDapSerts这个的话也是开源的有些人可以自己试一下 好吧我觉得还有一个非常重要的就是Open-A的官方在AZintaSDK中支持MCP服务那么再统一的标准协议一下这将极大的扩展也能力这个东西是非常非常有价对行业的话就是因为Open-A现在支持MCP服务的话如果说下一步谷歌也支持的话MCP服务大概就是未来的一个行业标准AZinta互联网的一个行业标准OK这就是这样的最新一些消息希望对大家有一个帮助如果你觉得不错请帮我们一样三类谢谢
